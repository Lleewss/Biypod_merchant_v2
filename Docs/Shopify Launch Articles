# <a name="header"></a><a name="content"></a><a name="shopify-launch-articles"></a>Shopify Launch Articles
## <a name="launch"></a>Launch
**Launching to the Shopify App Store:** Shopify's Launch section prepares you to get your app live to millions of merchants. Key aspects of this phase include ensuring app quality, meeting all requirements, strategizing pricing, deploying the app, deciding on distribution, and planning long-term support[\[1\]](https://shopify.dev/docs/apps/launch#:~:text=Launching%20to%20the%20Shopify%20App,Store)[\[2\]](https://shopify.dev/docs/apps/launch#:~:text=Shopify%20status%20and%20badge%20gives,audience%20for%20your%20next%20app). In practical terms:

- **Quality and Requirements:** Double-check that your app meets Shopify’s [app quality standards and requirements](#xc13dbf0093a0f87236cb1f849b1ecccd5b66827) before launch. The “Launch” phase emphasizes being a responsible steward of your app’s user experience and data[\[3\]](https://shopify.dev/docs/apps/launch#:~:text=You%E2%80%99ll%20likely%20deploy%20to%20your,audience%20for%20your%20next%20app). Built for Shopify (BFS) status is highlighted as a competitive edge, as BFS apps earn a special badge and other benefits[\[4\]](https://shopify.dev/docs/apps/launch#:~:text=must%20be%20responsible%20stewards%20of,audience%20for%20your%20next%20app).
- **Pricing Strategy:** Determine how you will charge merchants (free, one-time purchase, subscription, etc.) and set this up via Shopify’s billing API or Managed Pricing[\[1\]](https://shopify.dev/docs/apps/launch#:~:text=Launching%20to%20the%20Shopify%20App,Store). A thoughtful pricing model can improve adoption – for example, offering a free trial or freemium tier to lower the barrier for new users.
- **Deployment:** You will likely deploy your app to your own hosting environment (or a cloud service) as well as connect it to Shopify. Ensure your app’s OAuth, webhook handling, and other technical pieces are production-ready[\[5\]](https://shopify.dev/docs/apps/launch/deployment#:~:text=Anchor%20to%20How%20it%20worksHow,it%20works). (See [About deployment](#about-deployment) for details on preparing and pushing your app live.)
- **Distribution & App Review:** Decide on a distribution method (public vs. custom app) and follow the steps to submit your app for Shopify’s review[\[6\]](https://shopify.dev/docs/apps/launch/deployment#:~:text=Before%20deploying%20your%20app%3A)[\[7\]](https://shopify.dev/docs/apps/launch/deployment#:~:text=,functionality%20in%20a%20development%20environment). For a public app, you’ll go through the App Store review process – prepare your app listing and test your installation flow thoroughly before submission.
- **Post-Launch & Support:** Once live, benefit from the built-in audience of millions of Shopify merchants who can find your app on the App Store. Keep in mind that **0% revenue share** is taken by Shopify on your first $1,000,000 USD in annual app revenue, which can significantly boost your earnings[\[2\]](https://shopify.dev/docs/apps/launch#:~:text=Shopify%20status%20and%20badge%20gives,audience%20for%20your%20next%20app). After launch, continue to support your users and iterate on feedback – a successful launch is the beginning of an ongoing cycle of improvement and customer support.
## <a name="xc13dbf0093a0f87236cb1f849b1ecccd5b66827"></a>Checklist of requirements for apps in the Shopify App Store
**Overview:** This comprehensive checklist is what Shopify’s App Review team uses to evaluate **all public apps** (both listed and unlisted)[\[8\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Checklist%20of%20requirements%20for%20apps,in%20the%20Shopify%20App%20Store). By following these requirements, you ensure a smooth review process and a high-quality merchant experience. The requirements cover everything from **app content and behavior** to **installation, UX, performance, listing, security, privacy, and support**. They also include additional rules for certain app types. Notably, these requirements are updated over time – your app is expected to comply with any new rules that Shopify introduces[\[9\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Caution). Below is a breakdown of the major sections:

- **General Requirements for All Apps:** Your app must comply with Shopify’s core platform rules. For example, it **must use OAuth for authentication**, handle session tokens properly, and subscribe to required webhooks (like app/uninstalled)[\[10\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=7,to%20mandatory%20webhooks)[\[11\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=7,to%20mandatory%20webhooks). It should also follow the API Terms and Partner Program Agreement at all times (good Partner standing is mandatory). Essentially, any app on the App Store should behave like a trustworthy extension of Shopify.
- **1. Prohibited and Restricted App Configurations:** Certain kinds of apps are **not allowed** on the App Store[\[12\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Some%20types%20of%20apps%20aren%27t,visibility%20set%20to%20limited%20visibility). This includes:
- **Apps that require separate software or hardware:** For instance, an app that needs a separate desktop program is not permitted[\[13\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,as%20part%20of%20the%20app).
- **Apps heavily reliant on human services:** If your solution is primarily a person-to-person service (e.g., custom design work) rather than software, Shopify advises offering it through the Partner Services marketplace instead[\[14\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=computer%20,service%20in%20our%20Partner%20Directory).
- **Apps with minimal Shopify API usage:** Apps must add real value on Shopify’s platform. If an app barely uses Shopify’s APIs, it can’t be listed (merchants shouldn’t have to install an app that doesn’t actually integrate with Shopify)[\[15\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,information%20in%20popups%20and%20notifications).
- **Misleading or dishonest apps:** Apps must not falsify data or mislead merchants/buyers. All messaging must be factual and in line with Shopify’s policies[\[16\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,with%20such%20activity%2C%20are%20prohibited).
- **Off-Shopify payment processing:** Apps cannot bypass Shopify Checkout for payments or otherwise process transactions outside of Shopify’s system[\[17\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,in%20our%20Partner%20Program%20Agreement).
- **Duplicate apps:** You can’t submit multiple apps with the same functionality under different names (no “clones” to game search results)[\[18\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=with%20such%20activity%2C%20are%20prohibited,in%20our%20Partner%20Program%20Agreement).
- **Marketplace or multi-store apps:** Apps that turn a merchant’s store into a multi-vendor marketplace are not allowed via the App Store[\[19\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Agreement%20www,Apps%20that%20provide%20capital).
- **Capital or loan apps:** Apps offering loans, cash advances, etc., cannot be listed due to monitoring and merchant protection concerns[\[20\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=their%20stores%20into%20marketplaces%20can%27t,your%20app%20has%20been%20granted).
- **Apps using private/beta API scopes:** If your app relies on API scopes that are in beta or not publicly available, it **cannot be submitted** until those APIs are public[\[21\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=receivables,provide%20merchant%20data%20to%20one).
- **Data brokers:** Apps primarily sharing merchant data with third parties need *prior written consent* from Shopify[\[22\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=visit%20the%20,third%20party%20that%20receives%20merchant).
- **Developer/agency marketplace apps:** Apps that just connect merchants with external developers or agencies aren’t allowed[\[23\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=to%20be%20listed%20on%20the,through%20the%20Shopify%20App%20Store).
- **Browser extensions as a requirement:** If your app **requires** a browser extension to function, that’s not permitted (browser extensions can only be optional add-ons)[\[24\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=11,permitted%20as%20an%20optional%20feature).
- **Apps handling refunds outside Shopify:** Except for issuing store credits, apps shouldn’t process refunds through external means[\[25\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=12,Gateway%20apps%20must%20be%20authorized).
- **Unauthorized payment gateways:** Payment apps must go through Shopify’s official approval process and use the Payments API; otherwise they’re prohibited[\[26\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=processing%20payments%20aren%27t%20permitted%20on,the%20requirements%20for%20more%20information).
- **Theme store bypass:** Apps must not allow downloading or installing Shopify themes outside of the official Theme Store[\[27\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=through%20an%20application%20process%20,Your%20app%20should).
- **Product duplication hacks:** Apps can’t blindly copy products from any store or website without proper rights. Claims like “import any product from any site” are not acceptable[\[28\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=to%20download%20themes,a%20Chrome%20extension%2C%20aren%27t%20acceptable).
- **Third-party POS integrations:** Apps that integrate with external (non-Shopify) Point-Of-Sale systems are not being accepted at this time[\[29\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=aren%27t%20acceptable,or%20checkouts%20%E2%80%94%20Apps%20can%27t).
- **Auto-added cart fees:** Apps **cannot** automatically add extra charges to carts or checkouts without clear disclosure and explicit user consent (no hidden fees)[\[30\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=19,store%20pickup%2C%20local).
- **Default shipping price increases:** Apps must not alter shipping options to make a more expensive option pre-selected by default[\[31\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=buyer%2C%20and%20upon%20obtaining%20explicit,local%20delivery%2C%20and%20pickup%20points).

*Why this matters:* If your app falls into any of these categories, it will be rejected[\[12\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Some%20types%20of%20apps%20aren%27t,visibility%20set%20to%20limited%20visibility). Ensure your app’s functionality is in the clear. For example, if you were building a multi-currency pricing tool that added hidden fees – that would violate #18 and #19 above, leading to rejection.

- **2. Installation and Setup:** This section ensures merchants can quickly install and start using your app with minimal friction[\[32\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%202,Installation%20and%20setup). Key requirements:
- **OAuth First:** Upon installation, your app **must immediately initiate OAuth authorization**. No other setup screens should come before the OAuth flow[\[33\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A). (Even if a merchant reinstalls your app, run OAuth again to re-confirm scopes.)
- **No UI before OAuth:** The merchant shouldn’t see or use any app UI until they’ve approved the OAuth permissions[\[33\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A).
- **Redirect after OAuth:** Once permissions are accepted, redirect the user into your app’s UI (typically an embedded app page in the Shopify admin)[\[34\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,or%20for%20approved%20use%20cases).
- **Request only necessary scopes:** Only ask for the data access scopes your app truly needs[\[34\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,or%20for%20approved%20use%20cases). Over-scoping can lead to denial.
- **Embedded installation:** If your app connects shops or installs other apps, those flows must go through the App Store listing (no direct API-based installation via shop URL)[\[35\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20C,Setup%20and%20merchant%20workflows).
- **No manual “myshopify.com” input:** Your app should never ask the merchant to type in their store URL or manually authenticate – use Shopify’s OAuth redirect flow and App Bridge context for embedded apps[\[36\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=shop%20or%20install%20other%20apps,Shopify%20App%20Store%20listing%20first).
- **Avoid pop-ups for critical flows:** Don’t use browser pop-ups for OAuth, payment charge approval, or other essential steps. Pop-ups can be blocked or present security issues[\[37\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=during%20the%20installation%20or%20configuration,flow).
- **If app adds post-purchase charges:** For apps that create additional charges after checkout (like post-purchase upsells), you must **inform merchants** that multiple payments might occur per order[\[38\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,payment%20for%20a%20single%20order) (e.g., clearly note this in your app listing and onboarding).
- **3. Functionality and Quality:** To be successful, your app must provide a positive, consistent experience. This section includes:
- **A. User Interface:** Your app **must load a usable UI** every time, regardless of how it’s launched[\[39\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,actions%2C%20or%20%2089%20admin). No broken pages or generic errors – merchants should never encounter a dead end or be forced to use only backend settings. For example, an app that only works via an external dashboard and shows nothing in Shopify would fail this rule[\[40\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,within%20the%20app%27s%20user%20interface).
  - Also, if your app causes “secondary payments” (like additional charges later), you have to **explicitly inform merchants** within the app UI and listing[\[41\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=acceptable,related%20apps%2C%20or%20request%20reviews) (so they aren’t surprised when capturing payments).
  - **Don’t misuse Shopify admin extensions**: If you integrate with Shopify admin (using admin links, admin action buttons, etc.), you **cannot** use those to self-promote or nag for reviews[\[42\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=method,provide%20novel%20functionality%20or%20content). Those UI elements should be purely functional, not marketing.
  - Any embedded admin components you add (like a link in Orders or a product editor block) should be fully functional and provide clear value[\[43\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,provide%20novel%20functionality%20or%20content).
  - *Tip:* Use Shopify Polaris design system for embedded apps to match Shopify’s look and feel. A polished, familiar UI will meet merchant expectations (and reviewers notice this).
- **B. Billing:** Shopify **requires** that all charges to merchants go through Shopify’s billing system. Specifically, your app **must use Shopify’s Billing API or the managed pricing system** for any fees[\[44\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,received%20an%20exemption%20from%20Shopify). You *cannot* charge merchants directly via credit card or an external payment gateway, unless explicitly exempted by Shopify[\[45\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,received%20an%20exemption%20from%20Shopify).
  - Additionally, merchants should be able to **upgrade or downgrade plans without contacting you** – it should be self-serve within the app[\[46\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20Billing%20API%20requirementsBilling,API%20requirements). If you offer a higher “enterprise” tier outside the app’s normal plans, that must be referenced in your app listing’s “Additional charges” section[\[47\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3.%20Enterprise,section%20of%20the%20app%27s%20listing).
  - On reinstallation, if the merchant had a previous charge, your app should detect that and not double-charge – implement logic to handle recurring charge re-approval gracefully (the Billing API provides mechanisms for this)[\[48\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=additional%20charges%20section%20of%20the,section%20of%20the%20app%27s%20listing).
- **C. App Stability (State of the App):** Your app must be **complete and testable** – no obvious bugs, and all primary functions should work without errors[\[49\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,reviewers%20from%20testing%20the%20app). Reviewers will fail apps that have broken buttons, JS errors, or missing pieces.
  - Apps should not significantly change their core functionality from what was approved. If you pivot or rebuild the app into something very different from what was originally reviewed, Shopify can require a fresh review[\[50\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=an%20action%20has%20failed).
  - If your app syncs data between Shopify and an external system, that data must remain consistent across platforms[\[51\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,for%20a%20full%20App%20review). (E.g., an inventory sync app must truly keep Shopify and the external inventory in agreement.)
- **4. App Performance:** Slow or inefficient apps hurt merchants. Requirements here focus on **minimizing any performance impact**:
- Apps that inject code into storefronts (via ScriptTags or App Blocks) should **not reduce storefront Lighthouse performance scores by more than 10 points[\[52\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Performance%20score)**. You’re expected to test this and provide results during submission (they may ask for a Lighthouse report screenshot)[\[53\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,prior%20to%20the%20review%20process).
- If your app uses the read\_advanced\_dom\_pixel\_events scope (for heatmaps or session recording on checkout), you **must implement it exactly as documented** so that it only runs on checkout pages and follows Shopify’s requirements[\[54\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,according%20to%20the%20API%27s%20requirements).
- Shopify’s guidance is to constantly monitor and optimize performance – e.g., load scripts asynchronously, use caching, etc. (They even have an [App Performance Recommendations guide[\[55\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Tip)).
- **Testing methodology:** Shopify will test apps that affect online stores by measuring store speed before vs. after installation across key pages (Home, Product, Collection)[\[56\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=For%20apps%20that%20affect%20storefronts,score%20from%20the%20following%20pages). Your app should show “low or no negative impact” consistently[\[57\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20difference%20in%20the%20score,real%20merchant%20stores%20over%20time). Variability is acknowledged, but you should design for minimal slowdown.
- **5. App Listing:** Your app’s listing is essentially your storefront on the App Store. Requirements here ensure listings are clear and honest:
- The listing should **clearly explain what the app does, its features, and pricing**, so merchants can quickly understand the value[\[58\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%205,App%20listing)[\[59\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20app%20listing%20submission%20form,lets%20you%20do%20the%20following). Avoid vague marketing fluff – be specific about capabilities.
- Provide high-quality **feature images or videos** following Shopify’s media guidelines. For example, feature videos should be under 2 minutes and focus on the product (no low-quality screen recordings or irrelevant content) – Shopify gives [guidelines for feature media[\[60\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=understand%20how%20it%20can%20help,the%20benefits%20of%20your%20app)[\[61\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Note).
- **No misleading use of Shopify branding:** You **cannot use Shopify’s name or logo in your app icon or name** in a way that implies it’s an official Shopify product[\[61\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Note). (For instance, don’t name your app “Shopify SEO Optimizer” – that’s disallowed.)
- The listing must also include accurate pricing information (including any additional fees outside the base charge). If your app has any external fees, they should be described in the “Additional charges” section on the listing to set correct expectations[\[62\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3.%20Enterprise,section%20of%20the%20app%27s%20listing).
- If your app is available in multiple languages or you want to translate your listing, follow the process for adding translated listings so non-English-speaking merchants see your app in their language[\[63\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=match%20at%20L595%20).
- **6. Security and Merchant Risk:** Security is critical. Shopify wants to ensure apps don’t introduce vulnerabilities:
- **Data handling:** Your app **must not ask for or store Shopify admin passwords** or any Shopify credentials – always use OAuth tokens[\[64\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,use%20session%20tokens%20and%20OAuth). Public apps must use OAuth with session tokens if embedded.
- If you store your own user credentials (for a separate service), they must be securely hashed (e.g., BCrypt) – no plaintext passwords[\[65\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=apps%20must%20use%20session%20tokens,and%20OAuth).
- Protect against **OWASP top vulnerabilities** like XSS, SQL injection, CSRF, etc.[\[66\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,against%20common%20web%20security%20vulnerabilities). Reviewers might test basic security (e.g., can they manipulate an ID in a URL to see data they shouldn’t?).
- Serve your app over HTTPS with a valid SSL certificate (no security warnings should appear)[\[67\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=vulnerabilities%20).
- **Embed security:** If your app is embedded, ensure it uses Shopify’s X-Frame headers approach (App Bridge) and not vulnerable to clickjacking – Shopify specifically required apps to use the new admin.shopify.com domain by Jan 31, 2024[\[68\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Caution). (This refers to loading in an iframe on the new admin domain and using App Bridge 3.0+).
- **Webhooks:** Subscribe to mandatory webhooks (like app/uninstalled) to react accordingly (clean up data, etc.)[\[69\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,expose%20network%20services%20unnecessarily).
- **Keep secrets secret:** Don’t expose your API secret or access tokens in front-end code or logs. If leaked, rotate immediately[\[70\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,must%20rotate%20the%20secret%20immediately).
- **Token generation:** Any tokens or API keys you generate for merchants should be sufficiently secure (random, with expiration) and not guessable[\[71\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=9,a%20shop%27s%20offline%20access%20token).
- **No off-platform checkout fiddling:** Apps must not process payments outside Shopify or alter the actual checkout except via official APIs[\[72\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=11,orders%20outside%20of%20Shopify%27s%20checkout). For example, you can’t inject a script to change checkout behavior beyond what extensions allow.
- If your app captures payments via Admin API (e.g., post-purchase upsell capturing additional funds), it must listen to the ORDERS\_EDITED webhook to handle cases where orders are edited and require a new capture[\[73\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=13,payment%20needs%20to%20be%20captured).
- **App Proxy security:** If you use an App Proxy, validate all requests to ensure they truly come from Shopify[\[74\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=14,must%20%20189%20of%20requests) (HMAC validation of query params).
- **7. Data and User Privacy:** Apps must respect personal data laws and Shopify’s privacy requirements:
- **Comply with privacy laws:** If your app handles personal data (whether merchant or their customers), **ensure you follow laws like GDPR, CCPA, etc.[\[75\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Data%20and%20user%20privacy)**. Provide a privacy policy link in your listing to inform merchants how you use data[\[76\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,it%20complies%20with%20privacy%20laws).
- If your app deals heavily with customer personal data, have proper data management – secure storage, and the ability to delete data upon request (GDPR “right to be forgotten”)[\[77\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,the%20data%20rights%20of%20individuals).
- For marketing/advertising functionalities, obtain necessary consent from end-users and allow opt-outs as required by law[\[78\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,for%20marketing%20promotions%20where%20applicable).
- All public apps **must subscribe to data deletion webhooks** (customers/redact, etc.) so that if a merchant or customer requests data deletion, you act on it[\[79\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,that%20are%20issued%20by%20merchants).
- If your app collects customer data via a Shopify storefront or POS, you are **required to sync that data back to Shopify** (so merchants have it in their admin)[\[80\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,sent%20back%20to%20the%20merchant). For instance, if you gather emails through a widget on the store, those emails should be stored in Shopify (e.g., Customer records or metafields) as well[\[80\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,sent%20back%20to%20the%20merchant).
- If your app is subject to special regulations (like export-controlled encryption tech requiring an ECCN), you must provide that info in the app’s config in Partner Dashboard[\[81\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=customer%20data%20must%20be%20sent,back%20to%20the%20merchant).
- **Protected Customer Data:** If your app needs access to sensitive customer data fields (like email, phone, address, etc.), Shopify classifies this as “protected customer data.” You **must go through an access request and approval process** and implement additional privacy measures[\[82\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,to%20all%20%209%2C%20including). (See [Work with protected customer data](#work-with-protected-customer-data) below for details.)
- **8. Support:** After launch, you need to support merchants using your app:
- **Provide a support contact (email) and respond promptly[\[83\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A)**. Shopify requires an active support email (or other channel) in your app listing. Merchants often need help with setup or issues, and slow/unhelpful support can lead to poor reviews or even app penalties.
- Make it easy to find support info – both on your App Store listing and within the app UI. Many apps include a “Help” or “Docs” link in their embedded app nav.
- You’re expected to provide documentation or in-app guidance especially for complex setups. Good onboarding reduces support load and is viewed favorably by Shopify.
- Ensure staff members handling support have access to necessary tools and have the **“Manage support” permission** in your Partner account if applicable.
- **Specific Requirements for Certain App Configurations:** In addition to the general requirements above, there are **special rules for specific app categories** (sections 9 through 19 of the checklist[\[84\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=,68)):
- **Online Store (Section 9):** Apps that inject into online storefronts must use theme app extensions for any theme code changes[\[85\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Online%20store) – merchants shouldn’t have to edit liquid code manually for your app. Also, any storefront widget needs to display correctly in both the live store *and* the Theme Editor preview[\[86\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=added%20to). Merchants should be able to **preview any visual changes** your app makes before committing them[\[87\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=promote%20related%20apps%2C%20or%20request,reviews). If you add App Blocks, they must be responsive and allow merchants to reposition or remove them easily[\[88\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,blocks%20in%20the%20theme%20editor). Essentially, **clean installation and clean removal** are key for storefront apps. (Uninstalling your app should automatically remove any theme changes – Shopify’s theme app extension framework handles this, which is why it’s required.)
- **Embedded Apps (Section 10):** If your app has an embedded admin component or POS component:
  - It **must use Shopify App Bridge** for embedded navigation and OAuth to properly load in the admin iframe[\[89\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,embedded%20version%20of%20the%20app).
  - All primary workflows should occur inside the Shopify admin UI – don’t constantly send merchants out to an external site for core features[\[90\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,directly%20within%20the%20Shopify%20admin). (Some exceptions exist for apps that genuinely require an external interface, but generally, embedded is preferred.)
  - Your app should **provide a 16x16px icon** for the Shopify admin sidebar, following the file requirements (SVG only, limited tags/attributes)[\[91\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,that%20meets%20the%20following%20requirements)[\[92\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,title).
  - Bulk actions, if you add them to Shopify admin (like a bulk action on orders), must work reliably and apply to all selected items[\[93\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=%60clip).
  - You should include the latest App Bridge script and not rely on deprecated versions[\[94\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,script%20element%20of%20the%20body).
  - The **“maximized” (full-screen) modal** mode (formerly called full-screen) should only be used when necessary (complex data editing) and **must not open without user action[\[95\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=the%20body)**. It also shouldn’t be triggered from the nav menu directly (only within your app UI).
  - Your app should work in incognito mode and without third-party cookies (use session tokens, not rely on cookies for auth)[\[96\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,in%20incognito%20mode%20in%20Chrome).
  - For POS embedded apps, any cart or checkout actions must be fully functional and relevant (e.g., adding a custom item to cart works properly)[\[97\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20B,Embedding%20into%20POS), and your app should also be accessible from the POS Apps admin in Shopify[\[98\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Image%3A%20An%20example%20of%20an,the%20POS%20Apps%20Admin%20Dashboard).
- **Product Sourcing Apps (Section 11):** If your app helps merchants find products (dropshipping, print-on-demand, etc.), there’s an exemption allowing you to use your own payment gateway for the sale of goods (since merchants pay the supplier through the app) – *but* any app usage fees still must go through Shopify Billing[\[99\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Product%20sourcing). In other words, you can charge for the products themselves off-platform, but if you charge the merchant a subscription or usage fee for using the app, that goes through Shopify.
- **Mobile App Builders (Section 12):** (Not explicitly covered above, but likely) If your app builds a mobile app for the merchant’s store, ensure you comply with any mobile-related guidelines and possibly coordinate with Shopify’s Mobile App (Shopify Mobile Storefront API, etc.). [The checklist likely has points about ensuring parity between web and mobile store features].
- **Sales Channel Apps (Section 13):** Sales channel integrations have their own requirements (like proper use of the Sales Channel SDK, listing products, syncing orders). If you’re building one, refer to Shopify’s sales channel docs and ensure things like checkout and order management align with guidelines.
- **Purchase Option Apps (Section 14):** Apps offering new ways to purchase (subscriptions, try-before-you-buy, rentals) must follow the [Purchase Options API rules]. For instance, subscription apps should use Shopify’s Subscription APIs and not create their own recurring billing outside Shopify (Shopify now requires use of their subscription APIs for any subscription functionality).
- **Donation Apps (Section 15):** If your app facilitates donations (e.g., rounding up for charity), it likely needs to follow certain guidelines, such as clearly informing buyers, proper receipt documentation, etc.
- **Payments Apps (Section 16):** Payment gateway apps have a whole separate onboarding and requirements (e.g., PCI compliance). They *must* go through Shopify’s payment app approval and use the Payments App API[\[26\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=processing%20payments%20aren%27t%20permitted%20on,the%20requirements%20for%20more%20information).
- **Post Purchase Apps (Section 17):** These apps extend the checkout thank-you page. They have to use Shopify’s Post-Purchase extension framework and abide by its rules (for example, only one post-purchase offer page, and offering a clear skip option to buyers). Also, as noted, if they capture payment after checkout, they need to handle those webhooks and communication properly[\[73\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=13,payment%20needs%20to%20be%20captured).
- **Checkout UI Extensions (Section 18):** Apps extending checkout need to strictly use the Checkout Extensibility APIs. They cannot alter checkout outside those APIs. (For example, an app can’t inject a script that directly manipulates checkout fields – it must use Shopify’s provided extension points.)
- **Blockchain Apps (Section 19):** Likely guidelines if your app uses blockchain (for example, NFT token-gating or crypto payments). Possibly restrictions on minting NFTs or requiring that any crypto payments still follow certain flows.

*Each category in Sections 9–19 of the checklist has detailed points.* If your app falls into any of these, carefully read that section in Shopify’s docs[\[85\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Online%20store)[\[100\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,need%20to%20use%20app%20proxies). For brevity, we won’t list every item here, but as an example from **Online Store apps** (Section 9): - You must use theme app extensions for theme changes (no instructing merchants to paste code, ideally)[\[85\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Online%20store). - If your app adds visual elements, merchants should get a Theme Editor preview and an easy way to remove those elements[\[87\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=promote%20related%20apps%2C%20or%20request,reviews)[\[101\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,your%20app%27s%20visual%20storefront%20components). - When merchants uninstall, any residual code or script your app added should be gone (clean uninstall) – the use of app extensions ensures this[\[102\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,Theme%20Editor%20and%20Online%20Store).

**In summary**, the checklist is a *must-read* if you’re launching a public app. It’s exhaustive, but following it increases your app’s chance of quick approval and long-term success. Shopify’s reviewers use this list to check your app, so you can use it as a pre-launch audit tool. Many partners even print it out or convert it to an actionable to-do list for their dev team. By adhering to these standards (on installation flow, UX, performance, security, etc.), you not only pass review but also deliver a better product to merchants[\[103\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20following%20requirements%20are%20used,you%20submit%20your%20own%20apps).
## <a name="about-built-for-shopify"></a>About Built for Shopify
**Built for Shopify (BFS)** is a program and badge that highlights top-quality apps. Shopify created a set of advanced app quality criteria, and apps that meet *all* of these criteria earn the **Built for Shopify status[\[104\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=experience%2C%20and%20the%20success%20of,Some%20achievements%20are%20automatically)[\[105\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Built%20for%20Shopify%20status%20Built,at%20the%20top%20of%20the)**. The idea is to encourage apps that are **easy to use, secure, performant, and solve merchants’ problems effectively[\[106\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=More%20and%20more%20merchants%20join,you%20can%20qualify%20for%20smaller)**. Here’s what **Built for Shopify status** means and why it’s valuable:

- **Recognition and Promotion:** BFS is the **highest level of achievement** for an app on the platform[\[107\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Built%20for%20Shopify%20status%20Built,Built%20for%20Shopify). Apps with this status get a special **“Built for Shopify” highlight on their App Store listing** and a **badge** on their app card (visible in search results and categories)[\[108\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=your%20app%20receives%20the%20following,badge%20will%20be%20visible%20on). There’s even a filter in the App Store so merchants can choose to see only BFS apps[\[109\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Image%3A%20An%20image%20of%20the,that%20are%20Built%20for%20Shopify).
- **Trust and Quality Signal:** When merchants see the BFS badge, they know the app has been vetted to a higher standard, which can significantly increase their confidence in installing it. This status indicates the app meets Shopify’s most stringent quality, UX, and performance benchmarks[\[106\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=More%20and%20more%20merchants%20join,you%20can%20qualify%20for%20smaller).
- **Benefits for Developers:** Beyond just a badge, BFS comes with tangible perks:
- **Priority in Search:** BFS apps receive a **search ranking boost**. They rank higher in App Store search results than they otherwise would, even compared to other apps that have generic boosts (e.g., from good ratings)[\[110\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=%5Bspecific%20merchant%20plans%5D%28%2Fdocs%2Fapps%2Flaunch%2Fmarketing%2Fadvertising%2Fcreate,An%20image%20of%20an%20app).
- **Advertising advantages:** Developers of BFS apps can do things like target ads by merchant segment (for example, show ads only to Plus merchants) – a feature exclusive to “Built with Shopify” developers[\[111\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=based%20targeting%20for%20Shopify%20App,This%20collection%20is).
- **App Store Homepage Featuring:** BFS apps are eligible to be recommended on the App Store homepage’s personalized collection for merchants (the first collection a merchant sees)[\[112\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=apps%20appear%20higher%20in%20Shopify,You%27ll%20be%20eligible%20to%20be). While not guaranteed, BFS apps are in the pool for these prime placements.
- **Shopify Admin Recommendations:** BFS apps can also be suggested in the **“Picked for you”** modal inside a merchant’s Shopify admin[\[113\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Eligible%20for%20discovery%20through%20the,Eligible). This is another channel for app discovery reserved for top-tier apps.
- **Story Page Features:** Shopify sometimes creates “story pages” highlighting how merchants succeed with apps. BFS apps are eligible to be featured in these across the App Store (homepage, search, category pages)[\[114\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=This%20collection%20is%20personalized%20for,Apply%20for%20Built).
- **Faster Future Reviews:** If you attain BFS and later submit additional apps, those new apps get **priority in the review queue** (Shopify puts BFS developers’ submissions in a faster lane)[\[115\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=merchants%20search%20for%20apps%20on,all%20the%20same%20requirements%2C%20but). You still must meet all requirements, but you’ll generally get reviewed more quickly.
- **Intermediate Achievements:** On the way to BFS, Shopify has *other* achievement badges (like app highlights)[\[116\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criteria,page)[\[117\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=status%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbuilt,%2A%2ABuilt%20for). For example, an app might get a highlight like “Works with the latest themes” if it uses Theme App Extensions properly[\[118\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=functionality%2C%20it%20might%20qualify%20for,business%3A%20Use%20directly%20in%20the), or “Great for merchants on Shopify Plus,” etc. These highlights appear on your listing as indicators of quality and can be earned individually. Some are automated, others require application or certain criteria. They don’t give as many benefits as BFS, but they improve your listing’s appeal.
- **Automatic vs. Manual Criteria:** Many BFS criteria are checked automatically by Shopify (things like performance metrics, install counts, etc.), while some require you to **apply for evaluation** (like manual UX review points)[\[119\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=%5Bachievements%5D%28%23other,Some%20achievements%20are%20automatically). You can monitor which criteria your app meets via the **Distribution** section of your Partner Dashboard[\[120\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=others%20require%20you%20to%20apply,app%20in%20your%20Partner%20Dashboard). Shopify won’t grant BFS until all criteria are met, and some you might not meet immediately (e.g., you need at least 50 installs and 5 reviews – see BFS requirements below).
- **Applying for BFS:** You can apply for BFS status at any time once you’ve met the prerequisite criteria[\[121\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=receive%20additional%20promotion%20in%20the,shopify%23app)[\[122\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=more%20visible%2C%20and%20more%20likely,Apply%20for%20Built%20for). The Partner Dashboard will show an “Apply for Built for Shopify” button when you’re eligible. After applying, Shopify’s team will manually review your app against the criteria. If you fail certain points, they’ll let you know and you can try to fix them. Be aware: if you fail the same criterion 3 times in a row, your application is suspended for 3 months[\[123\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=app%27s%20overview%20page%2C%20click%20,Maintaining%20Built%20for%20Shopify) – so it pays to thoroughly prepare before applying.
- **Maintaining BFS:** Getting the status is not a one-and-done; **apps are reviewed annually** to ensure they still meet BFS standards[\[124\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criterion%20three%20times%20in%20a,might%20lose%20Built%20for%20Shopify). If your app slips (maybe your performance dropped or you introduced a UX issue), Shopify will notify you by email and give you 60 days to fix it[\[125\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=status%20Apps%20are%20reviewed%20annually,You%20can%20lose%20Built%20for) (see [Built for Shopify annual reviews](#built-for-shopify-annual-reviews)). If issues aren’t fixed, you can lose the status[\[126\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=status%20Apps%20are%20reviewed%20annually,status%29.%20%23%23%20Other). Also, ongoing poor performance or policy violations can cause revocation (see [Regain lost status](#regain-lost-status) if that happens). In short, you must continue to uphold the quality.

**Why aim for Built for Shopify?** It provides a significant competitive edge. The badge and improved visibility can lead to more installs. Also, Shopify merchants (and even Shopify’s own support advisors) are more likely to trust and recommend BFS apps. It’s effectively Shopify’s endorsement that “this app is one of the best.” Many top partners consider reaching BFS status as important as the initial app launch.

*(For specifics on criteria, see next section “Built for Shopify requirements.”)*
## <a name="built-for-shopify-requirements"></a>Built for Shopify requirements
To earn the BFS status, your app must meet **every criterion** in Shopify’s BFS checklist[\[127\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=To%20qualify%20for%20Built%20for,to%20specific%20categories%20of%20apps). These criteria are an extension (and enhancement) of the basic app requirements. They cover app quality, performance, integration, UX, merchant success, and even customer support in depth. Below are some of the key requirement areas and examples of what’s expected:

- **Prerequisites:** Before worrying about the fancy stuff, your app needs a good foundation:
- **Meet App Store requirements:** Your app must fully comply with the general [App Store requirements](#xc13dbf0093a0f87236cb1f849b1ecccd5b66827) (the ones we detailed above)[\[128\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,requirements). Shopify will **audit your app against that checklist again** when you apply for BFS.
- **Good Partner standing:** Your Partner account should have no unresolved infractions[\[129\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,Partner%20standing). If you previously had a policy violation, you need to have addressed it and be in “good standing” (no active warnings or breaches of the Partner Program Agreement or API terms)[\[129\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,Partner%20standing).
- **Minimum Usage:** Shopify wants to see that merchants actually use and like your app:
  - **50+ installs** (on active, paid-plan shops)[\[130\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,number%20of%20installs) – this shows your app has proven value.
  - **5+ app reviews** (from merchants)[\[131\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20have) – there should be some positive feedback.
  - **Minimum rating threshold** – your app needs a decent average rating (Shopify hasn’t publicly stated the exact number, but aim for ~4.0 or higher out of 5)[\[132\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20have).
  - Essentially, a brand new app can’t get BFS until it has some traction and validation from the merchant community.
- **Performance (Section 2):** BFS puts a heavy emphasis on app speed and efficiency:
- **Admin Performance:** Shopify measures your app’s performance inside the Shopify admin using Web Vitals (LCP, CLS, INP) at the 75th percentile[\[133\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=2)[\[134\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20minimize). The **benchmarks** are roughly:
  - **Largest Contentful Paint (LCP) ≤ 2.5s** in admin[\[135\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,CLS).
  - **Cumulative Layout Shift (CLS) ≤ 0.1** (with enough data points)[\[135\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,CLS).
  - **Interaction to Next Paint (INP) ≤ 200ms[\[136\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,INP)**.
  - Your app needs to use the latest App Bridge so Shopify can collect these metrics[\[133\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=2).
  - These ensure your embedded UI loads fast and is responsive. If your app is slow (e.g., heavy analytics script or large images), you’ll need to optimize – lazy load, compress, etc.
- **Storefront Performance:** If your app affects online store speed (e.g., adds scripts to the storefront), BFS requires that it **not slow down pages by >10 Lighthouse points**, same as the general requirement[\[137\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,on%20store%20speed). They explicitly mention this in BFS criteria too.
- **Checkout Performance:** If your app impacts checkout (like a shipping rate app or checkout UI extension), BFS says new plans might be deferred if it’s an annual-to-monthly downgrade, etc. More concretely, for **carrier service apps** (shipping rate providers), BFS sets strict limits: the 95th percentile response time must be ≤ 500ms and success rate 99.9% for rate requests[\[138\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,on%20checkout%20speed). So if you provide checkout functionality, it has to be **fast and reliable**.
- **Integration & UX (Section 3):** This is about how well your app embeds into Shopify:
- **Embedded in Admin:** **All primary app functionality should be available within Shopify Admin** (for online store apps, within the app’s embedded UI)[\[139\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=3)[\[140\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=By%20default%2C%20apps%20should%20be,to%20complete%20a%20primary%20workflow). BFS apps shouldn’t force merchants to log into a separate website to use core features. (Merchants appreciate when everything feels unified.)
- **Seamless Login:** BFS criteria say the app should allow **one-click access** – no separate login or sign-up; use the store’s existing Shopify identity[\[141\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20enable). That means *no* additional username/password for your app. If you need the merchant to create an account on your system, use OAuth to auto-provision or at least use Single Sign-On so it’s frictionless[\[142\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,up%20based%20on%20Shopify%20credentials).
- **Embedded best practices:** All the App Bridge usage from earlier requirements are reinforced. BFS apps naturally must use App Bridge correctly (for navigation, modals, etc.). Also:
  - **Keep workflows in Shopify:** A merchant shouldn’t have to leave Shopify for primary tasks[\[143\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,workflows%20within%20Shopify). (Exceptions if an external interface is absolutely needed, but those are rare and you should justify them.)
  - **In-app analytics:** BFS recommends that if your app has reporting, show key metrics right on the app’s home screen in Shopify[\[144\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20include). E.g., a marketing app might display campaign results in an embedded dashboard.
  - **Third-party connections:** If your app connects Shopify to an external service (e.g., Facebook, QuickBooks), allow the merchant to manage that connection *from within your embedded app[\[145\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=%23%203.1.5%20Keep%20third,settings%20within%20Shopify)*. Don’t say “go to our website to connect your account” – have them do it in-app. E.g., if linking a social media account, have a button inside your app to connect/disconnect it[\[146\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=third,the%20Shopify%20embedded%20app%20interface).
- **Installation & Asset Management:** BFS demands **clean install/uninstall**:
  - Use Theme App Extensions (and App Blocks) for any storefront features so merchants can add/remove them easily and uninstalls are automated[\[147\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,uninstallation%20process).
  - **Don’t use the Asset API to modify theme files** as a rule[\[148\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,create%2C%20modify%2C%20or%20delete%20files). BFS explicitly forbids apps from directly editing theme code (with a few exceptions for legacy needs) – instead use app blocks and sections for adding theme functionality. Shopify will *audit your API usage* to check if you’re improperly using the Asset API[\[149\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=You%20can%20still%20use%20the,API%20to%20read%20theme%20files).
  - Essentially, after uninstall, the store should be as if the app was never there – no leftover code, snippets, files, or tokens. BFS compliance on this point is critical because many merchants (and Shopify) hate “app residue.”
- **Design & UX Consistency (Section 4):** BFS apps should **feel like Shopify**:
- **Familiar UI:** Use Polaris or otherwise mimic Shopify’s design language so that your embedded app **looks and behaves** like a natural part of the admin[\[150\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=The%20design%20of%20your%20app,friendly)[\[151\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,practices). For example, use Shopify’s primary button styles, typography, spacing, etc., rather than completely custom designs that confuse the merchant.
- BFS guidelines mention not to do things that cause confusion or appear unprofessional, like:
  - **Polish**: No buggy or flickering UI, no elements jumping around (CLS issues)[\[152\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Show%20failure%20examples).
  - **Layout**: Use card layouts where appropriate, similar to Shopify’s admin. Don’t put everything in one giant page without visual hierarchy[\[153\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Image%3A%20An%20annotated%20app%20home,content%20is%20in%20a%20card).
  - **Styling**: Buttons and other controls should use Shopify’s style. E.g., primary buttons should be Shopify green (Polaris primary color) – don’t make them bright purple or some off-brand style that clashes[\[154\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=container%20looks%20similar%20to%20the,for%20the%20majority%20of%20content).
  - **Fonts**: Don’t use wildly different fonts, especially not serif or script fonts for main content, which can feel out of place[\[155\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=shift%20around,for%20the%20majority%20of%20content).
- **Category-Specific Requirements (Section 5):** BFS adds extra rules for certain app categories to ensure they use the latest platform features:
- For example, **Ads apps** must use Shopify’s Web Pixel API for tracking (no old script tag tracking)[\[156\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Any%20app%20that%20enables%20merchants,promote%20their%20stores%20and%20products)[\[157\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20ads%20apps), and use Shopify’s Customer Segments for audience targeting (instead of building their own segmentation UI)[\[158\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use).
- **Affiliate apps** and **Analytics apps** similarly must use Web Pixel for data capture (no copying paste JS for merchants)[\[159\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20affiliate%20program%20apps)[\[160\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use).
- **Carrier Service (shipping rate) apps** had the performance criteria we mentioned: under 500ms response for 95% calls, >99.9% success[\[161\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20respond)[\[162\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,reliably).
- **Discount apps** (those providing custom discount types) must use Shopify’s Discount API/Function system – not draft orders hacks[\[163\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=). They also shouldn’t misuse draft orders to apply discounts in a way not intended[\[164\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20dont). And if they generate bulk discount codes, they should use Shopify’s Bulk Discount API rather than creating one code per customer per discount (which can be messy)[\[165\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use).
- **Email marketing apps** should use Web Pixels for tracking and **sync all customer data to Shopify’s customer model** (so merchants have a unified view)[\[166\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20email%20marketing%20apps)[\[167\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20email%20marketing%20apps). They should also leverage Shopify’s Customer Segments and the Visitors API for identifying site visitors via emails[\[168\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use)[\[169\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20help).
- *(There are additional categories like POS apps, fulfillment apps, etc., each with their own criteria. The BFS “Category-specific” section is extensive – if your app falls into one of those listed categories, ensure you meet those specific points as well.)*

In summary, the BFS requirements are a **super-set of all other requirements**. They’re demanding: from technical excellence (speed, no broken flows) to UX (Polaris adherence) to merchant value (useful functionality, proven by reviews). Shopify’s documentation for BFS includes a checklist and changelog; for instance, they introduced “simplified deployment” in mid-2023 and by Jan 2024, **app configuration became versioned** (meaning BFS apps should deploy config and extensions via App Versions – see [About app versions](#about-app-versions))[\[170\]](https://shopify.dev/docs/apps/launch/deployment/app-versions#:~:text=%7C%20,). As a developer, you should regularly check the BFS requirements page for updates[\[171\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Changelog)[\[170\]](https://shopify.dev/docs/apps/launch/deployment/app-versions#:~:text=%7C%20,).

**Important BFS Note:** Many criteria are **automated** (Shopify will auto-check your app’s install count, performance stats, etc.). Some criteria, like UX design, are **manually evaluated** during the BFS review. Shopify allows you to apply once you meet automated ones, then a reviewer will assess the rest. If you fail some, they’ll tell you what to improve[\[172\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criteria%20are%20met%2C%20you%20can,is%20suspended%20and%20you%20won%27t). You can reapply after fixing. If you repeatedly fail, they impose a cooldown on reapplication[\[173\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=apps%20permission%20can%20submit%20applications,Maintaining%20Built%20for%20Shopify). Also, **annual re-reviews** mean you should maintain that high standard continuously[\[124\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criterion%20three%20times%20in%20a,might%20lose%20Built%20for%20Shopify).
## <a name="built-for-shopify-annual-reviews"></a>Built for Shopify annual reviews
Even after achieving Built for Shopify, your app will be **reviewed at least once a year** to ensure it still meets all criteria[\[174\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbuilt,long%20it%20takes%20In%20general). Shopify does this because apps can change over time – new features might introduce issues, or standards might tighten. Here’s what to expect from annual reviews:

- **Scheduling:** Shopify will add your app to the review queue roughly **one year after its initial BFS approval** (and around the same time each subsequent year)[\[175\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=to%20all%20,Review%20notifications%20You%E2%80%99ll). For example, if you got BFS status in March 2025, expect a review around March 2026.
- **Notification:** You’ll get an **email** when your annual review is starting[\[176\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=to%20the%20annual%20review%20queue,long%20it%20takes%20In%20general). Also, in your Partner Dashboard, you’ll see a notice that your app is “in review” during this period[\[176\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=to%20the%20annual%20review%20queue,long%20it%20takes%20In%20general).
- **Duration:** The review typically takes a few days up to about a week[\[177\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=get%20an%20email%20notification%20when,Getting%20your). This includes waiting in the queue and the review itself. During this time, your app remains live and BFS status remains – annual reviews don’t unpublish or hide your app (unless a severe issue is found).
- **Outcome Communication:** After the reviewers finish, Shopify will email you the results[\[178\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=it%20takes%20between%20a%20few,no%20further%20action%20is%20needed):
- If you **pass with no issues**, congrats – your app keeps its BFS status for another year (no action needed)[\[179\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=results%20After%20the%20Built%20for,Failed%20reviews%20If).
- If they find **problems** (some criteria are no longer met), the email will outline those specific issues[\[180\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=reviewers%20find%20issues%20with%20any,raised%20in%20the%20review%20and). Common issues might be: performance regressed (maybe your app got slower), you introduced a permission that’s not justified, your UI deviated from Polaris, etc.
- **Remediation Period:** Shopify gives you **60 days** to fix any issues found[\[181\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=reviewers%20find%20issues%20with%20any,by%20the%20end%20of%2060). During this grace period, your app **keeps the BFS badge** so long as you’re working on fixes. You should address each point and ideally reply to Shopify (if the email allows) when done.
- **Maintaining Status:** If you fix everything and presumably let Shopify know or they recheck and see it’s fixed, your BFS status continues uninterrupted – essentially “certified for another year”[\[179\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=results%20After%20the%20Built%20for,Failed%20reviews%20If).
- **Losing Status:** If you **do not resolve** the issues within 60 days, Shopify will remove your Built for Shopify status at the end of that period[\[182\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=the%20reviewer,re). Your app itself isn’t removed from the App Store (unless the issues were also serious policy violations), but you lose the badge and related benefits. The email likely warns of this consequence.
- **Reapplying:** Even if you lose BFS status due to an annual review, you’re usually free to reapply once you have addressed all criteria (there’s no permanent ban – the goal is to encourage compliance). Shopify notes you can re-apply at any time after losing status[\[183\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=resubmit,status%29%20at%20any%20time) (though you should make sure to fix the reasons you lost it first). They have a doc on [Regain lost status](#regain-lost-status) detailing this.

**Key advice:** Treat the annual review as a proactive checklist. Continually monitor your app’s metrics and feedback. For example, if your app’s load time has crept up or merchants complain about something, fix it before Shopify flags it. Also keep up with any new BFS criteria Shopify introduces (they sometimes add criteria, e.g., around new features like Functions or Theme App Extensions). Shopify did note improvements and changes in mid-2023 and early 2024 to the BFS model[\[170\]](https://shopify.dev/docs/apps/launch/deployment/app-versions#:~:text=%7C%20,) – such changes can become part of the criteria they check annually.

From Shopify’s perspective, annual reviews ensure the BFS badge continues to represent the *best of the best*. For you, it’s a chance to keep your app in top shape and show Shopify (and merchants) that it consistently deserves the badge. If you stay on top of quality, the annual review should be a non-event (or at most, a minor to-do list).
## <a name="regain-lost-status"></a>Regain lost status
If your app loses its Built for Shopify status – either due to failing an annual review or because it started violating BFS criteria “on an ongoing basis” – Shopify has a process for regaining it[\[184\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbuilt,These%20key)[\[185\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=time%20will%20have%20their%20Built,all%20current%20App%20Store%20requirements). Here’s what that entails:

- **How you can lose BFS:** There are a couple ways:
- **Immediate loss for key criteria failures:** Shopify has identified certain **“critical” criteria** that, if failed, trigger instant removal of BFS[\[186\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=criteria%20are%20monitored%20on%20an,these%20criteria%2C%20view%20the%20criteria). According to Shopify’s table[\[187\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,Meets%20App%20Store%20requirements), these include things like:
  - Losing good Partner standing (e.g., a serious violation of terms).
  - Not meeting basic App Store requirements (if your app gets delisted for a policy violation, you obviously can’t be BFS).
  - **Uninstall not clean** (if you stop using Theme App Extensions and your app doesn’t uninstall cleanly – this is a key BFS requirement; if you regress on it, BFS is gone immediately)[\[188\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=store,).
  - **App not embedded** anymore (if you somehow removed your embed and make merchants enter a URL – BFS would be lost)[\[188\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=store,).
  - These immediate ones don’t come with a grace period – you lose the badge right away when detected[\[189\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=key%20criteria%2C%20then%20it%20will,to%20meet%20other%20criteria%20that), because they’re fundamental.
- **Grace period (60 days) for other criteria:** Many ongoing quality signals (performance metrics, review counts, etc.) have a 60-day grace if they dip below threshold[\[190\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=trigger%20an%20audit%20of%20your,Meets%20App%20Store%20requirements)[\[191\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,Minimum%20app%20rating). For example, if suddenly your app rating fell below the minimum, Shopify gives you some time to improve it (maybe gather more positive reviews) before pulling BFS. The criteria checklist in the Partner Dashboard will highlight anything failing so you can address it[\[192\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=track%20ongoing%20quality%20signals%2C%20then,Achievement).
- **Annual Review failures:** As covered, if you don’t fix issues from an annual review in 60 days, you lose BFS.
- **Notification of status loss:** Shopify will notify you via email and/or in the Partner Dashboard if your app is at risk of losing status or has lost it[\[193\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=criteria%20on%20an%20ongoing%20basis,of%20these%20criteria%20also%20might). They also encourage you to monitor the BFS criteria checklist in your dashboard regularly[\[192\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=track%20ongoing%20quality%20signals%2C%20then,Achievement). The dashboard shows which criteria you’re failing at any time.
- **Regaining BFS:** The good news – **as soon as your app meets all the criteria again, Shopify will automatically restore the status[\[185\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=time%20will%20have%20their%20Built,all%20current%20App%20Store%20requirements)**. You do *not* need to wait a long period or submit a new application form. The moment you fix the issues and your app passes the checks, you “automatically regain” the badge[\[194\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=time%20will%20have%20their%20Built,be%20audited%20to%20ensure%20compliance). For example, if you lost it due to a low rating and then you gather new reviews and your rating goes back up above the threshold, Shopify will reinstate BFS.
- This auto-reinstatement implies Shopify continuously monitors BFS criteria. There might not even be human intervention – it could be automated for certain metrics. But for some things like “app is embedded” or “clean uninstall,” presumably once you correct the app and maybe inform Shopify, they can verify and restore.
- **No reapplication wait**: Unlike failing BFS application 3 times (which causes a 3-month ban on reapplying), losing BFS status doesn’t require a cooldown. You can get it back as soon as you fix things[\[185\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=time%20will%20have%20their%20Built,all%20current%20App%20Store%20requirements).
- However, note if you lost status due to a serious violation or something requiring Shopify support (like you had a $1000+ refund issue or such), you may need to speak with Shopify or go through a review to confirm everything’s resolved. But generally, for quality criteria, it’s straightforward – fix and it returns.
- **Post-regain audit:** Shopify mentions that after regaining BFS, they **might audit your app to ensure all criteria (including the manual ones) are still met[\[195\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=app%20meets%20all%20of%20the,all%20current%20App%20Store%20requirements)**. This is basically them double-checking that in fixing one issue you didn’t break another, or that your app remains up to par overall. They could, for instance, decide to do a quick UX scan or performance test again. And they’ll ensure you didn’t neglect any App Store requirements in the interim.

**Important:** Avoid losing status in the first place by closely monitoring your app’s health. Shopify’s “automated criteria” table (in the BFS docs or Partner Dashboard) shows what triggers immediate vs. grace period removal[\[187\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,Meets%20App%20Store%20requirements). For example: - Good Partner standing – immediate (so don’t violate terms). - App Store requirements – immediate if your app gets delisted for policy (makes sense). - **Uninstall cleanliness** – immediate[\[188\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=store,). - **Embedded in admin** – immediate[\[188\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=store,). - **Checkout speed** – 60 days grace (if your app’s affecting checkout, they give time to improve)[\[196\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,). - **Admin performance Web Vitals** – 60 days grace[\[191\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,Minimum%20app%20rating). - **Minimum installs/reviews/rating** – 60 days grace for each[\[197\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,are%20also%20monitored%20on%20an).

During any grace period, the BFS badge still shows, giving you time to remediate without losing marketing advantage. Use that time wisely.

If you do lose it, focus on correcting the root cause. Shopify’s communication will tell you what criterion failed. Some things (like rating) might take time and effort (improve the app, ask happy users for reviews). Others (like embedding the app) could be quick fixes.

Finally, once regained, try not to repeat the same mistake. Frequent status loss/regain might signal to Shopify that something’s unstable about your app’s quality processes. Ideally, maintain consistently high standards so this isn’t a recurring issue.
## <a name="privacy-requirements"></a>Privacy requirements
Shopify’s privacy requirements guide developers on **handling personal data** properly and complying with global privacy laws. In short, if your app deals with personal information (whether merchant or customer data), you need to be transparent and lawful in its use[\[198\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=With%20privacy%20laws%20in%20jurisdictions,personal%20data%20of%20an%20individual)[\[199\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=We%20want%20to%20ensure%20that,a%20privacy%20policy%20if%20required). Key points from Shopify’s privacy guidelines:

- **Privacy Policy:** You **must provide a privacy policy URL** in your app listing[\[200\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=To%20help%20comply%20with%20privacy,full%20and%20limited%20visibility%20apps). This policy should clearly explain what data your app collects and how it’s used[\[201\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=policy%3A). It’s not just a formality – it builds merchant trust and many jurisdictions legally require it.
- Shopify suggests including details such as:
  - What info you collect via Shopify’s APIs (e.g. order data, customer info)[\[201\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=policy%3A).
  - What info you might collect directly from merchants or their customers (e.g. does your app drop cookies on store visitors? Do you collect any analytics or usage data?)[\[202\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=you%20ask%20them%20for%20contact,you%20use%20this%20information%20for).
  - **Usage of data:** Why you collect each type of data – is it for providing your service, for marketing, for analytics, etc.?[\[203\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=particular%20stores%3F%20,also%20include%20a%20physical%20address) Be specific and truthful.
  - Data retention: How long you keep the data[\[203\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=particular%20stores%3F%20,also%20include%20a%20physical%20address). E.g., do you purge certain data after X months?
  - Data storage locations: Especially if you or your servers are in jurisdictions with data transfer rules (Europe, etc.), mention if data is stored outside of Europe, etc.[\[204\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=any%20purposes%20other%20than%20providing,processing%20information%20outside%20of%20Europe).
  - Contact info: Merchants should know how to reach you with privacy questions (email address, and some laws require a physical mailing address)[\[205\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,also%20include%20a%20physical%20address).
- **Transparency is crucial** – provide “clear details to individuals about how their personal data is collected, processed, and stored.” If unsure how to word it, Shopify suggests consulting a lawyer[\[206\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Note).
- **Comply with Laws:** Privacy laws like the **GDPR** (EU), **CPRA/CCPA** (California), and others impose duties on data handlers[\[198\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=With%20privacy%20laws%20in%20jurisdictions,personal%20data%20of%20an%20individual). While Shopify’s docs don’t give legal advice, they highlight areas to consider:
- Individuals have rights (access, correction, deletion, restriction of processing) under these laws[\[207\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,use%20of%20agreed%20transfer%20frameworks). Your app should be able to accommodate these – e.g., if a merchant or a customer of a merchant asks, “Delete my data,” you should have a process to do that[\[207\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,use%20of%20agreed%20transfer%20frameworks).
- **Cross-border data transfers:** If you (or Shopify) move personal data across borders, ensure you do it under legal mechanisms (like standard contractual clauses for EU->US data transfer)[\[208\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=these%20requests.%20,have%20a%20Data%20Protection%20Officer).
- **DPO/Privacy Officer:** Some laws require certain companies to appoint a Data Protection Officer. Consider if that applies to you (likely if you’re large or handle very sensitive data)[\[209\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=adequate%20protections%20that%20are%20essentially,want%20to%20use%20an%20outside).
- In short, **know which laws apply to you** (by the locations of your users and the data you process) and ensure compliance. Shopify explicitly says if you’re unsure, **consult a lawyer[\[210\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Privacy%20laws%20are%20complex%2C%20and,laws%20specifically%20apply%20to%20you)[\[211\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Note%3A%20It%20is%20important%20to,lawyer%20about%20your%20specific%20needs)** – they want you to take this seriously and not rely just on their docs.
- **Mandatory Webhooks:** Shopify requires public apps to subscribe to certain webhooks related to data privacy. For example:
- **Customers Data Request & Deletion webhooks:** If a merchant or customer requests data erasure, Shopify will send your app a customers/redact or shop/redact webhook. You **must handle these** – meaning delete the relevant personal data and respond appropriately[\[79\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,that%20are%20issued%20by%20merchants).
- BFS requirements also reiterated this: all public apps must subscribe to those webhooks[\[79\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,that%20are%20issued%20by%20merchants). It ensures that if a store uninstalls your app or a customer requests deletion via Shopify’s privacy tools, your app cleans up the data you had.
- **Protected Customer Data:** In October 2022, Shopify introduced “protected” customer data scopes (for email, name, phone, address). By default, apps can’t access these without approval[\[212\]](https://www.shopify.com/partners/blog/data-protection#:~:text=New%20Requirements%20for%20Shopify%20Apps,represented%20in%20the%20API%20resources). The Privacy requirements doc references this concept:
- If your app needs such data, you have to **request access in your Partner Dashboard and describe why you need it[\[213\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=described%20in%20the%20following%20table%3A,address%2C%20phone%2C%20and%20email%20fields)[\[214\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,requirements)**. There are two levels:
  - Level 1: basic customer data (excluding those direct identifiers)[\[213\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=described%20in%20the%20following%20table%3A,address%2C%20phone%2C%20and%20email%20fields).
  - Level 2: including email, name, address, phone[\[215\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,requirements).
- You must also implement **additional data protection measures** (see next section on Protected Customer Data) and possibly undergo a **data protection review** by Shopify[\[216\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=protected,review).
- The Privacy doc hints at that by saying if your app uses that data, you *must* comply with all the protected data requirements and attest to them[\[82\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,to%20all%20%209%2C%20including).
- **Consent and Opt-Out (for marketing apps):** If your app does things like email marketing, retargeting, or any use of personal data for marketing:
- Some jurisdictions require **opt-in consent** before using personal data for marketing (e.g., EU and emails require consent, some US states require opt-in for sale/sharing of data for advertising).
- Some require providing an **opt-out mechanism** (like “Do Not Sell My Personal Info” for California).
- Shopify’s doc explicitly says consider whether you need to get consent or ensure consent was obtained, and whether you need to provide opt-outs for individuals in certain regions[\[217\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,to%20target%20ads%20or%20marketing).
- E.g., if your app does SMS marketing, make sure you follow TCPA (text message consent rules).
- **In-App Data Management:** It’s good practice (and often law) to let merchants handle data rights within your app:
- For instance, if a merchant using your app gets a request from one of their customers to delete data, the merchant will rely on those mandatory webhooks to signal you. But you might also provide a UI for merchants to manually trigger deletion of a specific customer’s data in your app if needed.
- Also, if your app exports or syncs data abroad, merchants might ask about it – be ready to answer or provide documentation (like where your servers are, etc.).
- **No Legal Advice Provided:** Shopify’s page itself says it’s not legal advice, it’s Shopify’s requirements and considerations[\[218\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Caution). They emphasize you might need a lawyer for your specific situation.
- **Enforcement:** Violating privacy can lead to serious consequences. If your app doesn’t have a privacy policy, Shopify will reject it. If your app misuses data (say, you email customers without consent or you sell data), you could be delisted or worse. Also, governments can fine companies heavily for privacy breaches (GDPR fines can be millions).

**Bottom line:** Build privacy into your app from the start. Only collect what you need (**data minimization**)[\[219\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=email%20fields%2C%20then%20you%20must,and%20why%20helps%20merchants%20manage). Be transparent with merchants about data usage. Use Shopify’s infrastructure (like the mandatory webhooks and the new granular data scopes) to respect privacy. By doing so, you not only comply with laws and Shopify’s rules[\[199\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=We%20want%20to%20ensure%20that,a%20privacy%20policy%20if%20required), but you also gain trust from merchants (which is just as important). Many merchants, especially larger ones, will read your privacy policy and judge if they feel comfortable installing your app.
## <a name="work-with-protected-customer-data"></a>Work with protected customer data
“Protected customer data” refers to certain personally identifiable customer information that Shopify *redacts by default* in API responses (for public apps) unless you have permission[\[212\]](https://www.shopify.com/partners/blog/data-protection#:~:text=New%20Requirements%20for%20Shopify%20Apps,represented%20in%20the%20API%20resources). This includes a customer’s **name, email, phone, and address** fields. Shopify introduced this system to bolster privacy – an app must justify why it needs that data. Here’s how to work with it:

- **Levels of Access:** Shopify defines two levels:
- **Level 1**: Access to customer data **excluding** name, address, email, phone[\[213\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=described%20in%20the%20following%20table%3A,address%2C%20phone%2C%20and%20email%20fields). So you’d get things like customer ID, orders, maybe billing info except PII.
- **Level 2**: Access to full customer data **including** those personal fields[\[215\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,requirements).
- If your app doesn’t need any customer data (Level 0), you do nothing special. If it does:
  - By default, after 2022-10 API, if you query a customer, those fields come back as null or redacted.
  - To get them, you must go through an approval process.
- **Requesting Access:** In your Partner Dashboard under your app’s **API access** settings, there’s a section for **Protected customer data access**:
- You first select **Level 1** or **Level 2** and provide your reasons for needing that data[\[220\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,review%29.%20If%20your%20app). For instance, an email marketing app absolutely needs customer email addresses (so Level 2).
- If you need Level 2, you also tick which specific fields (name, email, etc.) you need and explain why for each[\[221\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access,Data).
- You fill out a **Data protection questionnaire** (Partner Dashboard will prompt) detailing how you comply with each of Shopify’s requirements (next bullet)[\[222\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access%20to%20protected%20customer%20fields%2C,review%29.%20If%20your%20app).
- Then you submit for review (similar to an app submission but specifically for data access)[\[223\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=protection%20details,store%2C%20you%20can%20access%20customer).
- Note: If your app is only ever used on development stores or as a private app, you don’t need this review – dev stores allow protected data by default for testing[\[224\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=%5BVaries%20by%20plan%5D%28https%3A%2F%2Fhelp.shopify.com%2Fen%2Fmanual%2Fapps%2Fapp,installed%20only%20on%20development%20stores).
- **Protected Data Requirements:** As part of getting approval, you must **implement strict practices** around that data[\[225\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=Requirements%20To%20help%20apps%20safely,minimum%20personal%20data%20required%20to)[\[219\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=email%20fields%2C%20then%20you%20must,and%20why%20helps%20merchants%20manage):
- Shopify lists them (we saw those as Level 1 and Level 2 requirements in the snippet[\[219\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=email%20fields%2C%20then%20you%20must,and%20why%20helps%20merchants%20manage)[\[226\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access%20or%20inappropriate%20processing,personal%20data%20from%20production%20from)). Summarizing:
  - **Minimize data**: Only process the minimum personal data needed[\[219\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=email%20fields%2C%20then%20you%20must,and%20why%20helps%20merchants%20manage). Don’t collect extra.
  - **Transparency to merchants**: Clearly inform merchants *what* personal data you process and *why[\[227\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=effort%20spent%20complying%20with%20these,applicable%2C%20respect%20and%20apply%20customer)*. Likely in your privacy policy and maybe in-app documentation.
  - **Limit use to stated purposes**: Don’t use the data for anything beyond what you promised (no sneaky secondary uses)[\[228\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=merchants%20about%20what%20personal%20data,applicable%2C%20respect%20and%20apply%20customer).
  - **Respect customer consent**: If your app does something requiring customer opt-in (like email marketing), ensure you honor whether the customer consented or not[\[229\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=how%20their%20data%20is%20used,those%20decisions%20might%20have%20legal).
  - **Respect “Do Not Sell/Share” opt-outs**: If applicable (CCPA etc.), ensure if a customer has opted out of data sharing, your app doesn't share their data (or doesn't use it for targeted marketing)[\[230\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=participate%20in%20their%20data%20processing,of%20personal%20data%20and%20this).
  - **Opt-out of automated decisions**: If your app does something like automated credit scoring or profiling that has significant effects on individuals, you need to allow those individuals to opt out of that automation[\[231\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=requirement%20helps%20ensure%20you%20are,or%20privacy%20policies%20represent%20an).
  - **Data Protection Agreements**: You should have an agreement (or privacy policy) with merchants that covers how you handle their data, including any cross-border transfers, retention, roles, etc.[\[232\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=it%27s%20important%20to%20give%20customers,Retaining).
  - **Data Retention**: Have a retention policy so you’re not keeping personal data longer than necessary[\[233\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=and%20safe%20data%20privacy%20practices,they%20have%20access%20to%20the).
  - **Encrypt data in transit and at rest**: Basic security – use HTTPS, encrypt sensitive data in your database to reduce risk of leaks[\[234\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=be%20kept%20longer%20than%20necessary,Encrypt%20your%20data).
  - *Those were Level 1 requirements.* For **Level 2 (more sensitive data)**, additional ones:
  - **Encrypt backups** of data too, not just prod DB[\[235\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=bad%20actors%20from%20gaining%20access,production%20data%20in%20order%20to).
  - **Separate test and prod data**: Don’t mix live personal data into test environments where security might be weaker[\[236\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=data%20set%20to%20the%20general,Have).
  - **Data Loss Prevention strategy**: Have measures/policies to prevent and detect if someone tries to exfiltrate data from your systems[\[237\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=the%20same%20level%20of%20concern,Limiting%20staff) (e.g., monitoring, alerts on unusual downloads, etc.).
  - **Limit internal access**: Only give team members who truly need it access to the personal data[\[238\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=Strict%20separation%20of%20environments%20prevents,Require%20strong%20passwords). Principle of least privilege.
  - **Strong passwords for staff**: Ensure your team uses strong creds where they can access this data (and likely use 2FA, etc.)[\[239\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access%20to%20protected%20customer%20data,logs%20and%20reviewing%20them%20frequently).
  - **Access logs**: Keep logs of who accesses protected data and review them regularly[\[240\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=for%20staff%20accounts.,trail%20of%20activity%20related%20to). This helps audit any misuse.
  - **Incident Response Plan**: Have a plan for what to do if a data breach occurs or security incident[\[241\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=log%20to%20protected%20customer%20data.,help%20you%20meet%20the%20protected) (how you’ll contain, notify, etc.).
- You attest to implementing all the above when applying. Shopify might ask for evidence for some (especially if selected for deeper review).
- **Data Protection Review:** Shopify may select your app for a **detailed security/privacy review** either during the approval process or afterwards (especially if you have lots of data or many installs)[\[242\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=scales%2C%20roles%20and%20responsibilities%2C%20escalation,High). They’ll contact you with instructions if so. During that, you might need to provide documents (like your privacy policy, maybe architecture diagrams, proof of encryption, etc.). They mention apps with high install counts, lots of records, broad data access, or long retention are more likely to be audited[\[243\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=If%20we%20select%20your%20app,Long%20retention%20of%20personal%20data).
- **Using the Data in Development:** If you’re just testing on a dev store, Shopify allows you to “simulate” protected data. In the Partner Dashboard’s dev store setup, you can specify which protected fields you’re using, and dev stores will actually provide that data without formal approval[\[244\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=app,installed%20only%20on%20development%20stores). But for real stores, you must go through review.
- **API changes when approved:** Once approved, your app’s API credentials get access to those fields:
- e.g., a GraphQL Customer query will return email instead of null.
- The approval might reflect as your app getting new OAuth scopes (Shopify essentially controls it behind the scenes – you might see something like read\_customers gets elevated to include email if approved).
- Also, after approval, when merchants install your app, Shopify shows them a notice that your app wants to access protected data and for what reason (transparency).
- **What if not approved or partial approval:** Shopify only approves the minimum needed. If you requested email and phone but they think you only justified email, they might approve email only. If not approved, you can still function with data redacted (but many apps wouldn’t function well without say an email). In that case, you might have to reapply with better justification or adjust your app to not require it.

In practice, **plan ahead**: If your app concept clearly needs protected data (most do, honestly – even sending an order status email needs the customer email), apply for it early in development or during your initial app submission process because it can take time. And implement all those security measures – beyond satisfying Shopify, they’re simply good practices to protect users and your business.
## <a name="about-billing-for-your-app"></a>About billing for your app
Shopify strongly encourages (and in most cases, **mandates**) that public apps use Shopify’s billing system for monetization. This section outlines how Shopify’s **App Billing API** works and the billing models available:

- **Mandatory for App Store apps:** If your app is distributed through the Shopify App Store (full or limited visibility), you **must** use Shopify’s billing resources to charge merchants[\[245\]](https://shopify.dev/docs/apps/launch/billing#:~:text=The%20app%20billing%20API%20resources,you%20have%20questions%20or%20concerns). The only exception is if Shopify explicitly grants an exemption (rare). In short, you cannot implement your own payment processing or subscriptions outside Shopify for App Store apps – doing so would violate terms. Shopify states this clearly: *“app billing API resources are specific to and mandatory for all ... apps distributed through the App Store, unless Shopify has notified you otherwise.”[\[245\]](https://shopify.dev/docs/apps/launch/billing#:~:text=The%20app%20billing%20API%20resources,you%20have%20questions%20or%20concerns)*.
- **Benefits of using Shopify Billing:**
- **Simplified payment process:** Charges are added to the merchant’s Shopify invoice (the same place they pay their Shopify subscription)[\[246\]](https://shopify.dev/docs/apps/launch/billing#:~:text=Shopify%27s%20app%20billing%20resources%20provide,the%20following%20benefits). This is convenient for merchants – they don’t have to pull out a credit card for your app specifically; it just goes on their monthly bill.
- **Higher conversion:** Because of the seamless integration, Shopify notes that apps using Billing API see better conversion from free to paid users[\[247\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,to%20the%20merchant%27s%20Shopify%20invoice). Merchants are more willing to approve a charge via Shopify’s familiar flow.
- **Revenue share & payouts handled:** When you use Shopify billing, Shopify automatically calculates your revenue share and pays out your portion to you. You don’t need to implement your own payment gateway or subscription logic, and you benefit from Shopify’s generous revenue share scheme (0% on first $1M, 15% after)[\[248\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,the%20revenue%20that%20Shopify%20collects).
- **Chargeback protection:** Shopify handles chargebacks (disputed charges) for you[\[249\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,the%20revenue%20that%20Shopify%20collects). If a merchant disputes an app charge, Shopify deals with the credit card company – you aren’t directly on the hook for that process.
- **Flexible models:** The Billing API supports **various pricing models** – one-time charges, usage-based charges, recurring subscriptions (monthly or annual), free trials, etc.[\[250\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,related%20processes). So you can design the model you need and Shopify’s system can accommodate it.
- **Billing API Overview:** Technically, Shopify’s billing flows work like this:
- Merchant triggers an action in your app that requires a charge (e.g., installing the app if you have an upfront fee, or upgrading a plan, or using a paid feature).
- Your app calls a GraphQL mutation (appSubscriptionCreate for recurring, or appPurchaseOneTimeCreate for one-time, etc.) to create a charge record[\[251\]](https://shopify.dev/docs/apps/launch/billing#:~:text=installation%2C%20a%20service%20plan%20upgrade%2C,If%20the%20charge).
- Shopify returns a confirmationUrl – a Shopify-hosted page for the merchant to **approve the charge[\[252\]](https://shopify.dev/docs/apps/launch/billing#:~:text=appPurchaseOneTimeCreate%20%20or%20the%20,to%20the%20Shopify%20admin%2C%20and)**.
- You redirect the merchant to that URL (in an embedded app, use App Bridge to redirect top window)[\[253\]](https://shopify.dev/docs/apps/launch/billing#:~:text=3,the%20app%20charge%20being%20declined).
- The merchant sees a standardized **“Approve charge”** screen with charge details (price, trial days, etc.) and can approve or decline.
- After approval, Shopify charges the merchant according to the terms (immediately for one-time, or as part of their next billing cycle for recurring).
- Shopify redirects the merchant back to a returnUrl you specified in the charge mutation[\[254\]](https://shopify.dev/docs/apps/launch/billing#:~:text=page%20that%20Shopify%20hosts%20for,the%20app%20charge%20being%20declined).
- You should listen for the result (via a webhook or by querying the status) to know if the charge was accepted. If accepted, you unlock the paid features for the merchant.

This flow is shown in a diagram in Shopify’s docs[\[255\]](https://shopify.dev/docs/apps/launch/billing#:~:text=The%20following%20diagram%20describes%20the,merchants%2C%20your%20app%2C%20and%20Shopify)[\[256\]](https://shopify.dev/docs/apps/launch/billing#:~:text=1,then%20they%27re%20redirected%20to%20a). Essentially, Shopify is the middleman for billing.

- **Pricing Models (the Billing API supports):**
- **Free:** You can offer your app for free (no billing needed), or a free plan among paid plans. Shopify’s system supports a $0 subscription plan if needed (or just not creating a charge at all for free users).
- **One-time Purchases:** A single charge, often used for **app purchases** (pay once, use forever) or for individual items (like purchase $X of credits). See [Support one-time app purchases](#support-one-time-app-purchases).
- **Subscription (Recurring):** Charge every 30 days or every year. You define the interval (monthly or annual) and price. Shopify will automatically bill the merchant on a recurring schedule once they approve. You can also combine recurring with usage (see below).
- **Usage-based:** Metered billing – e.g., charge per use or overages. Shopify’s billing allows setting a capped amount per cycle and then you record usage. At the end of the cycle, Shopify bills the merchant for the usage. See [Create usage-based subscriptions](#create-usage-based-subscriptions).
- **Combined Recurring + Usage:** A base subscription fee plus usage charges if applicable (common in SaaS). Shopify supports this with a capped usage approach in addition to a recurring fee[\[257\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=an%20app%20or%20certain%20features,you%20can%20implement%20with%20the)[\[258\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=Apps%20that%20charge%20a%20fee,on%20the%20number%20of%20contacts).
- **Free Trials:** You can specify trial days on a subscription – the first charge is delayed for that many days[\[259\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20trials%20delay%20the%20start,a%20number%20of%20specified%20days). Merchants love free trials to test apps, and Shopify will automatically not charge until the trial is over.
- **Proration & Upgrading/Downgrading:** If a merchant upgrades their plan mid-cycle, Shopify can prorate the charges (charging a partial amount for the remainder of cycle)[\[260\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=overpaying%20for%20the%20service%20that,00%20plan)[\[261\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=,Avoid%20crediting%20on%20top%20of), and give credits on downgrades[\[262\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%3D%20%2410.00%20%60%60%60%20,For%20example). The Billing API has parameters and behaviors (like AppSubscriptionReplacementBehavior) to handle this[\[263\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=,You%20can%20create%20the%20following). Essentially, Shopify tries to make mid-cycle changes fair so merchants aren’t double-charged or paying for unused time.
- **Discounts on subscriptions:** The API supports setting a discount on recurring charges (percentage or fixed, for a certain number of billing cycles)[\[264\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Creating%20an%20app%20subscription%20with,price%20discount)[\[265\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=You%20can%20apply%20subscription%20discounts,for%20new%20and%20existing%20subscribers). Useful for promotions (e.g., 20% off for first 3 months).
- **App Billing vs. Shopify Subscription:** It’s worth noting that app charges are separate from the merchant’s Shopify subscription charges, but they appear on the same invoice. Shopify consolidates so the merchant pays all at once.
- **Implementation in code:** Shopify provides libraries (like Shopify’s Node/Koa library, or Ruby library) that have helpers to create charges and handle the redirects. If coding manually:
- Use GraphQL Admin API’s mutation { appSubscriptionCreate(...) { confirmationUrl } } (or one of its variants for one-time, usage etc.)[\[251\]](https://shopify.dev/docs/apps/launch/billing#:~:text=installation%2C%20a%20service%20plan%20upgrade%2C,If%20the%20charge).
- Each charge or subscription has an ID, status, and related fields. You can query them or subscribe to webhook topics like APP\_SUBSCRIPTIONS\_UPDATE or APP\_PURCHASES\_ONE\_TIME\_UPDATE to get notified of state changes (like charge accepted, declined, etc.)[\[266\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=%5B%60currencyCode%60%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%23supported,Next%20steps).
- **Test in development:** On development stores, you can simulate charges without actual billing. Shopify doesn’t charge on dev stores; it will mark dev charges as “test” and auto-accept them. There’s also a billing test mode you can use to simulate the flow (the docs mention [test charge documentation][\[267\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=app%27s%20plan%20selection%20page%20URL,is%20edited)).
- **Admin vs. API (Viewing charges):** You, as a partner, can see all charges in your Partner Dashboard under each app’s “App history” or the Payouts section. Also, merchants see app charges on their bills. If you need to refund or credit, see sections on [Award app credits](#award-app-credits) or [Refund app charges](#refund-app-charges).
- **Important Caution:** The Billing API doesn’t do math for you. Shopify notes it **does not support complex calculations** – you have to decide the charge amounts yourself and then create them[\[268\]](https://shopify.dev/docs/apps/launch/billing#:~:text=Caution). For example, if you charge based on number of orders, you must calculate how much to charge this month and create a usage record or one-time charge for that. The API simply bills what you tell it to bill. So ensure your pricing logic is correct in your app’s code.
- **When not to use Shopify Billing:** If your app is a **Sales Channel** that processes transactions (like a payment gateway or point-of-sale integration), you might have a separate revenue model (like transaction fees) outside app billing. Or if your app is a **custom app** (one client), you might invoice them outside of Shopify. But for any public app scaling to many merchants, using Shopify Billing is nearly always required and beneficial.

In summary, **use Shopify’s Billing system** for your app’s monetization unless you have a very special reason not to (and permission). It streamlines the merchant experience and ensures you comply with Shopify’s rules (Shopify gets their revenue share from it, which is partly why it’s mandatory)[\[248\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,the%20revenue%20that%20Shopify%20collects). It supports all major pricing strategies you’d want to implement. As a developer, integrating it early is wise – decide your pricing model, implement the appropriate billing mutations, and test thoroughly. The rest of the sections below (Managed Pricing, trials, subscriptions, etc.) will delve into specifics and best practices of these billing features.
## <a name="managed-app-pricing"></a>Managed App Pricing
Managed App Pricing is a newer (2023+) feature that allows you to configure your app’s pricing plans **directly in the Partner Dashboard** instead of writing billing code. Essentially, Shopify “manages” the billing for you if you opt in, automating recurring charge setup, free trials, proration, etc., based on a plan schema you define through the UI[\[269\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,apps%20by%20editing%20your%20pricing).

- **What it does:** With managed pricing, you define your app’s plans (free or paid, monthly or annual pricing, trial length) in the Partner Dashboard, and Shopify then **hosts the plan selection page** for your app and handles all subscription billing logic automatically[\[269\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,apps%20by%20editing%20your%20pricing)[\[270\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=pricing,rendered%20in%20Shopify%20admin%20Your). When a merchant installs your app, Shopify will show them this plan selection page (embedded in admin) where they can pick a plan and approve charges, without you having to code the charge creation and redirect flow.
- **Advantages:**
- **Simplicity:** You don’t need to implement the GraphQL Billing API calls for subscriptions or free trials. Shopify’s system does it. This reduces development effort and potential errors.
- **Consistency:** The plan selection UI is consistent with other apps, since Shopify renders it. Merchants see a familiar interface.
- **Automation of common tasks:** Recurring charges, free trials, proration, upgrades/downgrades, test charges, and even price increases can be handled by Shopify’s system automatically[\[271\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=Shopify%20Partner%20Dashboard%2C%20without%20needing,and%20more%20consistent%20than%20coding).
- **Switchable:** Managed pricing is optional. It’s the default for new public apps, but you can switch to manual (API-based) pricing if you need more control, and vice versa[\[272\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=your%20own%20billing%20logic%20using,0%20Image%3A%20Plan%20and). You can opt-in an existing app by editing its pricing settings in the Dashboard[\[273\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=your%20own%20billing%20logic%20using,From%20your%20Partner%20Dashboard%2C%20click).
- **Supported Plans:** Managed pricing supports **free plans, monthly subscriptions, and annual subscriptions**, including the option to offer an annual plan at a discounted rate (yearly option)[\[274\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=can%20opt%20in%20to%20managed,or%20Manual%20billing%20with%20the). It also supports free trial durations on those plans and **private plans** (custom plans for specific merchants).
- **Opting In:** To enable managed pricing for an existing app:
- Ensure you remove any incompatible billing API usage (you can’t have both manual and managed for the same app at once). You might need to delete old pricing configurations or charges that conflict[\[275\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=API%20shopify.dev%20%20,Plan%20selection).
- Go to your app in the Partner Dashboard > Distribution > App listing, then under Pricing you’ll find a toggle for **Managed pricing** vs. manual[\[275\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=API%20shopify.dev%20%20,Plan%20selection). Switch it on and confirm[\[276\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=locale%20you%20want%20to%20update,Plan%20selection). (For new apps, it’s on by default).
- **Plan Selection Page:** Once managed pricing is on, Shopify generates a **Plan Selection page** for your app, which is accessible at a URL like https://admin.shopify.com/store/{store\_handle}/charges/{app\_handle}/pricing\_plans[\[277\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=visible%20in%20the%20Shopify%20admin%2C,can%20validate%20that%20plan%20selection).
- In an embedded context, merchants will see this page within Shopify admin.
- It lists all available plans (with their name, features, price, trial info).
- Merchants can upgrade/downgrade plans here anytime.
- You as a developer do not need to create this page or handle its logic – Shopify does.
- There’s mention of testing this page via creating test charges (the doc suggests using a dev store to validate that the plan selection UI behaves as expected)[\[267\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=app%27s%20plan%20selection%20page%20URL,is%20edited).
- **Configuring Public Plans:** In the dashboard:
- You can add up to **4 public plans** (the ones visible to all merchants on your App Store listing)[\[278\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=documentation%5D%28%2Fdocs%2Fapps%2Flaunch%2Fapp,and%20click%20the).
- For each plan, you set the billing model: free, monthly price, yearly price, or monthly with yearly option (i.e., merchant chooses monthly vs. yearly)[\[279\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=Under%20,where%20the%20merchant%20will%20be).
- Set the prices for monthly and/or yearly as needed (yearly could be cheaper per month).
- Optional: set a free trial duration (days) for that plan[\[280\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=,where%20the%20merchant%20will%20be).
- Optional: set a **Welcome page URL** (after merchant approves the charge, you might want to send them to a specific in-app welcome screen)[\[281\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=required%29%20Under%20,Save).
- Save the plan.
- Then you separately provide a **Plan description** for each language: basically, the **Display name** of the plan and a bullet list of features/benefits included[\[282\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=,Top). This is so your plan’s marketing copy can be localized. The billing details (price etc.) are separate.
- Each plan must have a description in every language you have an app listing for; otherwise that plan won’t show up in that language’s App Store listing[\[283\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=listing,to%20a%20list%20of%20stores).
- **Private Plans:** You can also create **Private plans** – up to 10 of them[\[284\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=language.%20,Add).
- Private plans are **only visible to specific shops** you authorize (you can add up to 20 stores per private plan)[\[285\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=up%20on%20your%20,to%20open%20the%20plan)[\[286\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=%28Optional%29%20Under%20,1.%20Click).
- These are useful if you have a special enterprise plan or a custom pricing deal for certain clients.
- They don’t appear on the public listing, and they aren’t translated (just one set of name/description) since they’re invite-only[\[284\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=language.%20,Add).
- Merchants who are on the authorized store list will see the private plan on their plan selection page (others will not).
- **Welcome Links:** When a merchant approves a managed pricing plan, you likely want to onboard them.
- Managed pricing lets you set a **Welcome link** per plan[\[287\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=%2A%2ASave%2A%2A.%20,URL%20parameter). For embedded apps, this can be a path in your app (like /welcome), and Shopify will append a charge\_id param to it[\[288\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=graphql%2Fcurrent%2Fenums%2FAppSubscriptionStatus,protocol).
- For non-embedded or external welcome pages, you can specify a full URL.
- After a merchant picks a plan and completes payment approval, Shopify redirects them to this welcome link. You can then show a nice onboarding or confirmation, and importantly, you should verify via the Billing API or GraphQL that the charge is active (though if they got here, it generally is).
- They recommend to then query the subscription status to verify and then unlock app features accordingly[\[289\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=an%20%5Bexternal%20URL%5D%28%23external,protocol).
- **Upgrades, Downgrades, Proration:** Managed pricing will handle if a merchant switches plans mid-cycle. It will automatically apply proration or deferral of charges per Shopify’s standard rules (e.g., if they go from monthly Basic to monthly Pro halfway, it will prorate the difference) – you don’t need to write code for this. Similarly, extending trials or applying discounts can be configured or will be handled as per settings (discounts could be configured via the “Discounts and trial extensions” option mentioned in docs, possibly).
- **Try it out:** If you have a new app, it’s probably simplest to start with managed pricing. If you find it too limiting (e.g., you need usage-based billing or more complex conditional charges), you can switch to manual.
- Note that as of Summer 2024, Shopify introduced **Managed Pricing with usage** in the form of Functions (for certain apps like subscriptions via Functions). But in general, if you need usage charges, you might still use manual Billing API or a hybrid.
- **Limitations of Managed Pricing:**
- It’s meant for straightforward monthly/annual plans. If your pricing is very complex (say, tiered by usage or something), managed might not cover it fully (though you could price usage externally and just use managed plans as tiers).
- Also, managed pricing doesn’t currently let you do *in-app* dynamic charges like one-time add-ons or per-use charges – those would still require Billing API usage. It’s really for subscription plans primarily.
- **Manual override:** You can revert to manual billing if needed by switching off managed pricing in settings. But if you already have merchants on managed plans, switching to manual means you’d have to take over handling their billing moving forward (which could be complicated). Likely, you’d only switch if done early or if you plan a major change and migrate users.

To summarize, **Managed App Pricing** is Shopify’s way of simplifying billing for app developers. It handles the heavy lifting of subscription management, allows you to configure plans through a GUI, and provides a consistent checkout experience for merchants[\[290\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=Shopify%20Partner%20Dashboard%2C%20without%20needing,apps%20by%20editing%20your%20pricing). It’s particularly great for developers who aren’t comfortable with the GraphQL Billing API or who want to avoid maintaining billing logic. If your app’s pricing model fits the mold (free, monthly, annual plans, possibly with trials/discounts), it can save you time and reduce errors. You just focus on building your app’s functionality and let Shopify worry about charging the merchants correctly.
## <a name="redirect-to-the-plan-selection-page"></a>Redirect to the plan selection page
When using **Managed Pricing**, a common need is to redirect new merchants to the Shopify-hosted plan selection page right after installation (so they choose a plan before using the app). However, embedded apps run in an iframe and normally can’t redirect the parent window for security reasons[\[291\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=page%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,Shopify%27s%20Remix). Shopify provides a solution using the Shopify App Bridge (or specifically, their Remix utilities if using Shopify’s Remix template) to perform this redirect.

- **Use Case:** After a merchant installs your app (or opens it and doesn’t have an active subscription), you detect that they haven’t picked a plan (**hasActivePayment** = false)[\[292\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=example%20code%20in%20this%20section,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s). You want to send them to the pricing\_plans page (which is outside the iframe).
- **Challenge:** Your app iframe cannot bust out to top-level navigation by default (browser prevents an iframe from changing its parent’s location unless allowed).
- **Solution:** Shopify’s App Bridge and Remix toolkit include a special redirect function that can navigate the admin outside the iframe[\[293\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=rendered%20in%20the%20Shopify%20admin,pricing)[\[292\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=example%20code%20in%20this%20section,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s).

If you’re using the **Shopify App Template (Remix)**: - Shopify has built-in billing.check() and redirect.toAppPricingPage() utilities in @shopify/shopify-app-remix package[\[292\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=example%20code%20in%20this%20section,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s)[\[294\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=subscription%20plan%20check%20runs%20at,%3D%20await). - In a loader (server-side) of your root route, you can do something like: 1. Authenticate the admin session (to get API access). 2. Call billing.check() to see if this store has an active payment (i.e., subscription/plan) for your app[\[295\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=Shopify%20credentials%20to%20handle%20server,return%20redirect%28%60https%3A%2F%2Fadmin.shopify.com%2Fstor). 3. If not active, call redirect.toAppPricingPage(storeHandle, appHandle) with target: "\_top" to break out of the iframe[\[296\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%22cool,%2F%2F%20...Otherwise). This crafts the URL https://admin.shopify.com/store/{store}/charges/{app}/pricing\_plans and instructs the browser to navigate top-level[\[297\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=selection%20page%2C%20which%20requires%20both,admin%28request%29%3B%20%2F%2F%20Check)[\[296\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%22cool,%2F%2F%20...Otherwise). 4. If payment is active, just render the app normally. - The code snippet provided by Shopify (in the doc) shows this logic in a app/routes/app.jsx loader: checking hasActivePayment and using redirect(...) from authenticate.admin() context to send to the plan page with target: "\_top"[\[295\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=Shopify%20credentials%20to%20handle%20server,return%20redirect%28%60https%3A%2F%2Fadmin.shopify.com%2Fstor)[\[298\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%22cool,apiKey%3A%20process.env.SHOPIFY_API_KEY).

For **non-Remix frameworks** (like if you use Node/React or Rails): - You can use App Bridge’s actions. Specifically, App Bridge has a Redirect action. In an embedded app, you’d do something like:

import {Redirect} from '@shopify/app-bridge/actions';\
const redirect = Redirect.create(app);\
redirect.dispatch(Redirect.Action.ADMIN\_PATH, {\
`  `path: `/charges/${appHandle}/pricing\_plans`,\
});

And possibly specify a new context or target window (I recall something like Redirect.Action.REMOTE or so). But simpler: **Shopify provides a special URL scheme** shopify://admin/charges/{appHandle}/pricing\_plans that you can redirect the iframe to, which signals the Shopify admin to navigate top. The StackOverflow or forums show that approach: redirect('shopify://admin/charges/my-app-handle/pricing\_plans') with target \_top, does the trick[\[299\]](https://community.shopify.dev/t/shopify-plan-selection-page/18922#:~:text=,const%20storeHandle%20%3D%20shop).

- **Requirements:**
- Your app must be embedded and using Shopify App Bridge or the legacy EASDK for this to work.
- Also, **Managed Pricing** must be enabled and you have at least one plan configured[\[300\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=user%20experience%20while%20working%20within,If%20there), otherwise that URL might not work.
- The code examples assume you have your appHandle (this is set in shopify.app.toml or in Partners as the URL handle for your app)[\[301\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%3D%20async%20%28,shop.myshopify.com%22%20const%20storeHandle%20%3D%20shop.replace%28%27.myshopify.com).
- **When to use:** Typically right after OAuth/install. Many developers set their embedded app’s main route to check billing status. The doc suggests doing it in the root loader for a Remix app, which covers every page load (ensuring non-payers get bounced to pay wall)[\[302\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=,from%20your)[\[295\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=Shopify%20credentials%20to%20handle%20server,return%20redirect%28%60https%3A%2F%2Fadmin.shopify.com%2Fstor). You might also specifically only run it on first load.
- **Target \_top:** Note they specifically mention { target: "\_top" } in the redirect for the admin URL[\[296\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%22cool,%2F%2F%20...Otherwise). This is crucial – it instructs the browser to break out of the iframe and redirect the whole browser window (which goes to the secure admin domain).
- **Next Steps after redirect:** The merchant approves a plan on the pricing page. Upon approval, they’re sent to your configured **returnURL** (with App Bridge, likely back to your app route) or the welcome path if you set one. At that point, hasActivePayment becomes true.
- The doc snippet shows after a successful approval, Shopify will bring them back and then your check would pass and load the app normally[\[292\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=example%20code%20in%20this%20section,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s)[\[294\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=subscription%20plan%20check%20runs%20at,%3D%20await).
- You should also possibly handle the scenario if they decline or close the window – maybe still restrict access to features and keep showing a “Please select a plan to continue” message with a button to try again (leading to plan page).
- **Testing:** On a development store, since charges are free, when you redirect to pricing page and pick a plan, Shopify auto-approves with a $0 test charge. Test that your redirection logic doesn’t loop or break.

In summary, **redirecting to the plan selection page** is a best practice for apps using managed pricing. It ensures merchants immediately see the pricing plans and formally subscribe to one, rather than accidentally using the app without selecting a plan. The provided tools (in Shopify’s Remix template or via App Bridge) make this straightforward. Just remember, you can’t do a normal client-side window.top.location.href = ... due to cross-origin restrictions; use Shopify’s methods which are designed to do it safely[\[303\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=page%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,remix%29%20package).

By implementing this, you create a seamless onboarding: the merchant installs the app → they’re prompted to pick a plan → then they go into the app on that plan. No manual navigation needed. This improves conversion to paid plans and follows Shopify’s guidelines for gating app functionality behind an approved charge.
## <a name="offer-free-trials"></a>Offer free trials
**Free trials** allow merchants to use your app for free for a limited time before billing starts, which can increase installs by reducing upfront risk. Shopify’s billing system supports free trials easily, especially for subscription charges[\[259\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20trials%20delay%20the%20start,a%20number%20of%20specified%20days). Here’s how to implement and manage them:

- **Trial Duration:** When creating a recurring subscription charge via GraphQL, you can specify a trialDays parameter (for example, 7, 14, 30 days – you choose)[\[304\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=You%20can%20use%20the%20GraphQL,Admin%20API%27s%20%2057%20mutation). If set, the merchant is not charged until those trial days elapse.
- During the trial, the subscription is considered active but in trial phase. The merchant’s Shopify invoice will later include the app fee after the trial.
- Note: Trials **delay billing**, but if a merchant uninstalls during a trial, they won’t be charged at all (the charge is cancelled).
- **How to set up (Manual Billing API):** Use the appSubscriptionCreate mutation with a trialDays: X argument[\[304\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=You%20can%20use%20the%20GraphQL,Admin%20API%27s%20%2057%20mutation). For example:

  mutation {\
  `  `appSubscriptionCreate(\
  `    `name: "Pro Plan",\
  `    `lineItems: [{ plan: { appRecurringPricingDetails: { price: { amount: 15, currencyCode: USD }, interval: EVERY\_30\_DAYS } } }],\
  `    `trialDays: 14,\
  `    `returnUrl: "https://yourapp.com/billing/finish"\
  `  `) {\
  `    `confirmationUrl\
  `    `appSubscription { id }\
  `  `}\
  }

  This would create a $15/month subscription with a 14-day free trial. The confirmation page Shopify shows the merchant will clearly indicate the trial (“You will be charged $15 every 30 days after 14 days”).
- **Managed Pricing:** If using Managed App Pricing, you can simply input a trial duration when creating the plan in Partner Dashboard[\[280\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=,where%20the%20merchant%20will%20be). Shopify then automatically gives that trial for that plan.
- **Effect on Billing Cycle:** A trial essentially shifts the first billing date. For a 30-day cycle app, if a merchant starts a 14-day trial on Jan 1, the first charge occurs Jan 15 (covering Jan 15 – Feb 14 as first billing cycle). The merchant’s app billing cycle aligns with the trial end.
- Shopify notes: *“if a merchant adds an app during a free trial period, then any app charges are included in the next invoice.”[\[305\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Note)* That means they won’t see app charges until the trial is over and the next Shopify billing date comes.
- **Trial Extensions:** You can extend a trial via another GraphQL mutation appSubscriptionTrialExtend if you want to give more free days as a gesture or support issue resolution[\[304\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=You%20can%20use%20the%20GraphQL,Admin%20API%27s%20%2057%20mutation). This is useful if a merchant needs a bit more time. But you can only do it once per subscription (and I believe only while the trial is active).
- **Trial for Affiliate installs:** Shopify mentions affiliates – *“use trials to allow affiliate Partners trial access to your app”[\[306\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=To%20help%20increase%20your%20app,stores%20on%20behalf%20of%20merchants)*. This implies if a Shopify Expert or Affiliate is building a store for a client, you might give them a free period. Typically, development stores (created by Partners) allow free app usage until the store goes live (that’s built into Shopify – dev stores don’t charge app fees). So this comment might be referring to that dev store scenario or to arranged promotions.
- **Zero-charge trial usage:** If your app is completely free on dev stores (many are by default), you might not need a trial. But for live stores, trials are a major selling point.
- **Testing free trials:** In a dev environment, if you simulate a subscription with trialDays, Shopify will create it. On a dev store, the charge isn’t real anyway, but it will show trial status. You can test logic like: on trial vs. paid (the GraphQL object will have status: ACTIVE and maybe trialDays left).
- **Communicating trials to users:** Make sure your App Store listing mentions any free trial. Usually the App Store will automatically show “14-day free trial” tag if you configure it. In-app, perhaps let merchants know how many days remain or what happens after trial.
- **What happens after trial ends:** If the merchant doesn’t uninstall, Shopify will automatically attempt to charge them. There’s no additional confirmation – they already approved it at install. So day 15 (in example) the charge goes through. If it succeeds, the app subscription continues. If it fails (payment failed), I believe Shopify will retry and may mark the app subscription as pending/frozen until payment.
- **Limitations:**
- Free trials are only for new subscription agreements. If a merchant upgrades or downgrades, you typically don’t apply another “trial” – and Shopify doesn’t allow stacking a new trial on a replacement subscription.
- Also, a merchant cannot exploit trials by uninstalling and reinstalling – Shopify tracks if a store had your app before and can deny a second free trial in some cases (Shopify’s policy is one trial per app per store).
- **Difference between trial and free tier:** A free trial is time-limited full access. A free *plan/tier* is a functional but limited version of the app that is free forever until they need to upgrade. Some apps do both: e.g., free plan available (with limited features) AND also a 7-day free trial of any paid plan. That gets complex but is possible – you’d handle free plan as $0 subscription (no billing) and only use trial for the higher plans.
- **Shopify Partner friendly trial:** If you want to let Shopify Partners (development stores) use your app for free until transfer, you don’t do that via trial – Shopify automatically doesn’t charge apps on dev stores, and they encourage you to be “Partner-friendly” by not charging on dev shops. You can contact Shopify to list your app as Partner-friendly and they’ll tag it on the App Store.
- The doc hints: *“If you make your app free for development stores, contact Shopify Support to get on the Partner-friendly app list.”[\[307\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Note)*. This is separate from trials, but related to giving partners a free experience.
- **“Free testing” vs trials:** The doc also differentiates **Free testing** (for dev stores) from trials for merchants[\[308\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Anchor%20to%20Set%20up%20free,testingSet%20up%20free%20testing)[\[309\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=We%20recommend%20subscribing%20to%20the,their%20access%20to%20the%20app). They recommend you detect dev stores via the ShopPlan API (which returns partnerDevelopment: true for dev shops)[\[310\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20testing%20doesn%27t%20create%20an,return%20the%20following%20key%2Fvalue%20pair) and simply not create charges for those. Subscribe to SHOP\_UPDATE webhook in case a dev store becomes a paid store (then you should start billing)[\[309\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=We%20recommend%20subscribing%20to%20the,their%20access%20to%20the%20app). They also mention contacting support to list your app as Partner-friendly if you do this[\[307\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Note).
- **After trial communication:** Since merchants aren’t automatically notified by Shopify when the trial converts to paid (they will see it on their invoice, but no separate email), it’s good practice to maybe send an in-app notification or email near trial end: “Your free trial is ending in 3 days – you will be charged according to the plan you selected.” This can reduce surprise and churn.
- **Limitations note:** *“Free trials are only available to merchants who agree to a new subscription, and can’t be added to existing subscriptions.”[\[311\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Anchor%20to%20LimitationsLimitations)* – i.e., you can’t retroactively give a trial after they’ve been on a paid plan, and you can’t apply a trial to an existing recurring charge (it’s set at creation only).

In summary, free trials are a proven strategy to encourage app adoption. Shopify’s Billing API makes it straightforward to implement with a trialDays parameter[\[259\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20trials%20delay%20the%20start,a%20number%20of%20specified%20days). Use them wisely – choose a duration that’s enough for merchants to see value in your app but not so long that they forget about it. Common durations are 7, 14, or 30 days depending on app complexity. Ensure you handle the transition out of trial smoothly, and be aware of the one-trial-per-store rule. With managed pricing, just set it in the plan setup and Shopify handles everything. Trials combined with Shopify’s seamless billing flow lead to a low-friction onboarding for your users[\[312\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20trials%20enable%20merchants%20to,apps%20that%20they%27ve%20used%20before).
## <a name="about-subscription-billing"></a>About subscription billing
A **subscription billing model** means your app charges merchants a recurring fee (typically monthly or annually) for continued access or service[\[313\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fsubscription,it%20works%20An%20app%20can). Shopify supports this extensively via the App Subscription APIs. Here’s an overview of how subscription billing works on Shopify and how to implement it:

- **One Active Subscription per App per Store:** A store can only have one active subscription charge for your app at a time[\[314\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=GraphQL%20Admin%20API%27s%20billing%20objects,Charges%20and). If they change plans, the old one is canceled and replaced by the new one[\[315\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=subscription%2C%20and%20any%20recurring%20charges,AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin). This simplifies billing – you’re not stacking multiple recurring charges for one app.
- **Merchant Approval Required:** Merchants must always approve subscription charges via the Shopify billing prompt (either during install or when upgrading)[\[314\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=GraphQL%20Admin%20API%27s%20billing%20objects,Charges%20and). You cannot start charging recurring fees without that explicit approval step.
- **Automatic Billing:** Once approved, recurring charges are billed automatically by Shopify at the interval you set (every 30 days for monthly, every 365 days for yearly). The merchant doesn’t have to re-approve each renewal. It’s **auto-renewing until canceled** (by uninstall or charge cancellation)[\[316\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=GraphQL%20Admin%20API%27s%20billing%20objects,merchant%20who%20already%20has%20an).
- **Plan Changes:** If a merchant switches plans mid-cycle:
- They approve a new charge (e.g., upgrading from Basic $5 to Pro $15). Shopify will then **cancel the old subscription** and schedule the new one to start immediately or at period end based on parameters[\[315\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=subscription%2C%20and%20any%20recurring%20charges,AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin).
- **Proration vs Deferral:** Shopify can **prorate charges** if the price increases mid-cycle, or issue **prorated credits** if price decreases[\[260\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=overpaying%20for%20the%20service%20that,00%20plan)[\[262\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%3D%20%2410.00%20%60%60%60%20,For%20example). For example, upgrade: merchant pays the difference for the remainder of period (see equation in doc: essentially charge = old plan cost + pro-rated difference to new plan[\[317\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=billing%20cycle,Avoid%20crediting%20on%20top%20of)). For downgrade: Shopify might apply a credit to next bill[\[318\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=charges%20are%20prorated%20when%20a,The).
- If the switch is from an annual to a cheaper annual or to monthly, Shopify will often defer the new charge until the current paid period ends (so they don’t double-charge)[\[319\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=Cancel_an_app_subscription_on_a_shop_and_issue_prorated_credits%29.%20,Cancelling%20subscriptions%20When%20a%20merchant). They use AppSubscriptionReplacementBehavior to define whether to cancel immediately (with credit) or after period.
- The developer can specify behavior via the API – e.g., replaceBehavior: PRORATE vs REPLACE\_IMMEDIATELY. Shopify docs mention you can decide how to handle overlapping time[\[263\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=,You%20can%20create%20the%20following).
- **Uninstall = Cancel:** If a merchant uninstalls your app, Shopify automatically cancels the subscription charge[\[320\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%5B%60AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin,of%20the%20rest%20of%20the). The merchant is not refunded for the remaining period (no automatic prorated refund) – however, they won’t be charged further. They can still reinstall and use remaining time until next bill if they wanted, per doc[\[321\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%5B%60AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin,Type%20Description%20Example%20use%20case).
- Shopify explicitly says no credit is given for the remainder of the period on uninstall[\[322\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%5B%60AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin,billing%20account%20freezes%2C%20associated%20app), but merchant could reinstall and continue using until original cycle end (most won’t though). As a developer, you typically cut off service on uninstall.
- **Store Freeze/Pauses:** If a store’s Shopify account is frozen (non-payment of Shopify bill) or paused, app subscriptions also freeze[\[323\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=billing%20period,You%20can%20create%20the%20following). They resume when the store reactivates. So you might get no payment during that period but should ideally stop service if store is frozen.
- **Annual vs Monthly:** Shopify allows both. Many apps offer a discount for annual prepayment (say 10% off). The App Store listing will show both if you offer. Annual is charged upfront for the year. If a merchant switches from annual to monthly or vice versa, Shopify handles it (e.g., if going from annual to monthly mid-year, the monthly might only start after the year paid ends)[\[324\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=2)[\[325\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=You%20need%20to%20optimize%20how,minimize%20impact%20on%20checkout%20speed).
- **Trials on Subscriptions:** You can attach a free trial to a subscription (already covered under free trials). If they uninstall during trial, nothing is charged. If they reinstall, careful: no second trial typically.
- **Discounts on Subscriptions:** Covered under subscription discounts. Essentially, you can say “20% off for first 6 months” or “fixed $5 off for first 3 charges,” which encourages signups. Shopify’s API supports that by parameters when creating the charge (or in Managed Pricing by setting a discount).
- **Example Use Cases:** Most SaaS-style apps (reporting, marketing, etc.) use subscription billing. E.g., an SEO app might be $20/month. A loyalty app might be $10/month or $100/year. Subscription billing is predictable revenue for you and predictable cost for merchants.
- **App Subscription API Entities:**
- AppSubscription object (GraphQL) represents the subscription contract.
- It has fields like status (Active, Cancelled, Expired, etc.), name, trialDays, currentPeriodEnd, lineItems (which contain price, interval, etc.), and a lot around pricing changes.
- The AppSubscriptionCreate mutation returns an AppSubscription or a confirmation URL. AppSubscriptionCancel can cancel with optional prorate.
- There are webhook topics: APP\_SUBSCRIPTIONS\_UPDATE (fires on status changes, e.g., after each billing or if canceled)[\[326\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%5B%40shopify%2Fshopify,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s)[\[327\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=To%20receive%20a%20notification%20when,Admin%20API%27s%20APP_SUBSCRIPTIONS_UPDATE%20webhook%20topic).
- **Changelog and improvements:** Shopify introduced many improvements in 2021-2023:
- Made subscription billing available to all (it used to be tied to sales channels but now any app can use recurring charges).
- They also integrated subscription charges more seamlessly into admin (like showing upcoming app charges).
- The doc snippet mentions that on Jan 31, 2024, app configuration became versioned (which is separate, but relevant if you think about deploying changes).
- **Testing and Edge Cases:**
- Test upgrading/downgrading in a dev environment. On dev stores, since charges are $0, proration might not truly apply. But you can simulate by quickly changing plan and using GraphQL to see if credits are calculated (the API returns proration details if you request it).
- Understand that merchants can decline a charge. If a merchant tries to upgrade, they have to approve new charge; if they don’t, they stay on old plan.
- If your app uses offline payments or external charges (rare cases), those cannot be part of the “app subscription” and would break rules. So keep all app fees in the subscription.
- **Canceling Subscriptions:** If you need to cancel a merchant’s subscription (say you’re sunsetting app or giving a courtesy cancel), you can call appSubscriptionCancel via API or from Partner Dashboard you can refund (which cancels). Cancelling stops future billing immediately[\[328\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=of%20the%20annual%20billing%20cycle,graphql%2Flatest%2Fmutations%2FappSubscriptionCancel%23examples). If you cancel mid-cycle without refund, merchant still technically paid through end of period (Shopify doesn’t automatically refund unless you issue one).

**Summary:** Subscription billing on Shopify is robust and is the backbone of most app monetization. It ensures recurring revenue and simplifies life for merchants by bundling app fees into their monthly Shopify bill. As a developer, you need to implement subscription charges via the Billing API (or Managed Pricing) and handle plan changes properly[\[260\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=overpaying%20for%20the%20service%20that,00%20plan)[\[262\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%3D%20%2410.00%20%60%60%60%20,For%20example). Shopify does a lot for you (proration, automated billing, cancellation on uninstall, etc.), but you should still: - Keep track of the subscription status for each shop (store it or fetch when needed). - Lock premium features if the subscription is not active (e.g., if a payment fails and subscription freezes, you might get a webhook and should perhaps limit access). - Provide a good UX around upgrading/downgrading (which basically means triggering the billing prompt and then reacting to success).

By adhering to Shopify’s subscription billing system, you also fulfill the requirement that apps use Shopify billing (thus getting the favorable revenue share)[\[245\]](https://shopify.dev/docs/apps/launch/billing#:~:text=The%20app%20billing%20API%20resources,you%20have%20questions%20or%20concerns). It’s a win-win: you get reliable payments and merchants get a trusted billing experience.
## <a name="create-time-based-subscriptions"></a>Create time-based subscriptions
A **time-based subscription** means charging a fixed amount on a fixed schedule (e.g., $X every month or $Y every year) – basically a standard recurring plan[\[329\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=A%20time,days%20and%20every%20365%20days). To implement it via the API:

- **Requirements:** Ensure you have Shopify Admin API access with billing scopes (the app must have the write\_applications\_billing access scope which is granted by default to public apps). Also, you need to be able to make authenticated GraphQL calls from your server to Shopify’s Admin API[\[330\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Anchor%20to%20RequirementsRequirements).
- **Step 1: Create the Subscription Charge:** Use the GraphQL mutation appSubscriptionCreate. Provide the following:
- **name:** A name for the charge (e.g., "Pro Plan").
- **returnUrl:** The URL Shopify should redirect to after the merchant approves or declines the charge[\[331\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=2,mutation%20with%20the%20following%20information).
- **trialDays:** (Optional) Free trial length if any.
- **Line Items:** Here you specify pricing details:
  - For a fixed recurring fee, you include an appRecurringPricingDetails object with price (amount and currency) and interval (EVERY\_30\_DAYS for monthly, ANNUAL for yearly)[\[332\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=,to%20provide%20the%20following%20information)[\[333\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Note).
  - Example:

    appSubscriptionCreate(\
    `  `name: "Pro Plan",\
    `  `returnUrl: "https://yourapp.com/billing/thankyou",\
    `  `lineItems: [{\
    `    `plan: {\
    `      `appRecurringPricingDetails: {\
    `        `interval: EVERY\_30\_DAYS,\
    `        `price: { amount: 29.99, currencyCode: USD }\
    `      `}\
    `    `}\
    `  `}],\
    `  `trialDays: 7\
    ) {\
    `  `confirmationUrl\
    `  `appSubscription { id }\
    }
  - If interval is omitted, it defaults to 30 days (monthly)[\[333\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Note).
  - You can set interval to ANNUAL for yearly billing.
  - **Note:** You can only choose 30 days or Annual as intervals – weekly or other intervals aren’t supported by API (except 30-day which is roughly monthly).
- Shopify will respond with a confirmationUrl[\[334\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=1,of%20creating%20an%20app%20subscription).
- You redirect the merchant to this URL (embedding scenario: use App Bridge redirect outside iframe).
- The merchant sees a page showing “App charges $29.99 every 30 days” (and trial if given).
- If the merchant approves, Shopify will charge them $29.99 every 30 days.
- **Step 2: Monitor subscription updates:** It’s important to know when charges succeed, fail, or if merchant changes anything:
- Subscribe to the webhook topic APP\_SUBSCRIPTIONS\_UPDATE for your app[\[335\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Anchor%20to%20Step%202%3A%20Monitor,updatesStep%202%3A%20Monitor%20subscription%20updates). Shopify will send this when a subscription’s status changes (like after each recurring payment, or if the merchant’s Shopify billing fails).
- On success, you might not need to do much (just continue service). On failure (payment failed), Shopify might mark subscription as Frozen; you might want to restrict app functionality or notify the merchant.
- Also, if merchant uninstalls, you get an app/uninstalled webhook (not this topic) to know they canceled.
- **Activating features after approval:** The redirect flow is asynchronous – when merchant approves, they’ll come back to your returnUrl. You should verify the subscription is active:
- You can either:
  - Use the appSubscription { id } from the mutation (but that only exists if they approved? Actually, if they decline, appSubscription will be null).
  - Or better, at returnUrl hit, query the Admin API for the store’s active subscription or check if there’s an AppSubscription now.
  - Alternatively, rely on the webhook.
- In practice, many devs just assume if the merchant got to returnUrl, it’s approved (which is often true). But including a check or showing “Setting up your account...” while confirming via API is ideal.
- **Canceling or Replacing a subscription:** Not part of initial setup, but:
- If you later want to upgrade/downgrade, you’d use appSubscriptionReplace or just create a new appSubscriptionCreate which will automatically cancel the old. The AppSubscriptionCreate mutation has a parameter replacementBehavior (like CANCEL\_ORPHANED or something).
- To cancel without replacement (e.g., merchant clicking “cancel plan” in your app settings), use appSubscriptionCancel GraphQL mutation.
- **Edge Cases:** Some merchants might install but never approve the charge (maybe they closed the billing prompt). In that case, Shopify will mark the charge as Declined or it will expire after 2 days[\[336\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Pending%20The%20merchant%20hasn%27t%20yet,Activated)[\[337\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Frozen%20The%20subscription%20is%20on,after%20the%20subscription%20payments%20resume). You’ll get a webhook for decline. You should handle that (perhaps keep showing a notice that they need to approve to use the app).
- **Multiple Plans:** If you have multiple plan options, you’d have separate charges the merchant can choose. You can implement that by either:
- Having separate endpoints/flows for each (like “subscribe to Basic” vs “Pro” triggers different mutation with different price).
- Or better, use Managed Pricing so Shopify shows them options (discussed earlier).
- But with manual approach, you essentially repeat Step 1 with different price/interval depending on choice.
- **Annual Plans:** For annual, just set interval to ANNUAL and price accordingly. Shopify will charge upfront for the year. If merchant upgrades annual plan mid-year to a higher annual plan, that triggers deferral (the new plan starts after current year, or if you choose immediate, a credit and new charge).
- **Display & Communication:** In your app UI, reflect the current plan and next billing date if possible. It’s nice to show “You’re on Pro Plan ($29.99/month), next payment on [date].” You can get next billing date from the AppSubscription GraphQL object (billing cycle info).
- **Recurring vs Usage**: Note this section is specifically “time-based” meaning the fee doesn’t change based on usage (aside from plan changes). If your pricing is purely fixed per month/year, this is all you do. If you also charge usage fees, that’s next section.

**Summary:** To create a monthly or yearly subscription: 1. Make the appSubscriptionCreate GraphQL call with the price and interval[\[338\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=2,mutation%20with%20the%20following%20information)[\[339\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=). 2. Redirect merchant to confirmation URL[\[334\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=1,of%20creating%20an%20app%20subscription). 3. Handle their return (unlock app) and listen for webhooks for ongoing status[\[335\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Anchor%20to%20Step%202%3A%20Monitor,updatesStep%202%3A%20Monitor%20subscription%20updates). 4. That’s it – Shopify will now bill them automatically every period until cancellation.

The guide ensures you set it up correctly and reminds to include things like the required GraphQL fields and note about default interval etc. Once set, you have a steady revenue stream if merchants stick around!
## <a name="create-usage-based-subscriptions"></a>Create usage-based subscriptions
Usage-based subscriptions charge merchants based on how much they use a service (within a billing cycle), often on top of a base fee. For example, $5/month + $0.05 per email sent. Shopify’s billing system supports this via **app usage records** with a **capped amount** to prevent unlimited charges[\[340\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=A%20usage,day%20billing%20cycle)[\[341\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=).

Implementing usage-based billing involves several steps:

- **Step 1: Create the Subscription (with capped usage):** Use appSubscriptionCreate mutation similar to time-based, but include usage terms:
- Provide name, returnUrl, maybe trialDays as usual.
- Instead of (or in addition to) a recurring price, you specify a cappedAmount (the maximum $$ that can be charged for usage in a 30-day cycle) and a terms string that describes the usage charges to the merchant[\[342\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Make%20a%20request%20to%20the,mutation%20with%20the%20following%20information)[\[341\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=).
- Example:

  mutation {\
  `  `appSubscriptionCreate(\
  `    `name: "Email Marketing Pro",\
  `    `returnUrl: "...",\
  `    `lineItems: [{\
  `      `plan: {\
  `        `appUsagePricingDetails: {\
  `          `cappedAmount: { amount: 100, currencyCode: USD },\
  `          `terms: "$0.05 per marketing email sent"\
  `        `}\
  `      `}\
  `    `}],\
  `    `trialDays: 0\
  `  `) {\
  `    `confirmationUrl\
  `    `appSubscription { id }\
  `  `}\
  }

  This would set up a usage-based plan with a **cap of $100 per 30 days** and it will show the terms (0.05 per email) on the approval screen[\[341\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=). Merchants must approve both the concept of usage charges and the cap.
- Note: cappedAmount is required for usage-based – you must set a monthly limit (Shopify wants merchants to have an upper bound for predictability)[\[341\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=).
- The terms field is purely informational text for the merchant, but required. Keep it short (will appear on the billing modal).
- If you want a base recurring fee + usage, you actually combine line items: one lineItem with appRecurringPricingDetails for base fee, another with appUsagePricingDetails for usage (this is how you get combined plan)[\[343\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=You%20can%20implement%20a%20pricing,Make%20a%20request%20to%20the).
- Once merchant approves, the subscription is active with usage enabled.
- **Step 2: Record Usage:** Throughout the billing cycle (30-day cycles), your app should track the user’s usage. When appropriate (daily, weekly, or at threshold triggers), create usage records via appUsageRecordCreate mutation[\[344\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Anchor%20to%20Step%202%3A%20Create,Create%20an%20app%20usage%20record)[\[345\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=mutation%20):
- It requires the subscriptionLineItemId (which you get from the active subscription’s usage line item) and a price (amount + currency) and optionally a description for that usage record[\[346\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=appUsageRecordCreate).
- Essentially: you accumulate usage and then hit Shopify with charges for it. Some approaches:
  - **Incremental usage records:** e.g., each time merchant sends 100 emails, create a usage record for $5. Shopify will sum them up. You could also do daily totals, etc.
  - **One-time at period end:** Alternatively, you can wait until end of month and create one usage record for the total usage. But be mindful not to exceed the cap. The cap is total per cycle.
- If you try to create a usage record that would cause the merchant to exceed the capped amount, the API will throw an error[\[347\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,before%20you%20can%20create%20more) (or simply not allow beyond cap). The doc warns: if you need to charge beyond the cap, you must first raise the cap with merchant approval[\[348\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,Make%20a%20request%20to%20the).
- Example usage record creation:

  mutation {\
  `  `appUsageRecordCreate(\
  `    `subscriptionLineItemId: "gid://shopify/AppSubscriptionLineItem/12345?index=0",\
  `    `description: "Sent 1000 emails",\
  `    `price: { amount: 50.0, currencyCode: USD }\
  `  `) {\
  `    `userErrors { field, message }\
  `    `appUsageRecord { id }\
  `  `}\
  }

  This will count $50 toward that merchant’s usage charges.
- Typically, you would call this from your server when usage occurs. E.g., each time merchant triggers an action, accumulate counters and periodically call usageRecord.
- **Consider pacing**: You can send multiple usage records; Shopify will aggregate them. But don’t spam too frequently due to API limits. Once a day or in real-time for significant events is common.
- **Step 3: Monitor usage limits:** Two things can happen: merchant can change their cap or approach their cap:
- Merchant can go to their Shopify admin (Settings > Plan > App charges) and raise the capped amount if they need to (some do if they hit limits often). If they do, Shopify fires APP\_SUBSCRIPTIONS\_UPDATE webhook letting you know the cap changed[\[349\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Anchor%20to%20Step%203%3A%20Monitor,3%3A%20Monitor%20app%20usage%20limits).
- Shopify also provides a webhook APP\_SUBSCRIPTIONS\_APPROACHING\_CAPPED\_AMOUNT when usage has reached 90% of cap[\[350\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=To%20receive%20a%20notification%20when,Admin%20API%27s%20APP_SUBSCRIPTIONS_UPDATE%20webhook%20topic). You can subscribe to that to possibly warn the merchant through your app or just to track it.
- You should ideally also internally monitor usage vs. cap (you know how much they used and the cap from subscription data) and perhaps alert merchant via in-app message “You’re nearing your usage limit this month.”
- **Step 4: Monitor subscription status:** As with time-based, use APP\_SUBSCRIPTIONS\_UPDATE to know if they cancel or the cycle resets etc. When a new cycle starts, usage count resets to 0 and new cap applies fresh. Shopify will invoice the total usage at period end.
- **On Billing Cycle End:** Shopify will automatically charge the merchant for the sum of all usage records created in that cycle (up to cap). It appears on their invoice as your app name with usage details.
- If the usage didn’t reach the cap, they pay exactly what usage you recorded.
- If usage hits cap, they pay the cap (and you might have unrecovered usage beyond cap which you should perhaps not allow or carry over).
- In either case, after billing, usage count resets for new cycle.
- **Example:** Merchant has cap $100/month. Your app charges $0.05 per email. That means they’re effectively capped at 2000 emails per month (if they send more, you only can charge $100).
- Suppose by mid-month they send 1000 emails, you record $50 usage. By end month they sent 1800 emails total, you record another $40. Total $90 < $100 cap. Shopify bills $90. Next month starts from $0.
- If they had sent, say, 2500 emails ($125), your usage records might sum to $100 and further records would be rejected after hitting $100. You’d likely try to record the $25 that went beyond, fail, and at least know they hit cap. You might want to inform merchant “You've hit your monthly cap of $100 – further usage this month won't be charged (and we may limit service if that’s in your terms). Consider raising your cap or upgrading plan.”
- **Raising Cap:** If merchant consents to higher usage, you call appSubscriptionLineItemUpdate to increase cappedAmount and they must approve that change (it’s like editing the agreement)[\[351\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Step%202%3A%20Update%20the%20capped,following%20mutation%20is%20an%20example). You’d likely provide a UI “Increase limit”. Once approved, you can then create more usage records beyond old cap.
- **Limits:**
- You cannot do usage-based on annual cycles; usage resets and charges are always in 30-day cycles (even if base is annual, usage still charged monthly I believe).
- There’s no built-in tiering or volume discount logic – you implement that by how and when you record usage and possibly by adjusting price or having multiple usage-based items.
- **Managed Pricing and Usage:** At the time of writing, the standard Managed Pricing doesn’t support custom usage charges. However, Shopify has introduced *Functions* for usage-based pricing (like Shopify Functions can create usage charges for certain apps e.g. a shipping app). But generally, if you need usage, you often stick with the Billing API manually.
- **Best Practices:**
- Keep your **terms** clear (e.g., "$X per Y unit").
- Record usage promptly so the merchant’s App Store listing usage info updates (Shopify’s UI can show how much of cap used).
- Don’t set an unreasonably high cap by default; make it around what a normal heavy user might need to avoid hitting it inadvertently.
- On your side, implement logic to pause or limit service if they hit cap, or to continue but essentially give free service beyond cap (since you can’t charge more).

**Summary:** Usage-based subscriptions require a bit more work: 1. **Set up the subscription with a cap and terms** that describe usage pricing[\[341\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=). 2. **Throughout each month, create usage records** for the charges the merchant incurs[\[344\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Anchor%20to%20Step%202%3A%20Create,Create%20an%20app%20usage%20record)[\[345\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=mutation%20). 3. **Ensure you never exceed the cap** (monitor 90% webhook and cap errors). 4. **At month’s end, Shopify bills the total usage**. Then repeats next cycle.

It gives flexibility to charge for things like emails sent, SMS sent, orders processed, etc., while still having Shopify handle the invoicing and payments. Merchants like the safety of a capped amount, and you get the benefit of easy usage charging without building your own metering system (beyond counting events).
## <a name="x6e274120809f6c2c9c5b171066cf0b21b1f7862"></a>Combine time and usage-based subscriptions
You might want a plan that charges a fixed base fee **plus** usage charges. For instance, $10/month + $0.05 per order processed beyond 100 orders. Shopify supports combining a recurring charge and usage charges in one subscription so merchants approve them together[\[257\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=an%20app%20or%20certain%20features,you%20can%20implement%20with%20the)[\[352\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=You%20can%20implement%20a%20pricing,day%20billing%20intervals).

How to implement:

- **Plan Creation:** When calling appSubscriptionCreate, you can include multiple lineItems in the mutation:
- One line item with appRecurringPricingDetails for the base recurring amount (interval monthly or annual).
- Another line item with appUsagePricingDetails for the usage part (with cappedAmount and terms)[\[343\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=You%20can%20implement%20a%20pricing,Make%20a%20request%20to%20the)[\[353\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=graphql%2Flatest%2Fmutations%2FappSubscriptionCreate%23argument,following%20mutation%20is%20an%20example).
- Example:

  appSubscriptionCreate(\
  `  `name: "Pro Plan",\
  `  `returnUrl: "...",\
  `  `lineItems: [\
  `    `{ plan: { \
  `        `appRecurringPricingDetails: { interval: EVERY\_30\_DAYS, price: { amount: 10, currencyCode: USD } } \
  `    `}},\
  `    `{ plan: {\
  `        `appUsagePricingDetails: { cappedAmount: { amount: 50, currencyCode: USD }, terms: "$0.05 per order over 100 orders" }\
  `    `}}\
  `  `]\
  ) { confirmationUrl ... }

  This would charge $10 every 30 days plus usage up to $50 cap.
- **Note:** The usage terms should clarify what base includes vs. usage covers (Shopify doesn’t have a native concept of “first 100 free” in billing; you handle that in your app logic).
- **Merchant Approval Screen:** Shopify’s confirmation page will show something like:
- Recurring charge: $10 every 30 days.
- Usage charge: capped at $50 per 30 days, at $0.05 per order ... (terms string).
- So merchant knows, worst case they pay $60 in a month (base + full cap).
- **Tracking usage with base allowances:** If your model includes some amount in base (like 100 orders included, then pay per extra order), Shopify’s billing doesn’t automatically handle the “100 included” part. You must implement that logic:
- You would decide not to create usage records for the first 100 orders in a month. Only when order count >100, start recording usage for the extras.
- So, say merchant did 130 orders in a cycle:
  - You’d create usage records for 30 orders \* $0.05 = $1.50. That’s under the $50 cap.
  - Merchant’s bill: $10 + $1.50.
- If merchant did 100 or fewer, you create no usage records => they just pay $10.
- If they did a huge number such that usage cost hits cap, they'd pay $10 + $50 = $60, and anything beyond cap you wouldn’t bill (so you might effectively cap their usage or service).
- **Lifecycle (same as usage-based):**
- **Each cycle** Shopify will auto-bill the base fee and whatever usage has accrued (up to cap).
- The usage cap resets each cycle. The base recurs.
- If merchant upgrades base plan, you handle similar to recurring scenario (the usage part can remain or also be upgraded perhaps with a higher cap).
- **Webhooks & Handling:**
- Use APP\_SUBSCRIPTIONS\_UPDATE for any changes (cap changes or plan changes).
- Use usage approach as before: track usage, record usage via API, monitor cap.
- The presence of a base fee doesn’t change how usage records are created or capped; it’s independent aside from being part of same subscription ID.
- **Downgrades/Upgrades**:
- If a merchant switches to a different combined plan (maybe higher base and higher cap), it’s a replacement. Shopify will handle pro-rating base fee and possibly usage differences. Actually, usage is unique in that if they switch mid-cycle, I suspect usage charges incurred remain on old sub until billing and the new sub’s usage starts fresh (or they might combine, unclear).
- Likely if upgrade mid-period, Shopify might cancel old and start new immediately, giving credit for unused base time and maybe crediting unused portion of cap? Actually, usage is pay-as-you-go, so no credit needed for usage (since they haven’t been charged usage until period end).
- So upgrade mid-cycle: old subscription gets canceled (they’ll still be billed at end for whatever usage happened on it up to cancellation time?), new sub begins.
- This scenario can be complex; one might avoid frequent plan changes on usage heavy apps, but if needed, test or consult Shopify’s docs for how usage is treated on replacement.
- **Communication:**
- On your app listing, be clear that the plan has a base fee + usage. It should reflect in the pricing section (Shopify probably shows something like “$10/month + usage fees may apply”).
- In-app, show usage consumption vs. cap so merchants know if they might incur extra charges.
- **Use Cases:**
- Apps like shipping or mailing might do this: e.g., $5/month subscription + $0.10 per label printed.
- Or CRM app: $20 base includes 1000 contacts, then $0.01 per additional contact.
- Combining gives you recurring revenue plus compensation for heavy usage, which is fair.

**Summary:** Combining time-based and usage-based billing means setting up a subscription with multiple components[\[343\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=You%20can%20implement%20a%20pricing,Make%20a%20request%20to%20the): 1. Merchant approves a recurring fee *and* a usage fee cap at once[\[353\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=graphql%2Flatest%2Fmutations%2FappSubscriptionCreate%23argument,following%20mutation%20is%20an%20example). 2. You charge them recurring every period and also log usage as needed each period. 3. Shopify bills both parts accordingly (fixed part at cycle start, usage at cycle end on the invoice). 4. Implementation is basically merging the instructions of the prior two sections (setup subscription with both components, then create usage records for usage component).

It’s a bit more complexity but Shopify’s Billing API allows it fairly cleanly by having multiple line items on the subscription[\[354\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=,The%20following%20is%20an%20example). Just ensure you manage both sides (don’t forget to create usage records, and don’t double-charge base).
## <a name="complex-pricing-models"></a>Complex pricing models
Complex pricing models refer to scenarios that aren’t covered by a simple monthly fee or straightforward usage – e.g., add-on modules, multi-part charges, tiered usage beyond what the standard API directly supports. Shopify’s guidance for complex models is essentially: **use usage-based billing in creative ways** to implement them[\[355\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=,merchants%20for%20more%20complex%20pricing).

From the snippet: - They caution that **annual subscriptions don’t support usage** – meaning you can’t do an annual base with usage (all usage caps reset monthly)[\[356\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=,Modify%20each%20subscription%20to%20reflect). So for complex needs, they lean on usage billing (which is monthly). - Example given: If you want to allow merchants to optionally add a paid module to your app, you can handle it as follows: - Modify your plans to reflect which modules are available, but charge for the module via usage charges when they use it[\[357\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=billing,an%20example). - Essentially, **treat an add-on as usage**. For instance, base subscription is $60/30 days (covering core features), and the add-on module costs $30 per day when active. Rather than making separate subscriptions, you could set a usage charge representing the module’s daily cost and trigger it each day the module is on[\[358\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=Step%201%3A%20Account%20for%20additional,the%20billing%20cycles%20and%2For%20usage). - They suggest an example: app with default subscription + optional $30/day module – set your usage cap to cover maximum module cost plus some usage estimate[\[359\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=billing%2Fcreate,2%3A%20Keep%20track%20of%20billing), and use usage records to bill for module usage.

- They mention in the example:
- Base $60/month (just in explanation, actual recurring in code).
- $0.10 per email usage.
- $30/day for an add-on module.
- To cover that, your monthly usage cap might be high (e.g., $30 \* 30 days + expected email cost).
- E.g., perhaps cap at $300 + maybe whatever average email cost, say $30, so cap ~ $330 monthly[\[358\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=Step%201%3A%20Account%20for%20additional,the%20billing%20cycles%20and%2For%20usage).
- Then you use usage records in two streams: one for emails, one for the module usage. Since Shopify’s usage charges only have one “terms” string, you likely combine them in description or in two separate usage line items (but you only had one usage line item to start with).
- Actually, if it’s truly distinct things, you might consider splitting into two usage line items (Shopify’s API doesn’t allow multiple usage line items natively in one subscription, from what I recall – it was one usage cap per subscription).
- So more likely, you unify them: e.g., terms: “$0.10 per email, $30/day for X module, capped at $330”.
- Then in your code, every day the module is used, record $30 usage. And for emails usage, record accordingly. Shopify sums them.
- Essentially, **“flexible usage-based billing”** is Shopify’s solution for most complex pricing:
- You have one subscription possibly with $0 base, and everything as usage (cap can be high).
- Or small base plus usage for all extras.
- **When it says “complex models beneficial for larger app subscribers”[\[360\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=application.%20,The%20guide%20uses)**, they acknowledge bigger merchants might want more modular pricing. Usage-based approach scales with usage, which bigger merchants often prefer to flat limits.
- **Pre-2021 approach vs now:** Before, apps might have hacked by creating multiple subscriptions (e.g., one for base, one for addon as separate “app”). Now, Shopify doesn’t allow multiple active subs per app, so usage approach is the way.
- **Developer responsibility:** You have to implement the logic for any complex calculation:
- If billing biweekly or some custom interval – usage approach can simulate it (e.g., bill usage at two separate times in cycle).
- If wanting to only charge if threshold reached – you decide when to create usage record (you could wait until threshold).
- If combining multiple usage types – you either merge them into one usage line (with one cap) or perhaps ask Shopify support if multiple usage lines can be allowed (not standard as of docs).
- **Limitations & workaround:**
- One limitation: usage charges are always post-paid (at period end). If you wanted to charge *immediately* when module is purchased, you can’t easily do that in same app – you might do a one-time charge for immediate, or instruct the merchant to wait for invoice.
- The doc suggests if you want to bill “biweekly,” you can simulate by scheduling usage charge creation every 2 weeks for that half-cycle[\[361\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=intervals%20and%20usage%20In%20your,desired%20amount%20every%20two%20weeks) (the merchant still pays at month-end but effectively you’re charging half at mid).
- They likely mention that because some apps want to align with merchant’s billing patterns (though Shopify will always align with monthly invoice).
- **Better Example (Add-on modules):** Suppose your app has core features and two optional modules (A and B) each for an extra fee. Instead of confusing multiple plans:
- Have one plan (or two tiers if core also has tiers) and treat module usage as “when merchant uses module, bill usage”.
- If module is a fixed monthly add-on, you could either:
  - have them opt-in and then just charge usage as a single record each month for that add-on price.
  - or create separate private plan with that module included as base fee.
- The usage method is dynamic: merchant turns module on, you start logging daily or immediate usage charges for it.
- If they turn it off before end of month, they only pay prorated usage since you only logged those days.
- That’s quite flexible and can be fairer. You just must communicate that clearly.
- **Scoping example** (given by snippet):
- They want to support more complicated combos, their guidance basically: “be creative with usage-based billing, set cap high enough, and track usage of each component yourself”[\[357\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=billing,an%20example)[\[358\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=Step%201%3A%20Account%20for%20additional,the%20billing%20cycles%20and%2For%20usage).
- **Partner considerations:** If you do something like $30/day module, ensure the merchant’s cap covers worst case. If they exceed often, maybe suggest a plan change or raise cap.
- **Migrating old apps:** Some partners used to create separate “apps” for add-ons and charge separately. That’s not ideal for merchants. The usage approach keeps it all in one app listing.

**Summary:** Complex pricing often means combining multiple charges or conditional charges. Shopify doesn’t natively support multiple simultaneous subscriptions or conditional billing cycles, but using the usage-based framework gives you lots of flexibility: - You can effectively implement **modular or tiered pricing** by clever usage charge logic[\[362\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=product%20line%2C%20you%20can%20do,graphql%2Flatest%2Fmutations%2FappSubscriptionCreate%23examples). - It requires more work on your side (tracking triggers, ensuring cap covers all charges). - Always keep merchants informed (if the pricing isn’t straightforward, provide in-app breakdowns, etc.).

The key takeaway from Shopify: *“Use usage-based billing for complex scenarios.”* It provides flexibility in timing and amount, whereas subscriptions are fixed interval fixed amount[\[355\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=,merchants%20for%20more%20complex%20pricing). Between recurring, one-time, and usage charges, you can craft virtually any model (just sometimes need to think outside the box and possibly sacrifice immediate collection for consolidated billing).
## <a name="x59ddb556f686c53c0f35b2d0ce9ab43e0b09264"></a>Update the maximum charge for a subscription
This refers to changing the **capped amount** of an existing usage-based subscription. For example, a merchant wants to raise their monthly usage limit from $100 to $200. You need to update the subscription and get merchant approval for the new cap[\[348\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,Make%20a%20request%20to%20the).

- **Why update cap:** If a merchant is consistently hitting their cap or expects to use more, they may ask to increase it so your app doesn’t stop charging (and possibly stop service) at the old cap. It might also be needed if you introduce new usage aspects or the merchant’s business grows.
- **How to update:** Shopify provides the mutation appSubscriptionLineItemUpdate for this[\[363\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Step%202%3A%20Update%20the%20capped,following%20mutation%20is%20an%20example).
- You need the AppSubscription ID (and likely which line item if multiple, but usually only one usage line item).
- You pass the new capped amount.
- This action **requires merchant approval**, similar to initial charge creation.
- For example:

  mutation {\
  `  `appSubscriptionLineItemUpdate(\
  `    `id: "gid://shopify/AppSubscription/123456", \
  `    `cappedAmount: { amount: 200, currencyCode: USD }\
  `  `) {\
  `    `appSubscriptionLineItem {\
  `      `id\
  `      `cappedAmount { amount }\
  `    `}\
  `    `confirmationUrl\
  `    `userErrors { message }\
  `  `}\
  }

  The response gives a confirmationUrl if merchant approval is needed (which it is in this case)[\[363\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Step%202%3A%20Update%20the%20capped,following%20mutation%20is%20an%20example).
- You then redirect the merchant to that URL (just like initial billing). It will show something like “App is requesting to change maximum charge from $100 to $200 per 30 days”.
- **Important notes:**
- You can’t record a usage beyond current cap until this is approved[\[364\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=create%20a%20usage%20record%20for,before%20you%20can%20create%20more). If you attempt, as said earlier, the usage record creation fails.
- The merchant might decline. If they decline, you should handle it gracefully (maybe inform them usage will remain capped).
- If they accept, the new cap takes effect immediately.
- **When to trigger this:** Possibly:
- If your app sees that a merchant has hit, say, 100% of cap, you could automatically attempt to raise it (with merchant confirm). But better is to let the merchant choose.
- Perhaps provide a “Increase limit” button in your app settings. When clicked, call this mutation to get URL and redirect them to approve.
- Or instruct merchant to go to their Shopify admin “App charges” and manually raise cap (merchants can reduce or increase cap on their own up to a point via admin settings, I believe).
- The doc snippet says if a usage record fails due to cap, you need to increase cap and get approval **before you can create more records[\[348\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,Make%20a%20request%20to%20the)**.
- **Effect on subscription billing cycle:** Changing the cap doesn’t affect the cycle timing or base fee. It simply changes the maximum usage charge for subsequent usage in the current and future cycles.
- If they were already at $100/$100 cap this cycle and then raise to $200 mid-cycle, now you can log up to $100 more usage in same cycle.
- There’s no extra charge for raising cap itself, it's just permission.
- **Merchant view:** On their App subscription info, it would update the cap number and likely record that they approved an update.
- **Limitations:**
- You can’t update other aspects (like price per unit or terms) with this, only the cappedAmount (and maybe terms text? Not sure if API allows changing terms string).
- If you needed to fundamentally change pricing scheme, you’d likely create a new subscription.
- Cap updates are also constrained by some logic – e.g., you can’t lower cap below already-used amount in the current period. Likely you can’t lower cap via API easily; merchants can in admin if they want but Shopify might restrict lowering below usage to avoid undercharging.
- **User errors to handle:** If you try to set a cap too low or invalid, Shopify returns userErrors. For example, cap cannot be less than amount already consumed in period. Or currency must match original subscription currency.
- **Next steps after update:** After merchant approves, you’ll get a webhook APP\_SUBSCRIPTIONS\_UPDATE with the new capped amount probably[\[350\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=To%20receive%20a%20notification%20when,Admin%20API%27s%20APP_SUBSCRIPTIONS_UPDATE%20webhook%20topic). Also your mutation returns the new line item in the response after they approve.
- So you can update your internal records of their cap.
- Then continue recording usage normally.
- **Mid-cycle vs new cycle:** The cap update affects current cycle. If they were at 90/100 and raise to 200 on day 20, then now their cap for day 1-30 is effectively 200 (so they could incur up to 110 more charges).
- It does not wait until next cycle; it’s immediate so you can continue usage charges right away.

**Summary:** To **increase (or change) the maximum usage charge** for a merchant’s subscription: - Use the appSubscriptionLineItemUpdate GraphQL to set new cappedAmount[\[363\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Step%202%3A%20Update%20the%20capped,following%20mutation%20is%20an%20example). - This yields a confirmation URL which the merchant must approve (just like initial billing). - Once approved, your subscription’s usage cap is updated, and you can bill up to that new amount going forward[\[348\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,Make%20a%20request%20to%20the).

This ensures transparency – merchants must agree to any potential increase in billing beyond what they originally approved. It’s similar to how a phone plan might require consent to charge overages or raise limits.
## <a name="offer-subscription-discounts"></a>Offer subscription discounts
You may want to run promotions or incentives, like giving a discounted rate for a few months to encourage installs or reward loyalty. Shopify’s billing API supports **subscription discounts** (either percentage or fixed amount off) for a set number of billing cycles[\[365\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Offer%20subscription%20discounts)[\[265\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=You%20can%20apply%20subscription%20discounts,for%20new%20and%20existing%20subscribers).

Here’s how subscription discounts work:

- **Types of Discounts:**
- **Percentage discount:** e.g., 20% off.
- **Fixed amount discount:** e.g., $5 off.
- You decide which one and the value.
- **Duration:** You can specify the discount to apply for a certain number of billing cycles (after which the price goes back to normal)[\[265\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=You%20can%20apply%20subscription%20discounts,for%20new%20and%20existing%20subscribers). For example, “20% off for first 6 months.”
- If you don’t specify a limit, the discount would apply indefinitely (essentially making a permanent lower price plan)[\[366\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20have%20specified%20a,applies%20indefinitely%20to%20the%20subscription). Most cases you will specify a limit to denote a promotion period.
- **When Discount Applies:**
- Discounts can apply to both annual and monthly subscriptions[\[367\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=A%20discount%20can%20be%20applied,the%20subscription%27s%20future%20billing%20intervals).
- They kick in on the **next charge** after you create the discount. For new subscriptions, that’s the first charge; for existing, it would apply from now on (if you alter an existing sub).
- Important: If a subscription is in a trial, and you add a discount during the trial, the trial ends immediately and the subscription with discount starts (so essentially trial is forfeited to start discounted billing)[\[368\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20offer%20trial%20days,with%20the%20discount%20applies%20immediately). Conversely, if you have a trial and plan to discount after, you should set it at create time so it knows to apply after trial ends.
- If you change the app subscription price while a discount is active, the discount will apply to the new price for the remaining discount cycles[\[369\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=A%20discount%20can%20be%20applied,the%20subscription%27s%20future%20billing%20intervals).
- **Implementing via API:** When using appSubscriptionCreate, you can include a discount object in the mutation (as part of plan or pricing details). The docs haven’t explicitly shown GraphQL fields in snippet, but likely something like:

  appSubscriptionCreate(\
  `  `name: "Pro Plan (20% off 3 months)",\
  `  `lineItems: [{ plan: { appRecurringPricingDetails: {\
  `      `interval: EVERY\_30\_DAYS,\
  `      `price: { amount: 29.99, currencyCode: USD },\
  `      `discount: { value: { percentage: 20 }, durationLimitInIntervals: 3 }\
  `  `}}}]\
  ) { ... }

  This is hypothetical syntax, but conceptually:
  - value could be a percentage or fixed. If fixed, likely you’d provide an amount and currency.
  - durationLimitInIntervals is how many intervals (months or years) the discount lasts.
- The Partner GraphQL API reference should have the exact fields.
- On the merchant confirmation page, it likely shows the original price and the discounted price + how long it lasts (e.g., “$29.99/month, 20% off for 3 months, then $37.49/month afterwards”).
- **Managed Pricing:** In the Partner Dashboard, when adding a plan, you can set a discount easily (like “introductory offer: X% off for Y months”). This then is handled by Shopify after they approve the plan. Managed pricing documentation suggests they handle it (the update mentions *different discount configured will defer new sub until cycle end for certain changes*).
- **Taxes/Fees on Discounted Price:** Shopify calculates its revenue share and any app fees based on the discounted amount, not the full price[\[370\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=existing%20subscribers). So if an app is 20% off, Shopify’s commission is on the reduced price (makes sense, as merchant pays less).
- **Combining with Trials:**
- If you offer a trial and a discount, note above: adding a discount to an already trialing sub ends the trial[\[368\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20offer%20trial%20days,with%20the%20discount%20applies%20immediately). So typically, you either do a trial or a discount or both in a structured way. Many apps do no trial but first month free (which is effectively a 100% discount on first cycle with no trial, achieving similar effect).
- If both trial and discount are set from the start: the docs say if trial days are present, the discount countdown starts after trial ends[\[366\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20have%20specified%20a,applies%20indefinitely%20to%20the%20subscription). So if you do 14-day trial + 3 months 20% off, the first charge after trial gets 20% off #1, then next two charges also discounted. Trial doesn’t count as a billing interval.
- **Proration and Discounts:** If a subscription with a discount is changed (like price changed or plan interval changed):
- If it requires proration (like upgrading plan price mid-cycle), the prorated amount uses the discounted price[\[371\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Anchor%20to%20When%20proration%20affects,discountsWhen%20proration%20affects%20discounts). So the merchant benefits from the discount even on the partial charge being computed.
- If no proration needed (like they just wait till renewal to change), then discount just continues as usual until it runs out.
- **Ending a Discount Early:** If you need to remove a discount (maybe the merchant should no longer get it, or they reapply and you consider them new?), you basically have to create a new subscription without discount (Shopify says to remove a discount, create a new subscription without it and have them approve[\[372\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Anchor%20to%20When%20discounts%20endWhen,discounts%20end)). So effectively cancel and resubscribe at full price.
- They mention merchants aren’t notified of discount end automatically, so it’s on you to communicate. Actually, from doc: *“If you don't specify number of intervals, discount is indefinite. If you do, it automatically stops after that many cycles.”*
- But if you manually want to end it early, yes you’d do a subscription update/cancel and new full charge. The merchant would have to approve that normal price (because initially they only agreed to discounted ones for X cycles).
- **Merchant Communication:**
- It’s good to remind the merchant when a discount is about to end (e.g., “After this month, your app will renew at full price of $X”). They may otherwise be surprised.
- Also, on the App Store listing, they will see the pricing info. It might automatically show something like “Free for 1 month” or “$Y/month, 20% off 3 months” in the listing highlights.
- **Use Cases:**
- Launch promotions: e.g., sign up now get first 3 months half off.
- Annual plans sometimes incorporate a discount by default (~some apps advertise “2 months free with annual” which is effectively ~16.7% off).
- Win-back offers: if a merchant uninstalls, and comes back, you might give them a discount to return (though implementing that automatically is tricky; you can manually send them an invite for a private plan with discount).
- **Comparison vs App Credits:** Discounts reduce what they’re charged upfront. An alternative is to charge full price but then issue an app credit (refund) after payment (via appCreditCreate). But that’s more complicated and not as seamless. Built-in discounts are better as the merchant sees the lower amount on the invoice directly.

**Summary:** Subscription discounts on Shopify allow you to **temporarily lower the subscription fee** for promotional purposes[\[365\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Offer%20subscription%20discounts). You set them up either when creating the subscription (preferred) or by updating an existing subscription: - Define percentage or fixed reduction and how many billing cycles it lasts[\[265\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=You%20can%20apply%20subscription%20discounts,for%20new%20and%20existing%20subscribers). - Shopify will automatically apply that on each invoice until it expires, then revert to normal pricing[\[366\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20have%20specified%20a,applies%20indefinitely%20to%20the%20subscription). - It’s a powerful tool to attract new users with introductory rates or to reward certain customers, all handled within the billing system.

Just remember to clearly communicate the discount terms, and Shopify’s system ensures the transition back to full price is handled (with no further action by the merchant except their initial approval which includes the fact the discount is limited)[\[368\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20offer%20trial%20days,with%20the%20discount%20applies%20immediately).
## <a name="support-one-time-app-purchases"></a>Support one-time app purchases
In addition to subscriptions, Shopify’s billing system allows **one-time charges** for apps. These are single charges that a merchant pays once (not recurring)[\[373\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=A%20single%20one,After%20accepting). One-time purchases are useful for: - Selling a lifetime license or download (e.g., one-time fee for an app). - Charging for individual services or credits (like a package of extra usage). - Pay-as-you-go approaches where each purchase is a discrete event.

Key points on one-time charges:

- **Single vs. Multiple One-time charges:**
- A single one-time charge is like “buy app for $X once” (then no recurring fee)[\[373\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=A%20single%20one,After%20accepting).
- Multiple one-time charges as pay-as-you-go: means you might charge repeatedly but not on a schedule – e.g., each time merchant hits a limit, they buy another charge. This effectively is a manual usage approach.
- The doc describes multiple app charges as *“pay-as-you-go model, meaning when use has reached a certain limit, another payment is made”[\[374\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=product%2C%20where%20you%20make%20a,After%20accepting)*. In practice, you implement that by prompting the merchant to approve a new one-time charge whenever needed.
- **Creating one-time charge:** Use the GraphQL mutation appPurchaseOneTimeCreate[\[375\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=Create_a_app_one_time_purchase_app_%29%20of%20creating%20a%20one,currencies%29%20%23%23%20Step%202):
- Provide name, price (amount & currency), and returnUrl.
- There’s no interval since it’s not recurring.
- E.g.:

  mutation {\
  `  `appPurchaseOneTimeCreate(\
  `    `name: "One-time SEO Audit",\
  `    `price: { amount: 49.99, currencyCode: USD },\
  `    `returnUrl: "https://yourapp.com/finishcharge"\
  `  `) {\
  `    `confirmationUrl\
  `    `appPurchaseOneTime { id }\
  `  `}\
  }
- Shopify returns a confirmationUrl[\[375\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=Create_a_app_one_time_purchase_app_%29%20of%20creating%20a%20one,currencies%29%20%23%23%20Step%202). You redirect the merchant to it. They see a prompt “App would like to charge a one-time fee of $49.99”.
- After approval, Shopify immediately charges their card (or adds to current invoice) and the appPurchaseOneTime status becomes ACTIVE (or PAID).
- You get an APP\_PURCHASES\_ONE\_TIME\_UPDATE webhook when it’s paid or if it’s refunded later[\[266\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=%5B%60currencyCode%60%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%23supported,Next%20steps).
- **Use in-app:** For example, if your app is free but you sell packs of credits, you might have a button “Buy 100 credits for $5”. Clicking it triggers appPurchaseOneTimeCreate for $5. They approve, you then credit their account 100 credits.
- Or if your app has a feature behind a one-time paywall (like an add-on module for a one-time fee), you do similar: when they opt to unlock, create a charge for it.
- **Monitoring:** You can query AppPurchaseOneTime objects via GraphQL (by id or via currentAppInstallation.oneTimePurchases) to see status[\[376\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=GraphQL%20Admin%20API%20resource%20Transaction,revenue%20and%20retrieve%20data%20on).
- But typically, once it’s approved, you consider it done (just ensure you deliver what they paid for).
- **Multiple one-times vs subscription plus one-time:** They are separate constructs. A store can have a recurring subscription and also do one-time charges. They don’t conflict.
- **Expiring one-time purchases:** Not built-in. If you want to sell something like a yearly license as a one-time charge (which ironically is recurring but you plan to manually charge them each year by new one-time charges), you have to manage reminding them to repurchase. This is where a recurring subscription is easier. Usually one-time is for truly one-off or usage-block purchases.
- **Refunding one-time charges:** You can refund via Partner Dashboard (see refund section) or via Partner API. If refund, it doesn’t automatically revoke whatever they got in your app – you need to handle if appropriate (webhook can alert you to refund and then you maybe remove credits or access if needed).
- Note: If a merchant disputes a one-time charge (chargeback), Shopify handles it but might come back to you eventually by deducting from payouts.
- **Best practices:**
- Provide a receipt or acknowledgment in-app after purchase.
- If using multiple one-time charges as pay-as-you-go, consider usage-based approach as an alternative. But usage approach charges at period end, whereas one-time charges charge immediately each time. So it depends if you need immediate payment vs can accumulate.
- Cap: There’s no concept of cap for one-time. They either pay or not each time.
- **Example used:** Many gamefied apps (like ones that do store analysis) might charge per report. They call appPurchaseOneTimeCreate for each report purchase.
- **Edge Cases:** A merchant can decline the one-time charge prompt. In that case, your mutation returns userErrors or no appPurchaseOneTime data, and you should handle it (perhaps show “Purchase canceled”).
- If they approve, ensure returnUrl leads them back properly (some devs use a deep link into the app).
- **Differences from Subscription:**
- Doesn’t recur. So if they want it again, you must initiate again.
- Doesn’t auto-cancel on uninstall (if they paid, they paid). If they uninstall right after, that’s on them (no auto refund).
- More flexible timing.

**Summary:** To support one-time purchases: - Use appPurchaseOneTimeCreate with the charge details[\[375\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=Create_a_app_one_time_purchase_app_%29%20of%20creating%20a%20one,currencies%29%20%23%23%20Step%202). - Redirect merchant to approve. - After approval, deliver the purchased item/feature. - Monitor via webhooks or API for updates (and handle refunds if any).

It’s straightforward and analogous to selling an item in an online store – except the “item” is app functionality. It’s fully handled through Shopify’s billing so it appears on the merchant’s bill or charged immediately if due, and it respects the usual payment and revenue share processes.
## <a name="award-app-credits"></a>Award app credits
App credits are a way to **give a merchant a credit (like a coupon or refund) that applies toward future app charges[\[377\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Faward,a%20merchant%20installs%20an%20app)**. The credit is essentially money you (the developer) forego from your revenue to benefit the merchant on their bill. Key points:

- **What is an app credit?** It’s a credit amount that will offset future charges of your app for that merchant[\[378\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=credits%20to%20merchants%20who%27ve%20installed,works%20The%20amount%20of%20app). For example, a $10 app credit means the merchant’s next $10 of app fees (subscription or usage or one-time) is covered by the credit instead of billed.
- It does not give them cash; it reduces what they pay Shopify (and thus reduces what Shopify pays you).
- Shopify withdraws that credit amount from your partner account (your pending payouts) since you’re basically funding the discount[\[379\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Merchants%20can%20use%20these%20app,Partner%20API%2C%20you%27ll%20need%20to).
- **When to use:**
- If you want to refund a charge or part of it as a courtesy, but the charge is already finalized on an invoice that can’t be refunded via normal means (like older than 12 months or above $1000 limit for automatic refund) – use credit.
- If you want to give a promo credit (e.g., “Thanks for installing via our partner, here’s $20 credit”), this is how.
- If a merchant had a bad experience or downtime, you might compensate them with a credit.
- In free trials for affiliate stores: The doc mentions allowing Partners (agencies) trial access – they might prefer giving credit to cover their usage.
- **How to issue credits:**
- You can use the **Partner API (GraphQL)** mutation appCreditCreate[\[380\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=implement%20triggers%20for%20the%20charge%2C,Award%20app). This is part of the *Partner API*, not the Admin API, I believe, so you’d need a token for the Partner API (which typically means using a Partner access token).
  - Input would be merchant’s shop ID or shopGid, the amount, the app, etc.
  - It will create a credit record.
- Or use the **Partner Dashboard manually**:
  - Go to the store’s page in your Partner Dashboard (via search bar find the store)[\[381\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=credits%20from%20the%20Partner%20Dashboard,was%20successfully%20awarded%2C%20a%20new).
  - On the store’s page, there’s an “App credits” card. Click Send[\[382\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Partner%20Dashboard%2C%20enter%20the%20name,Specify%20the%20currency).
  - You pick your app, currency, amount, and optionally a note for reference[\[383\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=the%20store%20page%2C%20next%20to,was%20successfully%20awarded%2C%20a%20new).
  - Click Send, and it issues the credit.
- Either way, the merchant will see that credit in their Shopify admin billing under app charges.
- **Permissions:** Only the **Account owner** or staff with “Manage credits and refunds” permission can send credits in Partner Dashboard[\[384\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=receiving%20the%20app%20credit%20can,managing%20staff%20member). This is to prevent random staff from giving away credits without authorization.
- **Impact on payouts:** The credit amount is taken from your pending payouts immediately or reduces future payouts[\[379\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Merchants%20can%20use%20these%20app,Partner%20API%2C%20you%27ll%20need%20to). You cannot give credit more than you have upcoming to pay (Shopify enforces that credit cannot exceed your pending payout total)[\[385\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Limitations%20The%20total%20amount%20of,Next%20steps).
- The doc says: *“Total amount of credits can't exceed total pending payouts in your account”[\[385\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Limitations%20The%20total%20amount%20of,Next%20steps)*. So you can’t go negative via credits. You must have enough earnings balance to cover it.
- Check your Partner Dashboard > Payments page to see pending payout balance if unsure[\[385\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Limitations%20The%20total%20amount%20of,Next%20steps).
- **Merchant usage of credit:** Once given, the credit automatically applies to future charges of *your app*. If your next app invoice is, say, $50 and you gave $20 credit, merchant pays $30 and credit is used up (partially, with $0 remaining).
- If credit exceeds the next charge, remaining credit carries to subsequent cycles until exhausted.
- Credits are specific to an app and store combination. It won’t apply to other apps or to Shopify subscription.
- **No merchant approval needed:** Giving a credit doesn’t require merchant to approve anything (why would they reject free credit?). It just shows up and reduces their bill.
- **Record keeping:** After sending, the Partner Dashboard logs an event on that store's timeline that credit was issued[\[386\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=and%20amount%20to%20credit,can%20issue%20app%20credits%20by), and merchant can see in billing. Good to add a note about reason, so later you recall why you gave it.
- **Alternatives:** One could also just “waive a fee” by manually not charging for a period (like extend trial or not create usage records). But credit is formal and documented, plus it can cover already charged amounts in form of a refund effectively.
- **Use with refunds:** If an app charge hasn’t been paid yet (pending on invoice), you cannot refund it (since it’s not paid). In that case, if you want to effectively cancel it, the doc suggests issue credit equal to the charge to remove it from the bill[\[387\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Limitations%20The%20following%20are%20limitations,Apps%20can%27t%20issue%20refunds).
- e.g., merchant will not pay for that charge because the credit offsets it, achieving same effect as a cancellation.

**Summary:** App credits let you as a developer **give money back to merchants** in the context of app billing[\[388\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=credits%20to%20merchants%20who%27ve%20installed,a%20merchant%20installs%20an%20app). It’s an important customer service and promotional tool: - Execute via Partner API or Partner Dashboard UI[\[389\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=implement%20triggers%20for%20the%20charge%2C,1.%20On%20the). - The credit reduces what the merchant owes for future app charges, and Shopify deducts that from your payout[\[379\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Merchants%20can%20use%20these%20app,Partner%20API%2C%20you%27ll%20need%20to). - Limit credits to what you can afford (cannot exceed your earnings balance)[\[385\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Limitations%20The%20total%20amount%20of,Next%20steps).

By responsibly using credits, you can maintain goodwill (fix billing mistakes, compensate issues) without going outside Shopify’s system (no need for manual refunds via PayPal or such – keep it within the platform). Merchants appreciate transparency: they’ll see “App Credit from *Your App Name*” on their bill which clearly shows you took care of them.
## <a name="refund-app-charges"></a>Refund app charges
If a merchant was charged for your app and you need to **return that money**, you can process a refund through the Partner Dashboard[\[390\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=earnings%23app,button%20to%20issue%20the%20refund). Some key details:

- **Where to refund:**
- Go to your Partner Dashboard, find the specific **app charge** in question. This could be via the store’s page (Apps -> search store -> see list of charges -> Details)[\[391\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Dashboard,Refund), or via the app’s “App history” list of events.
- On the charge overview page for that app charge, there’s an **“Issue refund”** button if it’s eligible[\[392\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=earnings%23app,to%20view%20your%20Shopify%20fee)[\[393\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=1,After%20the%20refund%20is).
- Eligible means the charge has been paid and within certain limits (see limitations below).
- **Full vs Partial Refund:** You can specify an amount to refund, either full or partial[\[393\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=1,After%20the%20refund%20is). For example, if they were charged $50, you can refund $50 or $20 etc., as you decide.
- If partial, Shopify allows multiple partial refunds on the same charge until it’s fully refunded amount-wise[\[394\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=invoices%5D%28https%3A%2F%2Fhelp.shopify.com%2Fpartners%2Fgetting,button%20to%20issue%20the%20refund).
- Each time you refund part, it records it and you can later do more until reaching the original total.
- Once fully refunded, the refund button disappears (no remaining balance)[\[395\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=invoices%5D%28https%3A%2F%2Fhelp.shopify.com%2Fpartners%2Fgetting,owners%20can%20issue%20refunds%20by).
- **Effect on payouts:** When you issue a refund, Shopify will deduct that amount from your next payout (or hold it against your balance). Essentially, you give up the revenue and it goes back to merchant.
- If it’s soon after charge, often the payout might not have occurred, so Shopify just won’t pay that portion out.
- If it already paid out, it will create a negative adjustment in your next payout to recoup it.
- **Merchant notification:** Shopify does *not* automatically email the merchant about an app refund[\[396\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app%20charge%20through%20the%20,Partner). So you should proactively notify them (“We have refunded $X for [reason]. It should reflect on your next Shopify invoice.”). Otherwise, the merchant would only see it by checking their bills.
- **Permissions:** Store owners can refund by default; staff need the “Manage refunds” permission in Partner account to do so[\[397\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=isn%27t%20available.%20,access%29.).
- **Limitations:**
- You can only refund charges the merchant has actually paid. If a charge is pending/unpaid, you can’t “refund” it – instead you’d use app credits or cancel it (like if they haven’t been billed yet, you might apply a credit)[\[398\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Limitations%20The%20following%20are%20limitations,process%20a%20refund%20that%20meets).
- Shopify’s interface restricts refunds for:
  - Very large charges (over $1000 USD) – those you must contact Shopify support to process[\[399\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app,To%20process%20a%20refund%20that). Possibly to prevent fraud or require manual handling.
  - Charges older than 12 months – you cannot self-refund after a year[\[400\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=this%20criterion%2C%20contact%20,Shopify). Need Shopify support for those exceptional cases.
  - Charges paid via ACH (bank transfer) and older than 90 days – those also require contacting support[\[401\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=refunds%20for%20invoices%20that%20are,), maybe due to banking rules.
- So there are some edges where you need Shopify’s assistance.
- **Charge statuses after refund:** If you fully refund a recurring charge and the app is still installed, that particular cycle is refunded but the subscription isn’t automatically canceled by refunding. The merchant essentially got that period for free. If you intended to cancel going forward, you should also cancel the subscription. Refund doesn’t do cancellation (unless the app was uninstalled, then maybe the refund just covers unused time).
- For one-time charges, a refund is final (that charge is done).
- **Timeline/log:** After refund, the charge details page will show the refund record (like “$X refunded on date”). And the store’s timeline in Partner Dashboard logs an event.
- **Recovery of revenue share:** If Shopify took a revenue share cut on that charge, they will also reimburse their cut. The merchant gets full refund, you give up your portion, Shopify gives up their portion. Essentially, everyone is back to pre-charge state revenue-wise.
- **Examples:**
- Merchant was accidentally double-charged due to a bug – you can refund the duplicate.
- Merchant is dissatisfied and you agree to refund last month’s fee as goodwill.
- These keep trust and avoid chargebacks.
- **After refund actions:** If you refunded because the merchant is uninstalling or not using features they paid for, you might also want to:
- Remove any data or downgrade their status accordingly.
- If they still use the app, just note they had a free period due to refund.

**Summary:** To refund an app charge: - Use the Partner Dashboard (Store’s app charge details) to **Issue refund**, specifying amount[\[402\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Dashboard,After%20the%20refund%20is). - Partial refunds are allowed until fully refunded[\[395\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=invoices%5D%28https%3A%2F%2Fhelp.shopify.com%2Fpartners%2Fgetting,owners%20can%20issue%20refunds%20by). - Mind the **limitations** (>$1000, >12 months, etc.) which need Shopify support involvement[\[403\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app,). - Notify the merchant as they won’t know automatically[\[396\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app%20charge%20through%20the%20,Partner).

Refunds protect your app’s reputation by resolving billing issues amicably. Shopify’s built-in mechanism ensures records are kept and both you and Shopify adjust payouts accordingly, which is better than trying to send money off-platform. Always abide by Shopify’s policy (no refunds beyond 12 months on your own) and involve Shopify support if needed in those rare cases.
## <a name="view-charges-and-earnings"></a>View charges and earnings
The Partner Dashboard provides tools to **track all the app charges, transactions, and your earnings** from your apps[\[404\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fview,Page%20Data%20App%20charge%20overview). This is important for transparency and accounting.

- **Where to find data:**
- **Partner Dashboard -> Apps -> [Your App] -> App history / Latest app history**: Shows recent charge events (like new subscription started, charges paid, refunds, credits)[\[405\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=graphql,Partner)[\[406\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=that%20you%20want%20to%20check%2C,).
- **Store page (in Partners)**: if you search a specific store in your Partners, you see **Store > App charges**: a list of charges that store has for your apps (including status, amount)[\[407\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=App%20charge%20overview)[\[408\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Dashboard%5D%28https%3A%2F%2Fwww.shopify.com%2Fpartners%29%2C%20click%20,From).
- **Payouts page**: In Partners under Payouts, you can click a specific payout and see which app charges (by app and store) composed that payout[\[409\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=In%20the%20search%20results%2C%20select,In%20the). Each line might link to details.
- **App charge overview page**: There's a consolidated view listing all charges across stores, accessible in the App’s section (the snippet calls it App charge overview page)[\[410\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=App%20charge%20overview%20page%20,next%20to%20a%20transaction%20displays).
  - It lists merchant info, store link, app, charge status, and transactions (payments) associated with each charge[\[411\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=earnings,page%20listing%20details%20for%20a).
  - Next to each transaction you can expand to see Shopify’s fee, your share, etc.[\[412\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=are%20associated%20with%20the%20charge,to%20issue%20a%20refund%20The).
  - It also has links to specific payouts that included that charge[\[413\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=the%20following%20details%3A%20,details).
  - If it's a subscription, it may show details like plan name, how often, etc.[\[414\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=overview%20page%20includes%20,Activated).
  - **Note**: They mention if there’s any discrepancy between overview and Payout page, trust the Payout page as authoritative[\[415\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=App%20charge%20overview%20page%20,of%20merchant%20payment%20transactions%20that), but usually they should align.
- **Subscription charge details**: On an overview, for subscription charges, you see description (e.g., "$15 every 30 days for Pro Plan"), creation date, and status (Pending, Active, Declined, Canceled, Frozen, Expired)[\[416\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=overview%20page%20includes%20,Activated)[\[417\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Declined%20The%20merchant%20declined%20the,Canceled).
  - They define those statuses:
  - **Pending**: merchant hasn’t approved or declined yet[\[418\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=which%20the%20charge%20was%20created,Activated).
  - **Activated**: charge is active (for recurring, means approved and currently billing)[\[419\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Pending%20The%20merchant%20hasn%27t%20yet,Activated).
  - **Declined**: merchant said no.
  - **Canceled**: merchant or developer canceled the subscription[\[420\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Declined%20The%20merchant%20declined%20the,Canceled).
  - **Frozen**: subscription on hold because merchant’s store payment failed (Shopify froze it)[\[421\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=a%20merchant%27s%20app%20access%20after,Shopify%20freezes%20the%20charge). It will reactive if store payment resumes.
  - **Expired**: merchant didn’t accept the charge in time (48 hours window passed)[\[337\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Frozen%20The%20subscription%20is%20on,after%20the%20subscription%20payments%20resume).
- **GraphQL / REST**: You can also fetch billing data via the Partner API or sometimes via Admin API. The snippet references ability via GraphQL Admin API to query transactions: e.g., currentAppInstallation query can list purchases and subscriptions[\[422\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Transaction%20data%20through%20the%20GraphQL,Example)[\[423\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=,The%20following%20is%20an%20example). So developers could programmatically fetch revenue data if needed.
- **Your earnings vs Shopify fees:** The overview page, when you expand a transaction, shows an itemized list:
- Shopify’s revenue share cut,
- processing fee (2.9%+30c or relevant, which Shopify covers in initial terms but might show for completeness),
- and your net profit[\[424\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=are%20associated%20with%20the%20charge,details).
- This breakdown is great to reconcile why you got the payout amount you did.
- **Tracking trends:** The App analytics might show how your revenue changes over time, but for specifics, use Payout reports or export data.
- **Financial permissions:** Viewing financials in the Partner Dashboard might require the team member to have “View financials” permission if not owner[\[425\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=with,Select%20the%20app). Ensure staff who need to see revenue have that.
- **Using data:**
- You can verify if merchants were charged correctly, see who might be on trial (trials might show as pending $0 or just subscription created at $0 if trial).
- If a merchant disputes a charge, you find it here (maybe a chargeback would eventually reflect as an adjustment).
- For each payout, you can cross-check how it was computed, which is useful for accounting.
- **GraphQL reference given:**
- Single app purchase: AppPurchaseOneTime query by ID[\[426\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=code%20must%20be%20one%20of,page).
- Multiple purchases: use currentAppInstallation with first/last to page through them[\[427\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=,The%20following%20is%20an%20example).
- Single subscription: query AppSubscription by ID[\[428\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=,graphql%2Flatest%2Fobjects%2FAppSubscription).
- Multiple subs: currentAppInstallation.appSubscriptions perhaps.
- Usage records: AppSubscription object might list its usage records, or via installation query[\[376\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=GraphQL%20Admin%20API%20resource%20Transaction,revenue%20and%20retrieve%20data%20on).
- These can help if you want to build custom dashboards or logic (like in-app showing merchant their charges or date of next billing).
- **Revenue summary:** If you want to see total app revenue, the Partner Dashboard homepage might show lifetime or last 30 days earnings. But for details, dive into the app’s payout records or app history.

**Summary:** The Partner Dashboard provides comprehensive views to **monitor all app charges and your earnings[\[404\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fview,Page%20Data%20App%20charge%20overview)**. Use: - **App listings (overview & history)** to inspect charges and statuses. - **Store-specific pages** to handle per-merchant finances (issue refunds, credits). - **Payout pages** to reconcile sums and track Shopify’s cut vs your net[\[424\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=are%20associated%20with%20the%20charge,details).

By regularly reviewing these, you can keep an eye on your revenue, quickly spot if any merchant wasn’t charged (e.g., a charge still pending approval), handle refunds or adjustments, and maintain a clear financial picture for your app business.

This ends the thorough documentation of the Shopify Launch section articles, covering everything from app requirements and quality programs to billing, deployment, distribution, and marketing. Following these guidelines and utilizing the provided tools will set you up for a successful app launch on Shopify’s platform. [\[1\]](https://shopify.dev/docs/apps/launch#:~:text=Launching%20to%20the%20Shopify%20App,Store)[\[103\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20following%20requirements%20are%20used,you%20submit%20your%20own%20apps)

-----
<a name="citations"></a>[\[1\]](https://shopify.dev/docs/apps/launch#:~:text=Launching%20to%20the%20Shopify%20App,Store) [\[2\]](https://shopify.dev/docs/apps/launch#:~:text=Shopify%20status%20and%20badge%20gives,audience%20for%20your%20next%20app) [\[3\]](https://shopify.dev/docs/apps/launch#:~:text=You%E2%80%99ll%20likely%20deploy%20to%20your,audience%20for%20your%20next%20app) [\[4\]](https://shopify.dev/docs/apps/launch#:~:text=must%20be%20responsible%20stewards%20of,audience%20for%20your%20next%20app) shopify.dev

<https://shopify.dev/docs/apps/launch>

[\[5\]](https://shopify.dev/docs/apps/launch/deployment#:~:text=Anchor%20to%20How%20it%20worksHow,it%20works) [\[6\]](https://shopify.dev/docs/apps/launch/deployment#:~:text=Before%20deploying%20your%20app%3A) [\[7\]](https://shopify.dev/docs/apps/launch/deployment#:~:text=,functionality%20in%20a%20development%20environment) About deployment

<https://shopify.dev/docs/apps/launch/deployment>

[\[8\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Checklist%20of%20requirements%20for%20apps,in%20the%20Shopify%20App%20Store) [\[9\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Caution) [\[10\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=7,to%20mandatory%20webhooks) [\[11\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=7,to%20mandatory%20webhooks) [\[12\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Some%20types%20of%20apps%20aren%27t,visibility%20set%20to%20limited%20visibility) [\[13\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,as%20part%20of%20the%20app) [\[14\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=computer%20,service%20in%20our%20Partner%20Directory) [\[15\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,information%20in%20popups%20and%20notifications) [\[16\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,with%20such%20activity%2C%20are%20prohibited) [\[17\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,in%20our%20Partner%20Program%20Agreement) [\[18\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=with%20such%20activity%2C%20are%20prohibited,in%20our%20Partner%20Program%20Agreement) [\[19\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Agreement%20www,Apps%20that%20provide%20capital) [\[20\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=their%20stores%20into%20marketplaces%20can%27t,your%20app%20has%20been%20granted) [\[21\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=receivables,provide%20merchant%20data%20to%20one) [\[22\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=visit%20the%20,third%20party%20that%20receives%20merchant) [\[23\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=to%20be%20listed%20on%20the,through%20the%20Shopify%20App%20Store) [\[24\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=11,permitted%20as%20an%20optional%20feature) [\[25\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=12,Gateway%20apps%20must%20be%20authorized) [\[26\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=processing%20payments%20aren%27t%20permitted%20on,the%20requirements%20for%20more%20information) [\[27\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=through%20an%20application%20process%20,Your%20app%20should) [\[28\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=to%20download%20themes,a%20Chrome%20extension%2C%20aren%27t%20acceptable) [\[29\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=aren%27t%20acceptable,or%20checkouts%20%E2%80%94%20Apps%20can%27t) [\[30\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=19,store%20pickup%2C%20local) [\[31\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=buyer%2C%20and%20upon%20obtaining%20explicit,local%20delivery%2C%20and%20pickup%20points) [\[32\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%202,Installation%20and%20setup) [\[33\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A) [\[34\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,or%20for%20approved%20use%20cases) [\[35\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20C,Setup%20and%20merchant%20workflows) [\[36\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=shop%20or%20install%20other%20apps,Shopify%20App%20Store%20listing%20first) [\[37\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=during%20the%20installation%20or%20configuration,flow) [\[38\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,payment%20for%20a%20single%20order) [\[39\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,actions%2C%20or%20%2089%20admin) [\[40\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,within%20the%20app%27s%20user%20interface) [\[41\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=acceptable,related%20apps%2C%20or%20request%20reviews) [\[42\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=method,provide%20novel%20functionality%20or%20content) [\[43\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,provide%20novel%20functionality%20or%20content) [\[44\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,received%20an%20exemption%20from%20Shopify) [\[45\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,received%20an%20exemption%20from%20Shopify) [\[46\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20Billing%20API%20requirementsBilling,API%20requirements) [\[47\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3.%20Enterprise,section%20of%20the%20app%27s%20listing) [\[48\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=additional%20charges%20section%20of%20the,section%20of%20the%20app%27s%20listing) [\[49\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,reviewers%20from%20testing%20the%20app) [\[50\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=an%20action%20has%20failed) [\[51\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,for%20a%20full%20App%20review) [\[52\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Performance%20score) [\[53\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,prior%20to%20the%20review%20process) [\[54\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,according%20to%20the%20API%27s%20requirements) [\[55\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Tip) [\[56\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=For%20apps%20that%20affect%20storefronts,score%20from%20the%20following%20pages) [\[57\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20difference%20in%20the%20score,real%20merchant%20stores%20over%20time) [\[58\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%205,App%20listing) [\[59\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20app%20listing%20submission%20form,lets%20you%20do%20the%20following) [\[60\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=understand%20how%20it%20can%20help,the%20benefits%20of%20your%20app) [\[61\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Note) [\[62\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3.%20Enterprise,section%20of%20the%20app%27s%20listing) [\[63\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=match%20at%20L595%20) [\[64\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,use%20session%20tokens%20and%20OAuth) [\[65\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=apps%20must%20use%20session%20tokens,and%20OAuth) [\[66\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,against%20common%20web%20security%20vulnerabilities) [\[67\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=vulnerabilities%20) [\[68\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Caution) [\[69\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,expose%20network%20services%20unnecessarily) [\[70\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,must%20rotate%20the%20secret%20immediately) [\[71\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=9,a%20shop%27s%20offline%20access%20token) [\[72\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=11,orders%20outside%20of%20Shopify%27s%20checkout) [\[73\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=13,payment%20needs%20to%20be%20captured) [\[74\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=14,must%20%20189%20of%20requests) [\[75\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Data%20and%20user%20privacy) [\[76\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,it%20complies%20with%20privacy%20laws) [\[77\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,the%20data%20rights%20of%20individuals) [\[78\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,for%20marketing%20promotions%20where%20applicable) [\[79\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,that%20are%20issued%20by%20merchants) [\[80\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,sent%20back%20to%20the%20merchant) [\[81\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=customer%20data%20must%20be%20sent,back%20to%20the%20merchant) [\[82\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,to%20all%20%209%2C%20including) [\[83\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A) [\[84\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=,68) [\[85\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Online%20store) [\[86\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=added%20to) [\[87\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=promote%20related%20apps%2C%20or%20request,reviews) [\[88\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=6,blocks%20in%20the%20theme%20editor) [\[89\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=1,embedded%20version%20of%20the%20app) [\[90\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,directly%20within%20the%20Shopify%20admin) [\[91\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,that%20meets%20the%20following%20requirements) [\[92\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=4,title) [\[93\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=%60clip) [\[94\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,script%20element%20of%20the%20body) [\[95\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=the%20body) [\[96\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=8,in%20incognito%20mode%20in%20Chrome) [\[97\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20B,Embedding%20into%20POS) [\[98\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Image%3A%20An%20example%20of%20an,the%20POS%20Apps%20Admin%20Dashboard) [\[99\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=Anchor%20to%20A,Product%20sourcing) [\[100\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=2,need%20to%20use%20app%20proxies) [\[101\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=5,your%20app%27s%20visual%20storefront%20components) [\[102\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=3,Theme%20Editor%20and%20Online%20Store) [\[103\]](https://shopify.dev/docs/apps/launch/app-requirements-checklist#:~:text=The%20following%20requirements%20are%20used,you%20submit%20your%20own%20apps) Checklist of requirements for apps in the Shopify App Store

<https://shopify.dev/docs/apps/launch/app-requirements-checklist>

[\[104\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=experience%2C%20and%20the%20success%20of,Some%20achievements%20are%20automatically) [\[105\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Built%20for%20Shopify%20status%20Built,at%20the%20top%20of%20the) [\[106\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=More%20and%20more%20merchants%20join,you%20can%20qualify%20for%20smaller) [\[107\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Built%20for%20Shopify%20status%20Built,Built%20for%20Shopify) [\[108\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=your%20app%20receives%20the%20following,badge%20will%20be%20visible%20on) [\[109\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Image%3A%20An%20image%20of%20the,that%20are%20Built%20for%20Shopify) [\[110\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=%5Bspecific%20merchant%20plans%5D%28%2Fdocs%2Fapps%2Flaunch%2Fmarketing%2Fadvertising%2Fcreate,An%20image%20of%20an%20app) [\[111\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=based%20targeting%20for%20Shopify%20App,This%20collection%20is) [\[112\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=apps%20appear%20higher%20in%20Shopify,You%27ll%20be%20eligible%20to%20be) [\[113\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=Eligible%20for%20discovery%20through%20the,Eligible) [\[114\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=This%20collection%20is%20personalized%20for,Apply%20for%20Built) [\[115\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=merchants%20search%20for%20apps%20on,all%20the%20same%20requirements%2C%20but) [\[116\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criteria,page) [\[117\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=status%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbuilt,%2A%2ABuilt%20for) [\[118\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=functionality%2C%20it%20might%20qualify%20for,business%3A%20Use%20directly%20in%20the) [\[119\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=%5Bachievements%5D%28%23other,Some%20achievements%20are%20automatically) [\[120\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=others%20require%20you%20to%20apply,app%20in%20your%20Partner%20Dashboard) [\[121\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=receive%20additional%20promotion%20in%20the,shopify%23app) [\[122\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=more%20visible%2C%20and%20more%20likely,Apply%20for%20Built%20for) [\[123\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=app%27s%20overview%20page%2C%20click%20,Maintaining%20Built%20for%20Shopify) [\[124\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criterion%20three%20times%20in%20a,might%20lose%20Built%20for%20Shopify) [\[125\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=status%20Apps%20are%20reviewed%20annually,You%20can%20lose%20Built%20for) [\[126\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=status%20Apps%20are%20reviewed%20annually,status%29.%20%23%23%20Other) [\[172\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=criteria%20are%20met%2C%20you%20can,is%20suspended%20and%20you%20won%27t) [\[173\]](https://shopify.dev/docs/apps/launch/built-for-shopify#:~:text=apps%20permission%20can%20submit%20applications,Maintaining%20Built%20for%20Shopify) shopify.dev

<https://shopify.dev/docs/apps/launch/built-for-shopify>

[\[127\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=To%20qualify%20for%20Built%20for,to%20specific%20categories%20of%20apps) [\[128\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,requirements) [\[129\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,Partner%20standing) [\[130\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,number%20of%20installs) [\[131\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20have) [\[132\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20have) [\[133\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=2) [\[134\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20minimize) [\[135\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,CLS) [\[136\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,INP) [\[137\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,on%20store%20speed) [\[138\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,on%20checkout%20speed) [\[139\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=3) [\[140\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=By%20default%2C%20apps%20should%20be,to%20complete%20a%20primary%20workflow) [\[141\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20enable) [\[142\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,up%20based%20on%20Shopify%20credentials) [\[143\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,workflows%20within%20Shopify) [\[144\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20include) [\[145\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=%23%203.1.5%20Keep%20third,settings%20within%20Shopify) [\[146\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=third,the%20Shopify%20embedded%20app%20interface) [\[147\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,uninstallation%20process) [\[148\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,create%2C%20modify%2C%20or%20delete%20files) [\[149\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=You%20can%20still%20use%20the,API%20to%20read%20theme%20files) [\[150\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=The%20design%20of%20your%20app,friendly) [\[151\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,practices) [\[152\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Show%20failure%20examples) [\[153\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Image%3A%20An%20annotated%20app%20home,content%20is%20in%20a%20card) [\[154\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=container%20looks%20similar%20to%20the,for%20the%20majority%20of%20content) [\[155\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=shift%20around,for%20the%20majority%20of%20content) [\[156\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Any%20app%20that%20enables%20merchants,promote%20their%20stores%20and%20products) [\[157\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20ads%20apps) [\[158\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use) [\[159\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20affiliate%20program%20apps) [\[160\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use) [\[161\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20respond) [\[162\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,reliably) [\[163\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=) [\[164\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20dont) [\[165\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use) [\[166\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20email%20marketing%20apps) [\[167\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=,for%20email%20marketing%20apps) [\[168\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20use) [\[169\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Anchor%20to%20help) [\[171\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=Changelog) [\[324\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=2) [\[325\]](https://shopify.dev/docs/apps/launch/built-for-shopify/requirements#:~:text=You%20need%20to%20optimize%20how,minimize%20impact%20on%20checkout%20speed) Built for Shopify requirements

<https://shopify.dev/docs/apps/launch/built-for-shopify/requirements>

[\[170\]](https://shopify.dev/docs/apps/launch/deployment/app-versions#:~:text=%7C%20,) shopify.dev

<https://shopify.dev/docs/apps/launch/deployment/app-versions>

[\[174\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbuilt,long%20it%20takes%20In%20general) [\[175\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=to%20all%20,Review%20notifications%20You%E2%80%99ll) [\[176\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=to%20the%20annual%20review%20queue,long%20it%20takes%20In%20general) [\[177\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=get%20an%20email%20notification%20when,Getting%20your) [\[178\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=it%20takes%20between%20a%20few,no%20further%20action%20is%20needed) [\[179\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=results%20After%20the%20Built%20for,Failed%20reviews%20If) [\[180\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=reviewers%20find%20issues%20with%20any,raised%20in%20the%20review%20and) [\[181\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=reviewers%20find%20issues%20with%20any,by%20the%20end%20of%2060) [\[182\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=the%20reviewer,re) [\[183\]](https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews#:~:text=resubmit,status%29%20at%20any%20time) shopify.dev

<https://shopify.dev/docs/apps/launch/built-for-shopify/annual-reviews>

[\[184\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbuilt,These%20key) [\[185\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=time%20will%20have%20their%20Built,all%20current%20App%20Store%20requirements) [\[186\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=criteria%20are%20monitored%20on%20an,these%20criteria%2C%20view%20the%20criteria) [\[187\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,Meets%20App%20Store%20requirements) [\[188\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=store,) [\[189\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=key%20criteria%2C%20then%20it%20will,to%20meet%20other%20criteria%20that) [\[190\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=trigger%20an%20audit%20of%20your,Meets%20App%20Store%20requirements) [\[191\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,Minimum%20app%20rating) [\[192\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=track%20ongoing%20quality%20signals%2C%20then,Achievement) [\[193\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=criteria%20on%20an%20ongoing%20basis,of%20these%20criteria%20also%20might) [\[194\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=time%20will%20have%20their%20Built,be%20audited%20to%20ensure%20compliance) [\[195\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=app%20meets%20all%20of%20the,all%20current%20App%20Store%20requirements) [\[196\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,) [\[197\]](https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status#:~:text=,are%20also%20monitored%20on%20an) shopify.dev

<https://shopify.dev/docs/apps/launch/built-for-shopify/regain-lost-status>

[\[198\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=With%20privacy%20laws%20in%20jurisdictions,personal%20data%20of%20an%20individual) [\[199\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=We%20want%20to%20ensure%20that,a%20privacy%20policy%20if%20required) [\[200\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=To%20help%20comply%20with%20privacy,full%20and%20limited%20visibility%20apps) [\[201\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=policy%3A) [\[202\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=you%20ask%20them%20for%20contact,you%20use%20this%20information%20for) [\[203\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=particular%20stores%3F%20,also%20include%20a%20physical%20address) [\[204\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=any%20purposes%20other%20than%20providing,processing%20information%20outside%20of%20Europe) [\[205\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,also%20include%20a%20physical%20address) [\[206\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Note) [\[207\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,use%20of%20agreed%20transfer%20frameworks) [\[208\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=these%20requests.%20,have%20a%20Data%20Protection%20Officer) [\[209\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=adequate%20protections%20that%20are%20essentially,want%20to%20use%20an%20outside) [\[210\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Privacy%20laws%20are%20complex%2C%20and,laws%20specifically%20apply%20to%20you) [\[211\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Note%3A%20It%20is%20important%20to,lawyer%20about%20your%20specific%20needs) [\[217\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=,to%20target%20ads%20or%20marketing) [\[218\]](https://shopify.dev/docs/apps/launch/privacy-requirements#:~:text=Caution) Privacy requirements

<https://shopify.dev/docs/apps/launch/privacy-requirements>

[\[212\]](https://www.shopify.com/partners/blog/data-protection#:~:text=New%20Requirements%20for%20Shopify%20Apps,represented%20in%20the%20API%20resources) New Requirements for Shopify Apps that Use Customer Personal Data

<https://www.shopify.com/partners/blog/data-protection>

[\[213\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=described%20in%20the%20following%20table%3A,address%2C%20phone%2C%20and%20email%20fields) [\[214\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,requirements) [\[215\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,requirements) [\[216\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=protected,review) [\[219\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=email%20fields%2C%20then%20you%20must,and%20why%20helps%20merchants%20manage) [\[220\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=,review%29.%20If%20your%20app) [\[221\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access,Data) [\[222\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access%20to%20protected%20customer%20fields%2C,review%29.%20If%20your%20app) [\[223\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=protection%20details,store%2C%20you%20can%20access%20customer) [\[224\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=%5BVaries%20by%20plan%5D%28https%3A%2F%2Fhelp.shopify.com%2Fen%2Fmanual%2Fapps%2Fapp,installed%20only%20on%20development%20stores) [\[225\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=Requirements%20To%20help%20apps%20safely,minimum%20personal%20data%20required%20to) [\[226\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access%20or%20inappropriate%20processing,personal%20data%20from%20production%20from) [\[227\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=effort%20spent%20complying%20with%20these,applicable%2C%20respect%20and%20apply%20customer) [\[228\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=merchants%20about%20what%20personal%20data,applicable%2C%20respect%20and%20apply%20customer) [\[229\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=how%20their%20data%20is%20used,those%20decisions%20might%20have%20legal) [\[230\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=participate%20in%20their%20data%20processing,of%20personal%20data%20and%20this) [\[231\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=requirement%20helps%20ensure%20you%20are,or%20privacy%20policies%20represent%20an) [\[232\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=it%27s%20important%20to%20give%20customers,Retaining) [\[233\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=and%20safe%20data%20privacy%20practices,they%20have%20access%20to%20the) [\[234\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=be%20kept%20longer%20than%20necessary,Encrypt%20your%20data) [\[235\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=bad%20actors%20from%20gaining%20access,production%20data%20in%20order%20to) [\[236\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=data%20set%20to%20the%20general,Have) [\[237\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=the%20same%20level%20of%20concern,Limiting%20staff) [\[238\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=Strict%20separation%20of%20environments%20prevents,Require%20strong%20passwords) [\[239\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=access%20to%20protected%20customer%20data,logs%20and%20reviewing%20them%20frequently) [\[240\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=for%20staff%20accounts.,trail%20of%20activity%20related%20to) [\[241\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=log%20to%20protected%20customer%20data.,help%20you%20meet%20the%20protected) [\[242\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=scales%2C%20roles%20and%20responsibilities%2C%20escalation,High) [\[243\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=If%20we%20select%20your%20app,Long%20retention%20of%20personal%20data) [\[244\]](https://shopify.dev/docs/apps/launch/protected-customer-data#:~:text=app,installed%20only%20on%20development%20stores) shopify.dev

<https://shopify.dev/docs/apps/launch/protected-customer-data>

[\[245\]](https://shopify.dev/docs/apps/launch/billing#:~:text=The%20app%20billing%20API%20resources,you%20have%20questions%20or%20concerns) [\[246\]](https://shopify.dev/docs/apps/launch/billing#:~:text=Shopify%27s%20app%20billing%20resources%20provide,the%20following%20benefits) [\[247\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,to%20the%20merchant%27s%20Shopify%20invoice) [\[248\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,the%20revenue%20that%20Shopify%20collects) [\[249\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,the%20revenue%20that%20Shopify%20collects) [\[250\]](https://shopify.dev/docs/apps/launch/billing#:~:text=,related%20processes) [\[251\]](https://shopify.dev/docs/apps/launch/billing#:~:text=installation%2C%20a%20service%20plan%20upgrade%2C,If%20the%20charge) [\[252\]](https://shopify.dev/docs/apps/launch/billing#:~:text=appPurchaseOneTimeCreate%20%20or%20the%20,to%20the%20Shopify%20admin%2C%20and) [\[253\]](https://shopify.dev/docs/apps/launch/billing#:~:text=3,the%20app%20charge%20being%20declined) [\[254\]](https://shopify.dev/docs/apps/launch/billing#:~:text=page%20that%20Shopify%20hosts%20for,the%20app%20charge%20being%20declined) [\[255\]](https://shopify.dev/docs/apps/launch/billing#:~:text=The%20following%20diagram%20describes%20the,merchants%2C%20your%20app%2C%20and%20Shopify) [\[256\]](https://shopify.dev/docs/apps/launch/billing#:~:text=1,then%20they%27re%20redirected%20to%20a) [\[268\]](https://shopify.dev/docs/apps/launch/billing#:~:text=Caution) About billing for your app

<https://shopify.dev/docs/apps/launch/billing>

[\[257\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=an%20app%20or%20certain%20features,you%20can%20implement%20with%20the) [\[258\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=Apps%20that%20charge%20a%20fee,on%20the%20number%20of%20contacts) [\[260\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=overpaying%20for%20the%20service%20that,00%20plan) [\[261\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=,Avoid%20crediting%20on%20top%20of) [\[262\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%3D%20%2410.00%20%60%60%60%20,For%20example) [\[263\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=,You%20can%20create%20the%20following) [\[313\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fsubscription,it%20works%20An%20app%20can) [\[314\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=GraphQL%20Admin%20API%27s%20billing%20objects,Charges%20and) [\[315\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=subscription%2C%20and%20any%20recurring%20charges,AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin) [\[316\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=GraphQL%20Admin%20API%27s%20billing%20objects,merchant%20who%20already%20has%20an) [\[317\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=billing%20cycle,Avoid%20crediting%20on%20top%20of) [\[318\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=charges%20are%20prorated%20when%20a,The) [\[319\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=Cancel_an_app_subscription_on_a_shop_and_issue_prorated_credits%29.%20,Cancelling%20subscriptions%20When%20a%20merchant) [\[320\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%5B%60AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin,of%20the%20rest%20of%20the) [\[321\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%5B%60AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin,Type%20Description%20Example%20use%20case) [\[322\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=%5B%60AppSubscriptionReplacementBehavior%60%5D%28%2Fdocs%2Fapi%2Fadmin,billing%20account%20freezes%2C%20associated%20app) [\[323\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=billing%20period,You%20can%20create%20the%20following) [\[328\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing#:~:text=of%20the%20annual%20billing%20cycle,graphql%2Flatest%2Fmutations%2FappSubscriptionCancel%23examples) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/subscription-billing>

[\[259\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20trials%20delay%20the%20start,a%20number%20of%20specified%20days) [\[304\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=You%20can%20use%20the%20GraphQL,Admin%20API%27s%20%2057%20mutation) [\[305\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Note) [\[306\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=To%20help%20increase%20your%20app,stores%20on%20behalf%20of%20merchants) [\[307\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Note) [\[308\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Anchor%20to%20Set%20up%20free,testingSet%20up%20free%20testing) [\[309\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=We%20recommend%20subscribing%20to%20the,their%20access%20to%20the%20app) [\[310\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20testing%20doesn%27t%20create%20an,return%20the%20following%20key%2Fvalue%20pair) [\[311\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Anchor%20to%20LimitationsLimitations) [\[312\]](https://shopify.dev/docs/apps/launch/billing/offer-free-trials#:~:text=Free%20trials%20enable%20merchants%20to,apps%20that%20they%27ve%20used%20before) Offer free trials

<https://shopify.dev/docs/apps/launch/billing/offer-free-trials>

[\[264\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Creating%20an%20app%20subscription%20with,price%20discount) [\[265\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=You%20can%20apply%20subscription%20discounts,for%20new%20and%20existing%20subscribers) [\[365\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Offer%20subscription%20discounts) [\[366\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20have%20specified%20a,applies%20indefinitely%20to%20the%20subscription) [\[367\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=A%20discount%20can%20be%20applied,the%20subscription%27s%20future%20billing%20intervals) [\[368\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=If%20you%20offer%20trial%20days,with%20the%20discount%20applies%20immediately) [\[369\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=A%20discount%20can%20be%20applied,the%20subscription%27s%20future%20billing%20intervals) [\[370\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=existing%20subscribers) [\[371\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Anchor%20to%20When%20proration%20affects,discountsWhen%20proration%20affects%20discounts) [\[372\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts#:~:text=Anchor%20to%20When%20discounts%20endWhen,discounts%20end) Offer subscription discounts

<https://shopify.dev/docs/apps/launch/billing/subscription-billing/offer-subscription-discounts>

[\[266\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=%5B%60currencyCode%60%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%23supported,Next%20steps) [\[373\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=A%20single%20one,After%20accepting) [\[374\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=product%2C%20where%20you%20make%20a,After%20accepting) [\[375\]](https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases#:~:text=Create_a_app_one_time_purchase_app_%29%20of%20creating%20a%20one,currencies%29%20%23%23%20Step%202) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/support-one-time-purchases>

[\[267\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=app%27s%20plan%20selection%20page%20URL,is%20edited) [\[269\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,apps%20by%20editing%20your%20pricing) [\[270\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=pricing,rendered%20in%20Shopify%20admin%20Your) [\[271\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=Shopify%20Partner%20Dashboard%2C%20without%20needing,and%20more%20consistent%20than%20coding) [\[272\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=your%20own%20billing%20logic%20using,0%20Image%3A%20Plan%20and) [\[273\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=your%20own%20billing%20logic%20using,From%20your%20Partner%20Dashboard%2C%20click) [\[274\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=can%20opt%20in%20to%20managed,or%20Manual%20billing%20with%20the) [\[275\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=API%20shopify.dev%20%20,Plan%20selection) [\[276\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=locale%20you%20want%20to%20update,Plan%20selection) [\[277\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=visible%20in%20the%20Shopify%20admin%2C,can%20validate%20that%20plan%20selection) [\[278\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=documentation%5D%28%2Fdocs%2Fapps%2Flaunch%2Fapp,and%20click%20the) [\[279\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=Under%20,where%20the%20merchant%20will%20be) [\[280\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=,where%20the%20merchant%20will%20be) [\[281\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=required%29%20Under%20,Save) [\[282\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=,Top) [\[283\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=listing,to%20a%20list%20of%20stores) [\[284\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=language.%20,Add) [\[285\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=up%20on%20your%20,to%20open%20the%20plan) [\[286\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=%28Optional%29%20Under%20,1.%20Click) [\[287\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=%2A%2ASave%2A%2A.%20,URL%20parameter) [\[288\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=graphql%2Fcurrent%2Fenums%2FAppSubscriptionStatus,protocol) [\[289\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=an%20%5Bexternal%20URL%5D%28%23external,protocol) [\[290\]](https://shopify.dev/docs/apps/launch/billing/managed-pricing#:~:text=Shopify%20Partner%20Dashboard%2C%20without%20needing,apps%20by%20editing%20your%20pricing) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/managed-pricing>

[\[291\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=page%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,Shopify%27s%20Remix) [\[292\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=example%20code%20in%20this%20section,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s) [\[293\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=rendered%20in%20the%20Shopify%20admin,pricing) [\[294\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=subscription%20plan%20check%20runs%20at,%3D%20await) [\[295\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=Shopify%20credentials%20to%20handle%20server,return%20redirect%28%60https%3A%2F%2Fadmin.shopify.com%2Fstor) [\[296\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%22cool,%2F%2F%20...Otherwise) [\[297\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=selection%20page%2C%20which%20requires%20both,admin%28request%29%3B%20%2F%2F%20Check) [\[298\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%22cool,apiKey%3A%20process.env.SHOPIFY_API_KEY) [\[300\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=user%20experience%20while%20working%20within,If%20there) [\[301\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%3D%20async%20%28,shop.myshopify.com%22%20const%20storeHandle%20%3D%20shop.replace%28%27.myshopify.com) [\[302\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=,from%20your) [\[303\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=page%5D%28%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fmanaged,remix%29%20package) [\[326\]](https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page#:~:text=%5B%40shopify%2Fshopify,https%3A%2F%2Fremix.run%2Fdocs%2Fen%2Fmain%2Froute%2Floader%29%20to%20check%20the%20user%E2%80%99s) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/redirect-plan-selection-page>

[\[299\]](https://community.shopify.dev/t/shopify-plan-selection-page/18922#:~:text=,const%20storeHandle%20%3D%20shop) Shopify Plan Selection Page - Partner Discussions - Shopify ...

<https://community.shopify.dev/t/shopify-plan-selection-page/18922>

[\[327\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=To%20receive%20a%20notification%20when,Admin%20API%27s%20APP_SUBSCRIPTIONS_UPDATE%20webhook%20topic) [\[340\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=A%20usage,day%20billing%20cycle) [\[341\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=) [\[342\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Make%20a%20request%20to%20the,mutation%20with%20the%20following%20information) [\[344\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Anchor%20to%20Step%202%3A%20Create,Create%20an%20app%20usage%20record) [\[345\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=mutation%20) [\[346\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=appUsageRecordCreate) [\[349\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=Anchor%20to%20Step%203%3A%20Monitor,3%3A%20Monitor%20app%20usage%20limits) [\[350\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions#:~:text=To%20receive%20a%20notification%20when,Admin%20API%27s%20APP_SUBSCRIPTIONS_UPDATE%20webhook%20topic) Create usage-based subscriptions

<https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-usage-based-subscriptions>

[\[329\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=A%20time,days%20and%20every%20365%20days) [\[330\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Anchor%20to%20RequirementsRequirements) [\[331\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=2,mutation%20with%20the%20following%20information) [\[332\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=,to%20provide%20the%20following%20information) [\[333\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Note) [\[334\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=1,of%20creating%20an%20app%20subscription) [\[335\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=Anchor%20to%20Step%202%3A%20Monitor,updatesStep%202%3A%20Monitor%20subscription%20updates) [\[338\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=2,mutation%20with%20the%20following%20information) [\[339\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions#:~:text=) Create time-based subscriptions

<https://shopify.dev/docs/apps/launch/billing/subscription-billing/create-time-based-subscriptions>

[\[336\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Pending%20The%20merchant%20hasn%27t%20yet,Activated) [\[337\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Frozen%20The%20subscription%20is%20on,after%20the%20subscription%20payments%20resume) [\[376\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=GraphQL%20Admin%20API%20resource%20Transaction,revenue%20and%20retrieve%20data%20on) [\[404\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Fview,Page%20Data%20App%20charge%20overview) [\[405\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=graphql,Partner) [\[406\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=that%20you%20want%20to%20check%2C,) [\[407\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=App%20charge%20overview) [\[408\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Dashboard%5D%28https%3A%2F%2Fwww.shopify.com%2Fpartners%29%2C%20click%20,From) [\[409\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=In%20the%20search%20results%2C%20select,In%20the) [\[410\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=App%20charge%20overview%20page%20,next%20to%20a%20transaction%20displays) [\[411\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=earnings,page%20listing%20details%20for%20a) [\[412\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=are%20associated%20with%20the%20charge,to%20issue%20a%20refund%20The) [\[413\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=the%20following%20details%3A%20,details) [\[414\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=overview%20page%20includes%20,Activated) [\[415\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=App%20charge%20overview%20page%20,of%20merchant%20payment%20transactions%20that) [\[416\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=overview%20page%20includes%20,Activated) [\[417\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Declined%20The%20merchant%20declined%20the,Canceled) [\[418\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=which%20the%20charge%20was%20created,Activated) [\[419\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Pending%20The%20merchant%20hasn%27t%20yet,Activated) [\[420\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Declined%20The%20merchant%20declined%20the,Canceled) [\[421\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=a%20merchant%27s%20app%20access%20after,Shopify%20freezes%20the%20charge) [\[422\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=Transaction%20data%20through%20the%20GraphQL,Example) [\[423\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=,The%20following%20is%20an%20example) [\[424\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=are%20associated%20with%20the%20charge,details) [\[425\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=with,Select%20the%20app) [\[426\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=code%20must%20be%20one%20of,page) [\[427\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=,The%20following%20is%20an%20example) [\[428\]](https://shopify.dev/docs/apps/launch/billing/view-charges-earnings#:~:text=,graphql%2Flatest%2Fobjects%2FAppSubscription) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/view-charges-earnings>

[\[343\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=You%20can%20implement%20a%20pricing,Make%20a%20request%20to%20the) [\[352\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=You%20can%20implement%20a%20pricing,day%20billing%20intervals) [\[353\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=graphql%2Flatest%2Fmutations%2FappSubscriptionCreate%23argument,following%20mutation%20is%20an%20example) [\[354\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage#:~:text=,The%20following%20is%20an%20example) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/subscription-billing/combine-time-and-usage>

[\[347\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,before%20you%20can%20create%20more) [\[348\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Update%20the%20maximum%20amount%20that,Make%20a%20request%20to%20the) [\[351\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Step%202%3A%20Update%20the%20capped,following%20mutation%20is%20an%20example) [\[363\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=Step%202%3A%20Update%20the%20capped,following%20mutation%20is%20an%20example) [\[364\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge#:~:text=create%20a%20usage%20record%20for,before%20you%20can%20create%20more) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/subscription-billing/update-max-charge>

[\[355\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=,merchants%20for%20more%20complex%20pricing) [\[356\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=,Modify%20each%20subscription%20to%20reflect) [\[357\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=billing,an%20example) [\[358\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=Step%201%3A%20Account%20for%20additional,the%20billing%20cycles%20and%2For%20usage) [\[359\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=billing%2Fcreate,2%3A%20Keep%20track%20of%20billing) [\[360\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=application.%20,The%20guide%20uses) [\[361\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=intervals%20and%20usage%20In%20your,desired%20amount%20every%20two%20weeks) [\[362\]](https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models#:~:text=product%20line%2C%20you%20can%20do,graphql%2Flatest%2Fmutations%2FappSubscriptionCreate%23examples) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/subscription-billing/complex-pricing-models>

[\[377\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=URL%3A%20https%3A%2F%2Fshopify.dev%2Fdocs%2Fapps%2Flaunch%2Fbilling%2Faward,a%20merchant%20installs%20an%20app) [\[378\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=credits%20to%20merchants%20who%27ve%20installed,works%20The%20amount%20of%20app) [\[379\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Merchants%20can%20use%20these%20app,Partner%20API%2C%20you%27ll%20need%20to) [\[380\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=implement%20triggers%20for%20the%20charge%2C,Award%20app) [\[381\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=credits%20from%20the%20Partner%20Dashboard,was%20successfully%20awarded%2C%20a%20new) [\[382\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Partner%20Dashboard%2C%20enter%20the%20name,Specify%20the%20currency) [\[383\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=the%20store%20page%2C%20next%20to,was%20successfully%20awarded%2C%20a%20new) [\[384\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=receiving%20the%20app%20credit%20can,managing%20staff%20member) [\[385\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=Limitations%20The%20total%20amount%20of,Next%20steps) [\[386\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=and%20amount%20to%20credit,can%20issue%20app%20credits%20by) [\[388\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=credits%20to%20merchants%20who%27ve%20installed,a%20merchant%20installs%20an%20app) [\[389\]](https://shopify.dev/docs/apps/launch/billing/award-app-credits#:~:text=implement%20triggers%20for%20the%20charge%2C,1.%20On%20the) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/award-app-credits>

[\[387\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Limitations%20The%20following%20are%20limitations,Apps%20can%27t%20issue%20refunds) [\[390\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=earnings%23app,button%20to%20issue%20the%20refund) [\[391\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Dashboard,Refund) [\[392\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=earnings%23app,to%20view%20your%20Shopify%20fee) [\[393\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=1,After%20the%20refund%20is) [\[394\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=invoices%5D%28https%3A%2F%2Fhelp.shopify.com%2Fpartners%2Fgetting,button%20to%20issue%20the%20refund) [\[395\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=invoices%5D%28https%3A%2F%2Fhelp.shopify.com%2Fpartners%2Fgetting,owners%20can%20issue%20refunds%20by) [\[396\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app%20charge%20through%20the%20,Partner) [\[397\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=isn%27t%20available.%20,access%29.) [\[398\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Limitations%20The%20following%20are%20limitations,process%20a%20refund%20that%20meets) [\[399\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app,To%20process%20a%20refund%20that) [\[400\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=this%20criterion%2C%20contact%20,Shopify) [\[401\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=refunds%20for%20invoices%20that%20are,) [\[402\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=Dashboard,After%20the%20refund%20is) [\[403\]](https://shopify.dev/docs/apps/launch/billing/refund-app-charges#:~:text=app,) shopify.dev

<https://shopify.dev/docs/apps/launch/billing/refund-app-charges>
